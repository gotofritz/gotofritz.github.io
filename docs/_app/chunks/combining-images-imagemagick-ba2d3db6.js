import{S as gi,i as vi,s as Di,e as o,t as i,j as v,c as d,a as r,d as t,g as s,l as D,b as h,f as l,F as e,J as nd}from"./vendor-e04e0de5.js";function xi(ri){let E,y,O,da,Rt,Y,ra,Nt,j,ii=`<code class="language-sh">$ convert *.png[400x400] -splice 0x10 \\
  -background &quot;#ffffff&quot;  -append  -crop -0+10 output.png</code>`,$t,x,Q,ia,U,sa,V,na,W,la,X,ha,Z,ca,ee,ma,te,fa,ae,pa,oe,ua,de,ga,re,va,ie,Da,se,xa,qt,T,k,ne,wa,Ft,J,ba,Yt,S,si=`<code class="language-sh">$ convert *.png -gravity south -splice 0x111 \\
  -shave 0x111 -resize 400x400  -splice 0x10 -background &quot;#ffffff&quot;  \\
  -append  -crop -0+10 output.png</code>`,Jt,m,le,_a,he,Ea,ce,ya,me,Ta,fe,ka,pe,Ma,ue,Ia,ge,za,ve,Ha,De,Pa,xe,Aa,we,Ca,be,La,_e,ja,Ee,Sa,ye,Ra,Te,Na,ke,$a,Me,qa,Ie,Fa,ze,Ya,He,Ja,Bt,M,I,Pe,Ba,Gt,B,Ga,Kt,R,ni=`<code class="language-sh">$ convert *.png -gravity south -splice 0x111 \\
  -shave 0x111 -resize 400x400  -set delay 300 output.gif</code>`,Ot,u,Ae,Ka,Ce,Oa,Le,Qa,je,Ua,Se,Va,Re,Wa,Ne,Xa,$e,Za,qe,eo,Fe,to,Ye,ao,Je,oo,Be,ro,Ge,io,Ke,so,Oe,no,Qt,z,H,Qe,lo,Ut,G,ho,Vt,N,li=`<code class="language-sh">$ convert *.png -resize 800x500^ -gravity center \\
  -crop  800x500+0+0 +repage -set delay 300 output.gif</code>`,Wt,g,Ue,co,Ve,mo,We,fo,Xe,po,Ze,uo,et,go,tt,vo,at,Do,ot,xo,dt,wo,rt,bo,it,_o,st,Eo,nt,yo,lt,To,ht,ko,Xt,P,A,ct,Mo,Zt,K,Io,ea,$,hi=`<code class="language-sh">$ convert *.png -gravity south \\
  -splice 0x111 -shave 0x111 -resize 400x400 converted.png
$ montage converted*.png -mode concatenate  -tile 2x2  output.png</code>`,ta,c,mt,zo,ft,Ho,pt,Po,ut,Ao,gt,Co,vt,Lo,Dt,jo,xt,So,wt,Ro,bt,No,_t,$o,Et,qo,yt,Fo,Tt,Yo,kt,Jo,Mt,Bo,It,Go,zt,Ko,Ht,Oo,Pt,Qo,At,Uo,Ct,Vo,Lt,Wo,jt,Xo,aa,C,L,St,Zo,oa,q,F,ed,td;return{c(){E=o("h2"),y=o("a"),O=o("span"),da=i("Combining images vertically with a line separating them"),Rt=v(),Y=o("p"),ra=i("This is useful for combining a few images into a single vertical strip, with a 10px white border between each image, like the portrait photos from photo boots."),Nt=v(),j=o("pre"),$t=v(),x=o("dl"),Q=o("dt"),ia=i("convert"),U=o("dd"),sa=i("calls up one of the ImageMagick commands, convert"),V=o("dt"),na=i("*.png[400x400] "),W=o("dd"),la=i("an expression using wildcards to match all png images in the current folder, and resize each as it is read so that neither width and height are greater than 400px"),X=o("dt"),ha=i("-splice 0x10"),Z=o("dd"),ca=i("add a 10px vertical border to each image"),ee=o("dt"),ma=i('-background "#ffffff"'),te=o("dd"),fa=i("make that border white (using HTML color ocde)"),ae=o("dt"),pa=i("-append"),oe=o("dd"),ua=i("combine images vertically - use +append to combine them horizontally"),de=o("dt"),ga=i("-crop -0+10"),re=o("dd"),va=i("crop the top 10 pixels from the combined image, as we want the borders only between images"),ie=o("dt"),Da=i("output.png"),se=o("dd"),xa=i("this is the result image file. It could just as easily be a .jpg"),qt=v(),T=o("h2"),k=o("a"),ne=o("span"),wa=i("Removing window artefacts from the top of the images first"),Ft=v(),J=o("p"),ba=i("If you have, say, a bunch of screenshots with the address bar etc at the top, you need to modify the command to get rid of it first. This time you can\u2019t use the shortcut resize."),Yt=v(),S=o("pre"),Jt=v(),m=o("dl"),le=o("dt"),_a=i("convert"),he=o("dd"),Ea=i("calls up one of the ImageMagick commands, convert"),ce=o("dt"),ya=i("*.png "),me=o("dd"),Ta=i("an expression using wildcards to match all png images in the current folder"),fe=o("dt"),ka=i("-gravity south"),pe=o("dd"),Ma=i("aligns the next command(s) bottom"),ue=o("dt"),Ia=i("-splice 0x111"),ge=o("dd"),za=i("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),ve=o("dt"),Ha=i("-shave 0x111"),De=o("dd"),Pa=i("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),xe=o("dt"),Aa=i("-resize 400x400 "),we=o("dd"),Ca=i("now i can resize so that the image does not exceed 400 px either direction. From now on carry on as for previous command"),be=o("dt"),La=i("-splice 0x10"),_e=o("dd"),ja=i("add a 10px vertical border to each image"),Ee=o("dt"),Sa=i('-background "#ffffff"'),ye=o("dd"),Ra=i("make that border white (using HTML color ocde)"),Te=o("dt"),Na=i("-append"),ke=o("dd"),$a=i("combine images vertically - use +append to combine them horizontally"),Me=o("dt"),qa=i("-crop -0+10"),Ie=o("dd"),Fa=i("crop the top 10 pixels from the combined image, as we want the borders only between images"),ze=o("dt"),Ya=i("output.png"),He=o("dd"),Ja=i("this is the result image file. It could just as easily be a .jpg"),Bt=v(),M=o("h2"),I=o("a"),Pe=o("span"),Ba=i("Combining images into an animated gif"),Gt=v(),B=o("p"),Ga=i("If instead you\u2019d rather create an animated gif, here\u2019s the simplest way to do it - without any of the powerful options that ImageMagick offers."),Kt=v(),R=o("pre"),Ot=v(),u=o("dl"),Ae=o("dt"),Ka=i("convert"),Ce=o("dd"),Oa=i("calls up one of the ImageMagick commands, "),Le=o("dt"),Qa=i("*.png "),je=o("dd"),Ua=i("an expression using wildcards to match all png images in the current folder"),Se=o("dt"),Va=i("-gravity south"),Re=o("dd"),Wa=i("aligns the next command(s) bottom"),Ne=o("dt"),Xa=i("-splice 0x111"),$e=o("dd"),Za=i("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),qe=o("dt"),eo=i("-shave 0x111"),Fe=o("dd"),to=i("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Ye=o("dt"),ao=i("-resize 400x400 "),Je=o("dd"),oo=i("now i can resize so that the image does not exceed 400 px either direction"),Be=o("dt"),ro=i("-set delay 300"),Ge=o("dd"),io=i("adds a three seconds delay between all images"),Ke=o("dt"),so=i("output.gif"),Oe=o("dd"),no=i("that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Qt=v(),z=o("h2"),H=o("a"),Qe=o("span"),lo=i("Cropping a set of images to the same size and animating them"),Ut=v(),G=o("p"),ho=i("If the images in the gif are of different size you may want to do something about that. Here they are cropped to a minimum common size, the extra pixels discarded."),Vt=v(),N=o("pre"),Wt=v(),g=o("dl"),Ue=o("dt"),co=i("convert"),Ve=o("dd"),mo=i("calls up one of the ImageMagick commands, "),We=o("dt"),fo=i("*.png "),Xe=o("dd"),po=i("an expression using wildcards to match all png images in the current folder"),Ze=o("dt"),uo=i("-resize 800x500^"),et=o("dd"),go=i("the ^ after the dimensions means those are the minimum sizes rather then the maximum"),tt=o("dt"),vo=i("-gravity center"),at=o("dd"),Do=i("aligns the next command(s)"),ot=o("dt"),xo=i("-crop  800x500+0+0"),dt=o("dd"),wo=i("crops to 800x500, with no offest (0,0)"),rt=o("dt"),bo=i("+repage"),it=o("dd"),_o=i("resets the origin after the crop"),st=o("dt"),Eo=i("-set delay 300"),nt=o("dd"),yo=i("adds a three seconds delay between all images"),lt=o("dt"),To=i("output.gif"),ht=o("dd"),ko=i("that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Xt=v(),P=o("h2"),A=o("a"),ct=o("span"),Mo=i("Arranging images in a grid"),Zt=v(),K=o("p"),Io=i("This is actually two commands, one after the other - one to resize and crop the images, the other to arrange them."),ea=v(),$=o("pre"),ta=v(),c=o("dl"),mt=o("dt"),zo=i("convert"),ft=o("dd"),Ho=i("calls up one of the ImageMagick commands, convert"),pt=o("dt"),Po=i("*.png "),ut=o("dd"),Ao=i("an expression using wildcards to match all png images in the current folder"),gt=o("dt"),Co=i("-gravity south"),vt=o("dd"),Lo=i("aligns the next command(s) bottom"),Dt=o("dt"),jo=i("-splice 0x111"),xt=o("dd"),So=i("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),wt=o("dt"),Ro=i("-shave 0x111"),bt=o("dd"),No=i("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),_t=o("dt"),$o=i("-resize 400x400 "),Et=o("dd"),qo=i("now i can resize so that the image does not exceed 400 px either direction"),yt=o("dt"),Fo=i("converted.png"),Tt=o("dd"),Yo=i("for each input image, it creates a correspoding output image in the current folder named converted-1.png, converted-2.png..."),kt=o("dt"),Jo=i("montage"),Mt=o("dd"),Bo=i("calls up one of the ImageMagick commands, montage"),It=o("dt"),Go=i("converted*.png"),zt=o("dd"),Ko=i("this time only match the images whose name start with 'converted', i.e. the ones created by the previous command"),Ht=o("dt"),Oo=i("-mode concatenate"),Pt=o("dd"),Qo=i("arranges them in a grid"),At=o("dt"),Uo=i("-tile 2x2"),Ct=o("dd"),Vo=i("in this particular case, it is a 2x2 grid as I only had four images. You can use x2 or 2x to keep the number of rows and columns respectively fixed at 2, and the other dimension filled in with however many images you have"),Lt=o("dt"),Wo=i("output.png"),jt=o("dd"),Xo=i("...and here comes the image"),aa=v(),C=o("h2"),L=o("a"),St=o("span"),Zo=i("More"),oa=v(),q=o("p"),F=o("a"),ed=i("More ImageMagick commands"),td=i("."),this.h()},l(a){E=d(a,"H2",{id:!0});var n=r(E);y=d(n,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ld=r(y);O=d(ld,"SPAN",{class:!0}),r(O).forEach(t),ld.forEach(t),da=s(n,"Combining images vertically with a line separating them"),n.forEach(t),Rt=D(a),Y=d(a,"P",{});var hd=r(Y);ra=s(hd,"This is useful for combining a few images into a single vertical strip, with a 10px white border between each image, like the portrait photos from photo boots."),hd.forEach(t),Nt=D(a),j=d(a,"PRE",{class:!0});var ci=r(j);ci.forEach(t),$t=D(a),x=d(a,"DL",{class:!0});var _=r(x);Q=d(_,"DT",{});var cd=r(Q);ia=s(cd,"convert"),cd.forEach(t),U=d(_,"DD",{});var md=r(U);sa=s(md,"calls up one of the ImageMagick commands, convert"),md.forEach(t),V=d(_,"DT",{});var fd=r(V);na=s(fd,"*.png[400x400] "),fd.forEach(t),W=d(_,"DD",{});var pd=r(W);la=s(pd,"an expression using wildcards to match all png images in the current folder, and resize each as it is read so that neither width and height are greater than 400px"),pd.forEach(t),X=d(_,"DT",{});var ud=r(X);ha=s(ud,"-splice 0x10"),ud.forEach(t),Z=d(_,"DD",{});var gd=r(Z);ca=s(gd,"add a 10px vertical border to each image"),gd.forEach(t),ee=d(_,"DT",{});var vd=r(ee);ma=s(vd,'-background "#ffffff"'),vd.forEach(t),te=d(_,"DD",{});var Dd=r(te);fa=s(Dd,"make that border white (using HTML color ocde)"),Dd.forEach(t),ae=d(_,"DT",{});var xd=r(ae);pa=s(xd,"-append"),xd.forEach(t),oe=d(_,"DD",{});var wd=r(oe);ua=s(wd,"combine images vertically - use +append to combine them horizontally"),wd.forEach(t),de=d(_,"DT",{});var bd=r(de);ga=s(bd,"-crop -0+10"),bd.forEach(t),re=d(_,"DD",{});var _d=r(re);va=s(_d,"crop the top 10 pixels from the combined image, as we want the borders only between images"),_d.forEach(t),ie=d(_,"DT",{});var Ed=r(ie);Da=s(Ed,"output.png"),Ed.forEach(t),se=d(_,"DD",{});var yd=r(se);xa=s(yd,"this is the result image file. It could just as easily be a .jpg"),yd.forEach(t),_.forEach(t),qt=D(a),T=d(a,"H2",{id:!0});var ad=r(T);k=d(ad,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Td=r(k);ne=d(Td,"SPAN",{class:!0}),r(ne).forEach(t),Td.forEach(t),wa=s(ad,"Removing window artefacts from the top of the images first"),ad.forEach(t),Ft=D(a),J=d(a,"P",{});var kd=r(J);ba=s(kd,"If you have, say, a bunch of screenshots with the address bar etc at the top, you need to modify the command to get rid of it first. This time you can\u2019t use the shortcut resize."),kd.forEach(t),Yt=D(a),S=d(a,"PRE",{class:!0});var mi=r(S);mi.forEach(t),Jt=D(a),m=d(a,"DL",{class:!0});var p=r(m);le=d(p,"DT",{});var Md=r(le);_a=s(Md,"convert"),Md.forEach(t),he=d(p,"DD",{});var Id=r(he);Ea=s(Id,"calls up one of the ImageMagick commands, convert"),Id.forEach(t),ce=d(p,"DT",{});var zd=r(ce);ya=s(zd,"*.png "),zd.forEach(t),me=d(p,"DD",{});var Hd=r(me);Ta=s(Hd,"an expression using wildcards to match all png images in the current folder"),Hd.forEach(t),fe=d(p,"DT",{});var Pd=r(fe);ka=s(Pd,"-gravity south"),Pd.forEach(t),pe=d(p,"DD",{});var Ad=r(pe);Ma=s(Ad,"aligns the next command(s) bottom"),Ad.forEach(t),ue=d(p,"DT",{});var Cd=r(ue);Ia=s(Cd,"-splice 0x111"),Cd.forEach(t),ge=d(p,"DD",{});var Ld=r(ge);za=s(Ld,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Ld.forEach(t),ve=d(p,"DT",{});var jd=r(ve);Ha=s(jd,"-shave 0x111"),jd.forEach(t),De=d(p,"DD",{});var Sd=r(De);Pa=s(Sd,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Sd.forEach(t),xe=d(p,"DT",{});var Rd=r(xe);Aa=s(Rd,"-resize 400x400 "),Rd.forEach(t),we=d(p,"DD",{});var Nd=r(we);Ca=s(Nd,"now i can resize so that the image does not exceed 400 px either direction. From now on carry on as for previous command"),Nd.forEach(t),be=d(p,"DT",{});var $d=r(be);La=s($d,"-splice 0x10"),$d.forEach(t),_e=d(p,"DD",{});var qd=r(_e);ja=s(qd,"add a 10px vertical border to each image"),qd.forEach(t),Ee=d(p,"DT",{});var Fd=r(Ee);Sa=s(Fd,'-background "#ffffff"'),Fd.forEach(t),ye=d(p,"DD",{});var Yd=r(ye);Ra=s(Yd,"make that border white (using HTML color ocde)"),Yd.forEach(t),Te=d(p,"DT",{});var Jd=r(Te);Na=s(Jd,"-append"),Jd.forEach(t),ke=d(p,"DD",{});var Bd=r(ke);$a=s(Bd,"combine images vertically - use +append to combine them horizontally"),Bd.forEach(t),Me=d(p,"DT",{});var Gd=r(Me);qa=s(Gd,"-crop -0+10"),Gd.forEach(t),Ie=d(p,"DD",{});var Kd=r(Ie);Fa=s(Kd,"crop the top 10 pixels from the combined image, as we want the borders only between images"),Kd.forEach(t),ze=d(p,"DT",{});var Od=r(ze);Ya=s(Od,"output.png"),Od.forEach(t),He=d(p,"DD",{});var Qd=r(He);Ja=s(Qd,"this is the result image file. It could just as easily be a .jpg"),Qd.forEach(t),p.forEach(t),Bt=D(a),M=d(a,"H2",{id:!0});var od=r(M);I=d(od,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ud=r(I);Pe=d(Ud,"SPAN",{class:!0}),r(Pe).forEach(t),Ud.forEach(t),Ba=s(od,"Combining images into an animated gif"),od.forEach(t),Gt=D(a),B=d(a,"P",{});var Vd=r(B);Ga=s(Vd,"If instead you\u2019d rather create an animated gif, here\u2019s the simplest way to do it - without any of the powerful options that ImageMagick offers."),Vd.forEach(t),Kt=D(a),R=d(a,"PRE",{class:!0});var fi=r(R);fi.forEach(t),Ot=D(a),u=d(a,"DL",{class:!0});var w=r(u);Ae=d(w,"DT",{});var Wd=r(Ae);Ka=s(Wd,"convert"),Wd.forEach(t),Ce=d(w,"DD",{});var Xd=r(Ce);Oa=s(Xd,"calls up one of the ImageMagick commands, "),Xd.forEach(t),Le=d(w,"DT",{});var Zd=r(Le);Qa=s(Zd,"*.png "),Zd.forEach(t),je=d(w,"DD",{});var er=r(je);Ua=s(er,"an expression using wildcards to match all png images in the current folder"),er.forEach(t),Se=d(w,"DT",{});var tr=r(Se);Va=s(tr,"-gravity south"),tr.forEach(t),Re=d(w,"DD",{});var ar=r(Re);Wa=s(ar,"aligns the next command(s) bottom"),ar.forEach(t),Ne=d(w,"DT",{});var or=r(Ne);Xa=s(or,"-splice 0x111"),or.forEach(t),$e=d(w,"DD",{});var dr=r($e);Za=s(dr,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),dr.forEach(t),qe=d(w,"DT",{});var rr=r(qe);eo=s(rr,"-shave 0x111"),rr.forEach(t),Fe=d(w,"DD",{});var ir=r(Fe);to=s(ir,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),ir.forEach(t),Ye=d(w,"DT",{});var sr=r(Ye);ao=s(sr,"-resize 400x400 "),sr.forEach(t),Je=d(w,"DD",{});var nr=r(Je);oo=s(nr,"now i can resize so that the image does not exceed 400 px either direction"),nr.forEach(t),Be=d(w,"DT",{});var lr=r(Be);ro=s(lr,"-set delay 300"),lr.forEach(t),Ge=d(w,"DD",{});var hr=r(Ge);io=s(hr,"adds a three seconds delay between all images"),hr.forEach(t),Ke=d(w,"DT",{});var cr=r(Ke);so=s(cr,"output.gif"),cr.forEach(t),Oe=d(w,"DD",{});var mr=r(Oe);no=s(mr,"that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),mr.forEach(t),w.forEach(t),Qt=D(a),z=d(a,"H2",{id:!0});var dd=r(z);H=d(dd,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var fr=r(H);Qe=d(fr,"SPAN",{class:!0}),r(Qe).forEach(t),fr.forEach(t),lo=s(dd,"Cropping a set of images to the same size and animating them"),dd.forEach(t),Ut=D(a),G=d(a,"P",{});var pr=r(G);ho=s(pr,"If the images in the gif are of different size you may want to do something about that. Here they are cropped to a minimum common size, the extra pixels discarded."),pr.forEach(t),Vt=D(a),N=d(a,"PRE",{class:!0});var pi=r(N);pi.forEach(t),Wt=D(a),g=d(a,"DL",{class:!0});var b=r(g);Ue=d(b,"DT",{});var ur=r(Ue);co=s(ur,"convert"),ur.forEach(t),Ve=d(b,"DD",{});var gr=r(Ve);mo=s(gr,"calls up one of the ImageMagick commands, "),gr.forEach(t),We=d(b,"DT",{});var vr=r(We);fo=s(vr,"*.png "),vr.forEach(t),Xe=d(b,"DD",{});var Dr=r(Xe);po=s(Dr,"an expression using wildcards to match all png images in the current folder"),Dr.forEach(t),Ze=d(b,"DT",{});var xr=r(Ze);uo=s(xr,"-resize 800x500^"),xr.forEach(t),et=d(b,"DD",{});var wr=r(et);go=s(wr,"the ^ after the dimensions means those are the minimum sizes rather then the maximum"),wr.forEach(t),tt=d(b,"DT",{});var br=r(tt);vo=s(br,"-gravity center"),br.forEach(t),at=d(b,"DD",{});var _r=r(at);Do=s(_r,"aligns the next command(s)"),_r.forEach(t),ot=d(b,"DT",{});var Er=r(ot);xo=s(Er,"-crop  800x500+0+0"),Er.forEach(t),dt=d(b,"DD",{});var yr=r(dt);wo=s(yr,"crops to 800x500, with no offest (0,0)"),yr.forEach(t),rt=d(b,"DT",{});var Tr=r(rt);bo=s(Tr,"+repage"),Tr.forEach(t),it=d(b,"DD",{});var kr=r(it);_o=s(kr,"resets the origin after the crop"),kr.forEach(t),st=d(b,"DT",{});var Mr=r(st);Eo=s(Mr,"-set delay 300"),Mr.forEach(t),nt=d(b,"DD",{});var Ir=r(nt);yo=s(Ir,"adds a three seconds delay between all images"),Ir.forEach(t),lt=d(b,"DT",{});var zr=r(lt);To=s(zr,"output.gif"),zr.forEach(t),ht=d(b,"DD",{});var Hr=r(ht);ko=s(Hr,"that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Hr.forEach(t),b.forEach(t),Xt=D(a),P=d(a,"H2",{id:!0});var rd=r(P);A=d(rd,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Pr=r(A);ct=d(Pr,"SPAN",{class:!0}),r(ct).forEach(t),Pr.forEach(t),Mo=s(rd,"Arranging images in a grid"),rd.forEach(t),Zt=D(a),K=d(a,"P",{});var Ar=r(K);Io=s(Ar,"This is actually two commands, one after the other - one to resize and crop the images, the other to arrange them."),Ar.forEach(t),ea=D(a),$=d(a,"PRE",{class:!0});var ui=r($);ui.forEach(t),ta=D(a),c=d(a,"DL",{class:!0});var f=r(c);mt=d(f,"DT",{});var Cr=r(mt);zo=s(Cr,"convert"),Cr.forEach(t),ft=d(f,"DD",{});var Lr=r(ft);Ho=s(Lr,"calls up one of the ImageMagick commands, convert"),Lr.forEach(t),pt=d(f,"DT",{});var jr=r(pt);Po=s(jr,"*.png "),jr.forEach(t),ut=d(f,"DD",{});var Sr=r(ut);Ao=s(Sr,"an expression using wildcards to match all png images in the current folder"),Sr.forEach(t),gt=d(f,"DT",{});var Rr=r(gt);Co=s(Rr,"-gravity south"),Rr.forEach(t),vt=d(f,"DD",{});var Nr=r(vt);Lo=s(Nr,"aligns the next command(s) bottom"),Nr.forEach(t),Dt=d(f,"DT",{});var $r=r(Dt);jo=s($r,"-splice 0x111"),$r.forEach(t),xt=d(f,"DD",{});var qr=r(xt);So=s(qr,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),qr.forEach(t),wt=d(f,"DT",{});var Fr=r(wt);Ro=s(Fr,"-shave 0x111"),Fr.forEach(t),bt=d(f,"DD",{});var Yr=r(bt);No=s(Yr,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Yr.forEach(t),_t=d(f,"DT",{});var Jr=r(_t);$o=s(Jr,"-resize 400x400 "),Jr.forEach(t),Et=d(f,"DD",{});var Br=r(Et);qo=s(Br,"now i can resize so that the image does not exceed 400 px either direction"),Br.forEach(t),yt=d(f,"DT",{});var Gr=r(yt);Fo=s(Gr,"converted.png"),Gr.forEach(t),Tt=d(f,"DD",{});var Kr=r(Tt);Yo=s(Kr,"for each input image, it creates a correspoding output image in the current folder named converted-1.png, converted-2.png..."),Kr.forEach(t),kt=d(f,"DT",{});var Or=r(kt);Jo=s(Or,"montage"),Or.forEach(t),Mt=d(f,"DD",{});var Qr=r(Mt);Bo=s(Qr,"calls up one of the ImageMagick commands, montage"),Qr.forEach(t),It=d(f,"DT",{});var Ur=r(It);Go=s(Ur,"converted*.png"),Ur.forEach(t),zt=d(f,"DD",{});var Vr=r(zt);Ko=s(Vr,"this time only match the images whose name start with 'converted', i.e. the ones created by the previous command"),Vr.forEach(t),Ht=d(f,"DT",{});var Wr=r(Ht);Oo=s(Wr,"-mode concatenate"),Wr.forEach(t),Pt=d(f,"DD",{});var Xr=r(Pt);Qo=s(Xr,"arranges them in a grid"),Xr.forEach(t),At=d(f,"DT",{});var Zr=r(At);Uo=s(Zr,"-tile 2x2"),Zr.forEach(t),Ct=d(f,"DD",{});var ei=r(Ct);Vo=s(ei,"in this particular case, it is a 2x2 grid as I only had four images. You can use x2 or 2x to keep the number of rows and columns respectively fixed at 2, and the other dimension filled in with however many images you have"),ei.forEach(t),Lt=d(f,"DT",{});var ti=r(Lt);Wo=s(ti,"output.png"),ti.forEach(t),jt=d(f,"DD",{});var ai=r(jt);Xo=s(ai,"...and here comes the image"),ai.forEach(t),f.forEach(t),aa=D(a),C=d(a,"H2",{id:!0});var id=r(C);L=d(id,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var oi=r(L);St=d(oi,"SPAN",{class:!0}),r(St).forEach(t),oi.forEach(t),Zo=s(id,"More"),id.forEach(t),oa=D(a),q=d(a,"P",{});var sd=r(q);F=d(sd,"A",{href:!0,rel:!0});var di=r(F);ed=s(di,"More ImageMagick commands"),di.forEach(t),td=s(sd,"."),sd.forEach(t),this.h()},h(){h(O,"class","icon icon-link"),h(y,"aria-hidden","true"),h(y,"tabindex","-1"),h(y,"href","#combining-images-vertically-with-a-line-separating-them"),h(E,"id","combining-images-vertically-with-a-line-separating-them"),h(j,"class","language-sh"),h(x,"class","code-breakdown"),h(ne,"class","icon icon-link"),h(k,"aria-hidden","true"),h(k,"tabindex","-1"),h(k,"href","#removing-window-artefacts-from-the-top-of-the-images-first"),h(T,"id","removing-window-artefacts-from-the-top-of-the-images-first"),h(S,"class","language-sh"),h(m,"class","code-breakdown"),h(Pe,"class","icon icon-link"),h(I,"aria-hidden","true"),h(I,"tabindex","-1"),h(I,"href","#combining-images-into-an-animated-gif"),h(M,"id","combining-images-into-an-animated-gif"),h(R,"class","language-sh"),h(u,"class","code-breakdown"),h(Qe,"class","icon icon-link"),h(H,"aria-hidden","true"),h(H,"tabindex","-1"),h(H,"href","#cropping-a-set-of-images-to-the-same-size-and-animating-them"),h(z,"id","cropping-a-set-of-images-to-the-same-size-and-animating-them"),h(N,"class","language-sh"),h(g,"class","code-breakdown"),h(ct,"class","icon icon-link"),h(A,"aria-hidden","true"),h(A,"tabindex","-1"),h(A,"href","#arranging-images-in-a-grid"),h(P,"id","arranging-images-in-a-grid"),h($,"class","language-sh"),h(c,"class","code-breakdown"),h(St,"class","icon icon-link"),h(L,"aria-hidden","true"),h(L,"tabindex","-1"),h(L,"href","#more"),h(C,"id","more"),h(F,"href","http://www.imagemagick.org/script/command-line-processing.php#anatomy"),h(F,"rel","nofollow")},m(a,n){l(a,E,n),e(E,y),e(y,O),e(E,da),l(a,Rt,n),l(a,Y,n),e(Y,ra),l(a,Nt,n),l(a,j,n),j.innerHTML=ii,l(a,$t,n),l(a,x,n),e(x,Q),e(Q,ia),e(x,U),e(U,sa),e(x,V),e(V,na),e(x,W),e(W,la),e(x,X),e(X,ha),e(x,Z),e(Z,ca),e(x,ee),e(ee,ma),e(x,te),e(te,fa),e(x,ae),e(ae,pa),e(x,oe),e(oe,ua),e(x,de),e(de,ga),e(x,re),e(re,va),e(x,ie),e(ie,Da),e(x,se),e(se,xa),l(a,qt,n),l(a,T,n),e(T,k),e(k,ne),e(T,wa),l(a,Ft,n),l(a,J,n),e(J,ba),l(a,Yt,n),l(a,S,n),S.innerHTML=si,l(a,Jt,n),l(a,m,n),e(m,le),e(le,_a),e(m,he),e(he,Ea),e(m,ce),e(ce,ya),e(m,me),e(me,Ta),e(m,fe),e(fe,ka),e(m,pe),e(pe,Ma),e(m,ue),e(ue,Ia),e(m,ge),e(ge,za),e(m,ve),e(ve,Ha),e(m,De),e(De,Pa),e(m,xe),e(xe,Aa),e(m,we),e(we,Ca),e(m,be),e(be,La),e(m,_e),e(_e,ja),e(m,Ee),e(Ee,Sa),e(m,ye),e(ye,Ra),e(m,Te),e(Te,Na),e(m,ke),e(ke,$a),e(m,Me),e(Me,qa),e(m,Ie),e(Ie,Fa),e(m,ze),e(ze,Ya),e(m,He),e(He,Ja),l(a,Bt,n),l(a,M,n),e(M,I),e(I,Pe),e(M,Ba),l(a,Gt,n),l(a,B,n),e(B,Ga),l(a,Kt,n),l(a,R,n),R.innerHTML=ni,l(a,Ot,n),l(a,u,n),e(u,Ae),e(Ae,Ka),e(u,Ce),e(Ce,Oa),e(u,Le),e(Le,Qa),e(u,je),e(je,Ua),e(u,Se),e(Se,Va),e(u,Re),e(Re,Wa),e(u,Ne),e(Ne,Xa),e(u,$e),e($e,Za),e(u,qe),e(qe,eo),e(u,Fe),e(Fe,to),e(u,Ye),e(Ye,ao),e(u,Je),e(Je,oo),e(u,Be),e(Be,ro),e(u,Ge),e(Ge,io),e(u,Ke),e(Ke,so),e(u,Oe),e(Oe,no),l(a,Qt,n),l(a,z,n),e(z,H),e(H,Qe),e(z,lo),l(a,Ut,n),l(a,G,n),e(G,ho),l(a,Vt,n),l(a,N,n),N.innerHTML=li,l(a,Wt,n),l(a,g,n),e(g,Ue),e(Ue,co),e(g,Ve),e(Ve,mo),e(g,We),e(We,fo),e(g,Xe),e(Xe,po),e(g,Ze),e(Ze,uo),e(g,et),e(et,go),e(g,tt),e(tt,vo),e(g,at),e(at,Do),e(g,ot),e(ot,xo),e(g,dt),e(dt,wo),e(g,rt),e(rt,bo),e(g,it),e(it,_o),e(g,st),e(st,Eo),e(g,nt),e(nt,yo),e(g,lt),e(lt,To),e(g,ht),e(ht,ko),l(a,Xt,n),l(a,P,n),e(P,A),e(A,ct),e(P,Mo),l(a,Zt,n),l(a,K,n),e(K,Io),l(a,ea,n),l(a,$,n),$.innerHTML=hi,l(a,ta,n),l(a,c,n),e(c,mt),e(mt,zo),e(c,ft),e(ft,Ho),e(c,pt),e(pt,Po),e(c,ut),e(ut,Ao),e(c,gt),e(gt,Co),e(c,vt),e(vt,Lo),e(c,Dt),e(Dt,jo),e(c,xt),e(xt,So),e(c,wt),e(wt,Ro),e(c,bt),e(bt,No),e(c,_t),e(_t,$o),e(c,Et),e(Et,qo),e(c,yt),e(yt,Fo),e(c,Tt),e(Tt,Yo),e(c,kt),e(kt,Jo),e(c,Mt),e(Mt,Bo),e(c,It),e(It,Go),e(c,zt),e(zt,Ko),e(c,Ht),e(Ht,Oo),e(c,Pt),e(Pt,Qo),e(c,At),e(At,Uo),e(c,Ct),e(Ct,Vo),e(c,Lt),e(Lt,Wo),e(c,jt),e(jt,Xo),l(a,aa,n),l(a,C,n),e(C,L),e(L,St),e(C,Zo),l(a,oa,n),l(a,q,n),e(q,F),e(F,ed),e(q,td)},p:nd,i:nd,o:nd,d(a){a&&t(E),a&&t(Rt),a&&t(Y),a&&t(Nt),a&&t(j),a&&t($t),a&&t(x),a&&t(qt),a&&t(T),a&&t(Ft),a&&t(J),a&&t(Yt),a&&t(S),a&&t(Jt),a&&t(m),a&&t(Bt),a&&t(M),a&&t(Gt),a&&t(B),a&&t(Kt),a&&t(R),a&&t(Ot),a&&t(u),a&&t(Qt),a&&t(z),a&&t(Ut),a&&t(G),a&&t(Vt),a&&t(N),a&&t(Wt),a&&t(g),a&&t(Xt),a&&t(P),a&&t(Zt),a&&t(K),a&&t(ea),a&&t($),a&&t(ta),a&&t(c),a&&t(aa),a&&t(C),a&&t(oa),a&&t(q)}}}const bi={date:"2011-12-22 12:34",title:"Combining images with ImageMagick",prev:"google-apps-script-boilerplate",next:"change-title-cmd-window",excerpt:'Assorted <a href="http://www.imagemagick.org/script/index.php">ImageMagick</a> commands for combining images',tags:["imagemagick"]};class _i extends gi{constructor(E){super();vi(this,E,null,xi,Di,{})}}export{_i as default,bi as metadata};
