import{S as hs,i as cs,s as ms,e as o,t as s,j as v,c as d,a as r,g as i,d as t,l as D,b as f,f as l,F as e,J as Wo}from"./vendor-e04e0de5.js";function fs(Zr){let b,R,Xt,Ct,$,Zt,Lt,y,es=`<code class="language-sh">$ convert *.png[400x400] -splice 0x10 \\
  -background &quot;#ffffff&quot;  -append  -crop -0+10 output.png</code>`,Pt,w,O,ea,Q,ta,U,aa,V,oa,W,da,X,ra,Z,sa,ee,ia,te,na,ae,la,oe,ha,de,ca,re,ma,se,fa,jt,T,q,pa,At,F,ga,Rt,k,ts=`<code class="language-sh">$ convert *.png -gravity south -splice 0x111 \\
  -shave 0x111 -resize 400x400  -splice 0x10 -background &quot;#ffffff&quot;  \\
  -append  -crop -0+10 output.png</code>`,$t,c,ie,ua,ne,va,le,Da,he,wa,ce,_a,me,xa,fe,Ea,pe,ba,ge,ya,ue,Ta,ve,ka,De,Ma,we,Ia,_e,za,xe,Ha,Ee,Ca,be,La,ye,Pa,Te,ja,ke,Aa,Me,Ra,Ie,$a,qt,M,S,qa,Ft,Y,Fa,St,I,as=`<code class="language-sh">$ convert *.png -gravity south -splice 0x111 \\
  -shave 0x111 -resize 400x400  -set delay 300 output.gif</code>`,Yt,g,ze,Sa,He,Ya,Ce,Ja,Le,Ba,Pe,Ga,je,Ka,Ae,Na,Re,Oa,$e,Qa,qe,Ua,Fe,Va,Se,Wa,Ye,Xa,Je,Za,Be,eo,Ge,to,Jt,z,J,ao,Bt,B,oo,Gt,H,os=`<code class="language-sh">$ convert *.png -resize 800x500^ -gravity center \\
  -crop  800x500+0+0 +repage -set delay 300 output.gif</code>`,Kt,u,Ke,ro,Ne,so,Oe,io,Qe,no,Ue,lo,Ve,ho,We,co,Xe,mo,Ze,fo,et,po,tt,go,at,uo,ot,vo,dt,Do,rt,wo,st,_o,Nt,C,G,xo,Ot,K,Eo,Qt,L,ds=`<code class="language-sh">$ convert *.png -gravity south \\
  -splice 0x111 -shave 0x111 -resize 400x400 converted.png
$ montage converted*.png -mode concatenate  -tile 2x2  output.png</code>`,Ut,h,it,bo,nt,yo,lt,To,ht,ko,ct,Mo,mt,Io,ft,zo,pt,Ho,gt,Co,ut,Lo,vt,Po,Dt,jo,wt,Ao,_t,Ro,xt,$o,Et,qo,bt,Fo,yt,So,Tt,Yo,kt,Jo,Mt,Bo,It,Go,zt,Ko,Ht,No,Vt,P,N,Oo,Wt,j,A,Qo,Uo;return{c(){b=o("h2"),R=o("a"),Xt=s("Combining images vertically with a line separating them"),Ct=v(),$=o("p"),Zt=s("This is useful for combining a few images into a single vertical strip, with a 10px white border between each image, like the portrait photos from photo boots."),Lt=v(),y=o("pre"),Pt=v(),w=o("dl"),O=o("dt"),ea=s("convert"),Q=o("dd"),ta=s("calls up one of the ImageMagick commands, convert"),U=o("dt"),aa=s("*.png[400x400] "),V=o("dd"),oa=s("an expression using wildcards to match all png images in the current folder, and resize each as it is read so that neither width and height are greater than 400px"),W=o("dt"),da=s("-splice 0x10"),X=o("dd"),ra=s("add a 10px vertical border to each image"),Z=o("dt"),sa=s('-background "#ffffff"'),ee=o("dd"),ia=s("make that border white (using HTML color ocde)"),te=o("dt"),na=s("-append"),ae=o("dd"),la=s("combine images vertically - use +append to combine them horizontally"),oe=o("dt"),ha=s("-crop -0+10"),de=o("dd"),ca=s("crop the top 10 pixels from the combined image, as we want the borders only between images"),re=o("dt"),ma=s("output.png"),se=o("dd"),fa=s("this is the result image file. It could just as easily be a .jpg"),jt=v(),T=o("h2"),q=o("a"),pa=s("Removing window artefacts from the top of the images first"),At=v(),F=o("p"),ga=s("If you have, say, a bunch of screenshots with the address bar etc at the top, you need to modify the command to get rid of it first. This time you can\u2019t use the shortcut resize."),Rt=v(),k=o("pre"),$t=v(),c=o("dl"),ie=o("dt"),ua=s("convert"),ne=o("dd"),va=s("calls up one of the ImageMagick commands, convert"),le=o("dt"),Da=s("*.png "),he=o("dd"),wa=s("an expression using wildcards to match all png images in the current folder"),ce=o("dt"),_a=s("-gravity south"),me=o("dd"),xa=s("aligns the next command(s) bottom"),fe=o("dt"),Ea=s("-splice 0x111"),pe=o("dd"),ba=s("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),ge=o("dt"),ya=s("-shave 0x111"),ue=o("dd"),Ta=s("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),ve=o("dt"),ka=s("-resize 400x400 "),De=o("dd"),Ma=s("now i can resize so that the image does not exceed 400 px either direction. From now on carry on as for previous command"),we=o("dt"),Ia=s("-splice 0x10"),_e=o("dd"),za=s("add a 10px vertical border to each image"),xe=o("dt"),Ha=s('-background "#ffffff"'),Ee=o("dd"),Ca=s("make that border white (using HTML color ocde)"),be=o("dt"),La=s("-append"),ye=o("dd"),Pa=s("combine images vertically - use +append to combine them horizontally"),Te=o("dt"),ja=s("-crop -0+10"),ke=o("dd"),Aa=s("crop the top 10 pixels from the combined image, as we want the borders only between images"),Me=o("dt"),Ra=s("output.png"),Ie=o("dd"),$a=s("this is the result image file. It could just as easily be a .jpg"),qt=v(),M=o("h2"),S=o("a"),qa=s("Combining images into an animated gif"),Ft=v(),Y=o("p"),Fa=s("If instead you\u2019d rather create an animated gif, here\u2019s the simplest way to do it - without any of the powerful options that ImageMagick offers."),St=v(),I=o("pre"),Yt=v(),g=o("dl"),ze=o("dt"),Sa=s("convert"),He=o("dd"),Ya=s("calls up one of the ImageMagick commands, "),Ce=o("dt"),Ja=s("*.png "),Le=o("dd"),Ba=s("an expression using wildcards to match all png images in the current folder"),Pe=o("dt"),Ga=s("-gravity south"),je=o("dd"),Ka=s("aligns the next command(s) bottom"),Ae=o("dt"),Na=s("-splice 0x111"),Re=o("dd"),Oa=s("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),$e=o("dt"),Qa=s("-shave 0x111"),qe=o("dd"),Ua=s("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Fe=o("dt"),Va=s("-resize 400x400 "),Se=o("dd"),Wa=s("now i can resize so that the image does not exceed 400 px either direction"),Ye=o("dt"),Xa=s("-set delay 300"),Je=o("dd"),Za=s("adds a three seconds delay between all images"),Be=o("dt"),eo=s("output.gif"),Ge=o("dd"),to=s("that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Jt=v(),z=o("h2"),J=o("a"),ao=s("Cropping a set of images to the same size and animating them"),Bt=v(),B=o("p"),oo=s("If the images in the gif are of different size you may want to do something about that. Here they are cropped to a minimum common size, the extra pixels discarded."),Gt=v(),H=o("pre"),Kt=v(),u=o("dl"),Ke=o("dt"),ro=s("convert"),Ne=o("dd"),so=s("calls up one of the ImageMagick commands, "),Oe=o("dt"),io=s("*.png "),Qe=o("dd"),no=s("an expression using wildcards to match all png images in the current folder"),Ue=o("dt"),lo=s("-resize 800x500^"),Ve=o("dd"),ho=s("the ^ after the dimensions means those are the minimum sizes rather then the maximum"),We=o("dt"),co=s("-gravity center"),Xe=o("dd"),mo=s("aligns the next command(s)"),Ze=o("dt"),fo=s("-crop  800x500+0+0"),et=o("dd"),po=s("crops to 800x500, with no offest (0,0)"),tt=o("dt"),go=s("+repage"),at=o("dd"),uo=s("resets the origin after the crop"),ot=o("dt"),vo=s("-set delay 300"),dt=o("dd"),Do=s("adds a three seconds delay between all images"),rt=o("dt"),wo=s("output.gif"),st=o("dd"),_o=s("that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Nt=v(),C=o("h2"),G=o("a"),xo=s("Arranging images in a grid"),Ot=v(),K=o("p"),Eo=s("This is actually two commands, one after the other - one to resize and crop the images, the other to arrange them."),Qt=v(),L=o("pre"),Ut=v(),h=o("dl"),it=o("dt"),bo=s("convert"),nt=o("dd"),yo=s("calls up one of the ImageMagick commands, convert"),lt=o("dt"),To=s("*.png "),ht=o("dd"),ko=s("an expression using wildcards to match all png images in the current folder"),ct=o("dt"),Mo=s("-gravity south"),mt=o("dd"),Io=s("aligns the next command(s) bottom"),ft=o("dt"),zo=s("-splice 0x111"),pt=o("dd"),Ho=s("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),gt=o("dt"),Co=s("-shave 0x111"),ut=o("dd"),Lo=s("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),vt=o("dt"),Po=s("-resize 400x400 "),Dt=o("dd"),jo=s("now i can resize so that the image does not exceed 400 px either direction"),wt=o("dt"),Ao=s("converted.png"),_t=o("dd"),Ro=s("for each input image, it creates a correspoding output image in the current folder named converted-1.png, converted-2.png..."),xt=o("dt"),$o=s("montage"),Et=o("dd"),qo=s("calls up one of the ImageMagick commands, montage"),bt=o("dt"),Fo=s("converted*.png"),yt=o("dd"),So=s("this time only match the images whose name start with 'converted', i.e. the ones created by the previous command"),Tt=o("dt"),Yo=s("-mode concatenate"),kt=o("dd"),Jo=s("arranges them in a grid"),Mt=o("dt"),Bo=s("-tile 2x2"),It=o("dd"),Go=s("in this particular case, it is a 2x2 grid as I only had four images. You can use x2 or 2x to keep the number of rows and columns respectively fixed at 2, and the other dimension filled in with however many images you have"),zt=o("dt"),Ko=s("output.png"),Ht=o("dd"),No=s("...and here comes the image"),Vt=v(),P=o("h2"),N=o("a"),Oo=s("More"),Wt=v(),j=o("p"),A=o("a"),Qo=s("More ImageMagick commands"),Uo=s("."),this.h()},l(a){b=d(a,"H2",{id:!0});var n=r(b);R=d(n,"A",{href:!0});var Xo=r(R);Xt=i(Xo,"Combining images vertically with a line separating them"),Xo.forEach(t),n.forEach(t),Ct=D(a),$=d(a,"P",{});var Zo=r($);Zt=i(Zo,"This is useful for combining a few images into a single vertical strip, with a 10px white border between each image, like the portrait photos from photo boots."),Zo.forEach(t),Lt=D(a),y=d(a,"PRE",{class:!0});var rs=r(y);rs.forEach(t),Pt=D(a),w=d(a,"DL",{class:!0});var E=r(w);O=d(E,"DT",{});var ed=r(O);ea=i(ed,"convert"),ed.forEach(t),Q=d(E,"DD",{});var td=r(Q);ta=i(td,"calls up one of the ImageMagick commands, convert"),td.forEach(t),U=d(E,"DT",{});var ad=r(U);aa=i(ad,"*.png[400x400] "),ad.forEach(t),V=d(E,"DD",{});var od=r(V);oa=i(od,"an expression using wildcards to match all png images in the current folder, and resize each as it is read so that neither width and height are greater than 400px"),od.forEach(t),W=d(E,"DT",{});var dd=r(W);da=i(dd,"-splice 0x10"),dd.forEach(t),X=d(E,"DD",{});var rd=r(X);ra=i(rd,"add a 10px vertical border to each image"),rd.forEach(t),Z=d(E,"DT",{});var sd=r(Z);sa=i(sd,'-background "#ffffff"'),sd.forEach(t),ee=d(E,"DD",{});var id=r(ee);ia=i(id,"make that border white (using HTML color ocde)"),id.forEach(t),te=d(E,"DT",{});var nd=r(te);na=i(nd,"-append"),nd.forEach(t),ae=d(E,"DD",{});var ld=r(ae);la=i(ld,"combine images vertically - use +append to combine them horizontally"),ld.forEach(t),oe=d(E,"DT",{});var hd=r(oe);ha=i(hd,"-crop -0+10"),hd.forEach(t),de=d(E,"DD",{});var cd=r(de);ca=i(cd,"crop the top 10 pixels from the combined image, as we want the borders only between images"),cd.forEach(t),re=d(E,"DT",{});var md=r(re);ma=i(md,"output.png"),md.forEach(t),se=d(E,"DD",{});var fd=r(se);fa=i(fd,"this is the result image file. It could just as easily be a .jpg"),fd.forEach(t),E.forEach(t),jt=D(a),T=d(a,"H2",{id:!0});var pd=r(T);q=d(pd,"A",{href:!0});var gd=r(q);pa=i(gd,"Removing window artefacts from the top of the images first"),gd.forEach(t),pd.forEach(t),At=D(a),F=d(a,"P",{});var ud=r(F);ga=i(ud,"If you have, say, a bunch of screenshots with the address bar etc at the top, you need to modify the command to get rid of it first. This time you can\u2019t use the shortcut resize."),ud.forEach(t),Rt=D(a),k=d(a,"PRE",{class:!0});var ss=r(k);ss.forEach(t),$t=D(a),c=d(a,"DL",{class:!0});var p=r(c);ie=d(p,"DT",{});var vd=r(ie);ua=i(vd,"convert"),vd.forEach(t),ne=d(p,"DD",{});var Dd=r(ne);va=i(Dd,"calls up one of the ImageMagick commands, convert"),Dd.forEach(t),le=d(p,"DT",{});var wd=r(le);Da=i(wd,"*.png "),wd.forEach(t),he=d(p,"DD",{});var _d=r(he);wa=i(_d,"an expression using wildcards to match all png images in the current folder"),_d.forEach(t),ce=d(p,"DT",{});var xd=r(ce);_a=i(xd,"-gravity south"),xd.forEach(t),me=d(p,"DD",{});var Ed=r(me);xa=i(Ed,"aligns the next command(s) bottom"),Ed.forEach(t),fe=d(p,"DT",{});var bd=r(fe);Ea=i(bd,"-splice 0x111"),bd.forEach(t),pe=d(p,"DD",{});var yd=r(pe);ba=i(yd,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),yd.forEach(t),ge=d(p,"DT",{});var Td=r(ge);ya=i(Td,"-shave 0x111"),Td.forEach(t),ue=d(p,"DD",{});var kd=r(ue);Ta=i(kd,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),kd.forEach(t),ve=d(p,"DT",{});var Md=r(ve);ka=i(Md,"-resize 400x400 "),Md.forEach(t),De=d(p,"DD",{});var Id=r(De);Ma=i(Id,"now i can resize so that the image does not exceed 400 px either direction. From now on carry on as for previous command"),Id.forEach(t),we=d(p,"DT",{});var zd=r(we);Ia=i(zd,"-splice 0x10"),zd.forEach(t),_e=d(p,"DD",{});var Hd=r(_e);za=i(Hd,"add a 10px vertical border to each image"),Hd.forEach(t),xe=d(p,"DT",{});var Cd=r(xe);Ha=i(Cd,'-background "#ffffff"'),Cd.forEach(t),Ee=d(p,"DD",{});var Ld=r(Ee);Ca=i(Ld,"make that border white (using HTML color ocde)"),Ld.forEach(t),be=d(p,"DT",{});var Pd=r(be);La=i(Pd,"-append"),Pd.forEach(t),ye=d(p,"DD",{});var jd=r(ye);Pa=i(jd,"combine images vertically - use +append to combine them horizontally"),jd.forEach(t),Te=d(p,"DT",{});var Ad=r(Te);ja=i(Ad,"-crop -0+10"),Ad.forEach(t),ke=d(p,"DD",{});var Rd=r(ke);Aa=i(Rd,"crop the top 10 pixels from the combined image, as we want the borders only between images"),Rd.forEach(t),Me=d(p,"DT",{});var $d=r(Me);Ra=i($d,"output.png"),$d.forEach(t),Ie=d(p,"DD",{});var qd=r(Ie);$a=i(qd,"this is the result image file. It could just as easily be a .jpg"),qd.forEach(t),p.forEach(t),qt=D(a),M=d(a,"H2",{id:!0});var Fd=r(M);S=d(Fd,"A",{href:!0});var Sd=r(S);qa=i(Sd,"Combining images into an animated gif"),Sd.forEach(t),Fd.forEach(t),Ft=D(a),Y=d(a,"P",{});var Yd=r(Y);Fa=i(Yd,"If instead you\u2019d rather create an animated gif, here\u2019s the simplest way to do it - without any of the powerful options that ImageMagick offers."),Yd.forEach(t),St=D(a),I=d(a,"PRE",{class:!0});var is=r(I);is.forEach(t),Yt=D(a),g=d(a,"DL",{class:!0});var _=r(g);ze=d(_,"DT",{});var Jd=r(ze);Sa=i(Jd,"convert"),Jd.forEach(t),He=d(_,"DD",{});var Bd=r(He);Ya=i(Bd,"calls up one of the ImageMagick commands, "),Bd.forEach(t),Ce=d(_,"DT",{});var Gd=r(Ce);Ja=i(Gd,"*.png "),Gd.forEach(t),Le=d(_,"DD",{});var Kd=r(Le);Ba=i(Kd,"an expression using wildcards to match all png images in the current folder"),Kd.forEach(t),Pe=d(_,"DT",{});var Nd=r(Pe);Ga=i(Nd,"-gravity south"),Nd.forEach(t),je=d(_,"DD",{});var Od=r(je);Ka=i(Od,"aligns the next command(s) bottom"),Od.forEach(t),Ae=d(_,"DT",{});var Qd=r(Ae);Na=i(Qd,"-splice 0x111"),Qd.forEach(t),Re=d(_,"DD",{});var Ud=r(Re);Oa=i(Ud,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Ud.forEach(t),$e=d(_,"DT",{});var Vd=r($e);Qa=i(Vd,"-shave 0x111"),Vd.forEach(t),qe=d(_,"DD",{});var Wd=r(qe);Ua=i(Wd,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Wd.forEach(t),Fe=d(_,"DT",{});var Xd=r(Fe);Va=i(Xd,"-resize 400x400 "),Xd.forEach(t),Se=d(_,"DD",{});var Zd=r(Se);Wa=i(Zd,"now i can resize so that the image does not exceed 400 px either direction"),Zd.forEach(t),Ye=d(_,"DT",{});var er=r(Ye);Xa=i(er,"-set delay 300"),er.forEach(t),Je=d(_,"DD",{});var tr=r(Je);Za=i(tr,"adds a three seconds delay between all images"),tr.forEach(t),Be=d(_,"DT",{});var ar=r(Be);eo=i(ar,"output.gif"),ar.forEach(t),Ge=d(_,"DD",{});var or=r(Ge);to=i(or,"that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),or.forEach(t),_.forEach(t),Jt=D(a),z=d(a,"H2",{id:!0});var dr=r(z);J=d(dr,"A",{href:!0});var rr=r(J);ao=i(rr,"Cropping a set of images to the same size and animating them"),rr.forEach(t),dr.forEach(t),Bt=D(a),B=d(a,"P",{});var sr=r(B);oo=i(sr,"If the images in the gif are of different size you may want to do something about that. Here they are cropped to a minimum common size, the extra pixels discarded."),sr.forEach(t),Gt=D(a),H=d(a,"PRE",{class:!0});var ns=r(H);ns.forEach(t),Kt=D(a),u=d(a,"DL",{class:!0});var x=r(u);Ke=d(x,"DT",{});var ir=r(Ke);ro=i(ir,"convert"),ir.forEach(t),Ne=d(x,"DD",{});var nr=r(Ne);so=i(nr,"calls up one of the ImageMagick commands, "),nr.forEach(t),Oe=d(x,"DT",{});var lr=r(Oe);io=i(lr,"*.png "),lr.forEach(t),Qe=d(x,"DD",{});var hr=r(Qe);no=i(hr,"an expression using wildcards to match all png images in the current folder"),hr.forEach(t),Ue=d(x,"DT",{});var cr=r(Ue);lo=i(cr,"-resize 800x500^"),cr.forEach(t),Ve=d(x,"DD",{});var mr=r(Ve);ho=i(mr,"the ^ after the dimensions means those are the minimum sizes rather then the maximum"),mr.forEach(t),We=d(x,"DT",{});var fr=r(We);co=i(fr,"-gravity center"),fr.forEach(t),Xe=d(x,"DD",{});var pr=r(Xe);mo=i(pr,"aligns the next command(s)"),pr.forEach(t),Ze=d(x,"DT",{});var gr=r(Ze);fo=i(gr,"-crop  800x500+0+0"),gr.forEach(t),et=d(x,"DD",{});var ur=r(et);po=i(ur,"crops to 800x500, with no offest (0,0)"),ur.forEach(t),tt=d(x,"DT",{});var vr=r(tt);go=i(vr,"+repage"),vr.forEach(t),at=d(x,"DD",{});var Dr=r(at);uo=i(Dr,"resets the origin after the crop"),Dr.forEach(t),ot=d(x,"DT",{});var wr=r(ot);vo=i(wr,"-set delay 300"),wr.forEach(t),dt=d(x,"DD",{});var _r=r(dt);Do=i(_r,"adds a three seconds delay between all images"),_r.forEach(t),rt=d(x,"DT",{});var xr=r(rt);wo=i(xr,"output.gif"),xr.forEach(t),st=d(x,"DD",{});var Er=r(st);_o=i(Er,"that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Er.forEach(t),x.forEach(t),Nt=D(a),C=d(a,"H2",{id:!0});var br=r(C);G=d(br,"A",{href:!0});var yr=r(G);xo=i(yr,"Arranging images in a grid"),yr.forEach(t),br.forEach(t),Ot=D(a),K=d(a,"P",{});var Tr=r(K);Eo=i(Tr,"This is actually two commands, one after the other - one to resize and crop the images, the other to arrange them."),Tr.forEach(t),Qt=D(a),L=d(a,"PRE",{class:!0});var ls=r(L);ls.forEach(t),Ut=D(a),h=d(a,"DL",{class:!0});var m=r(h);it=d(m,"DT",{});var kr=r(it);bo=i(kr,"convert"),kr.forEach(t),nt=d(m,"DD",{});var Mr=r(nt);yo=i(Mr,"calls up one of the ImageMagick commands, convert"),Mr.forEach(t),lt=d(m,"DT",{});var Ir=r(lt);To=i(Ir,"*.png "),Ir.forEach(t),ht=d(m,"DD",{});var zr=r(ht);ko=i(zr,"an expression using wildcards to match all png images in the current folder"),zr.forEach(t),ct=d(m,"DT",{});var Hr=r(ct);Mo=i(Hr,"-gravity south"),Hr.forEach(t),mt=d(m,"DD",{});var Cr=r(mt);Io=i(Cr,"aligns the next command(s) bottom"),Cr.forEach(t),ft=d(m,"DT",{});var Lr=r(ft);zo=i(Lr,"-splice 0x111"),Lr.forEach(t),pt=d(m,"DD",{});var Pr=r(pt);Ho=i(Pr,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Pr.forEach(t),gt=d(m,"DT",{});var jr=r(gt);Co=i(jr,"-shave 0x111"),jr.forEach(t),ut=d(m,"DD",{});var Ar=r(ut);Lo=i(Ar,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Ar.forEach(t),vt=d(m,"DT",{});var Rr=r(vt);Po=i(Rr,"-resize 400x400 "),Rr.forEach(t),Dt=d(m,"DD",{});var $r=r(Dt);jo=i($r,"now i can resize so that the image does not exceed 400 px either direction"),$r.forEach(t),wt=d(m,"DT",{});var qr=r(wt);Ao=i(qr,"converted.png"),qr.forEach(t),_t=d(m,"DD",{});var Fr=r(_t);Ro=i(Fr,"for each input image, it creates a correspoding output image in the current folder named converted-1.png, converted-2.png..."),Fr.forEach(t),xt=d(m,"DT",{});var Sr=r(xt);$o=i(Sr,"montage"),Sr.forEach(t),Et=d(m,"DD",{});var Yr=r(Et);qo=i(Yr,"calls up one of the ImageMagick commands, montage"),Yr.forEach(t),bt=d(m,"DT",{});var Jr=r(bt);Fo=i(Jr,"converted*.png"),Jr.forEach(t),yt=d(m,"DD",{});var Br=r(yt);So=i(Br,"this time only match the images whose name start with 'converted', i.e. the ones created by the previous command"),Br.forEach(t),Tt=d(m,"DT",{});var Gr=r(Tt);Yo=i(Gr,"-mode concatenate"),Gr.forEach(t),kt=d(m,"DD",{});var Kr=r(kt);Jo=i(Kr,"arranges them in a grid"),Kr.forEach(t),Mt=d(m,"DT",{});var Nr=r(Mt);Bo=i(Nr,"-tile 2x2"),Nr.forEach(t),It=d(m,"DD",{});var Or=r(It);Go=i(Or,"in this particular case, it is a 2x2 grid as I only had four images. You can use x2 or 2x to keep the number of rows and columns respectively fixed at 2, and the other dimension filled in with however many images you have"),Or.forEach(t),zt=d(m,"DT",{});var Qr=r(zt);Ko=i(Qr,"output.png"),Qr.forEach(t),Ht=d(m,"DD",{});var Ur=r(Ht);No=i(Ur,"...and here comes the image"),Ur.forEach(t),m.forEach(t),Vt=D(a),P=d(a,"H2",{id:!0});var Vr=r(P);N=d(Vr,"A",{href:!0});var Wr=r(N);Oo=i(Wr,"More"),Wr.forEach(t),Vr.forEach(t),Wt=D(a),j=d(a,"P",{});var Vo=r(j);A=d(Vo,"A",{href:!0,rel:!0});var Xr=r(A);Qo=i(Xr,"More ImageMagick commands"),Xr.forEach(t),Uo=i(Vo,"."),Vo.forEach(t),this.h()},h(){f(R,"href","#combining-images-vertically-with-a-line-separating-them"),f(b,"id","combining-images-vertically-with-a-line-separating-them"),f(y,"class","language-sh"),f(w,"class","code-breakdown"),f(q,"href","#removing-window-artefacts-from-the-top-of-the-images-first"),f(T,"id","removing-window-artefacts-from-the-top-of-the-images-first"),f(k,"class","language-sh"),f(c,"class","code-breakdown"),f(S,"href","#combining-images-into-an-animated-gif"),f(M,"id","combining-images-into-an-animated-gif"),f(I,"class","language-sh"),f(g,"class","code-breakdown"),f(J,"href","#cropping-a-set-of-images-to-the-same-size-and-animating-them"),f(z,"id","cropping-a-set-of-images-to-the-same-size-and-animating-them"),f(H,"class","language-sh"),f(u,"class","code-breakdown"),f(G,"href","#arranging-images-in-a-grid"),f(C,"id","arranging-images-in-a-grid"),f(L,"class","language-sh"),f(h,"class","code-breakdown"),f(N,"href","#more"),f(P,"id","more"),f(A,"href","http://www.imagemagick.org/script/command-line-processing.php#anatomy"),f(A,"rel","nofollow")},m(a,n){l(a,b,n),e(b,R),e(R,Xt),l(a,Ct,n),l(a,$,n),e($,Zt),l(a,Lt,n),l(a,y,n),y.innerHTML=es,l(a,Pt,n),l(a,w,n),e(w,O),e(O,ea),e(w,Q),e(Q,ta),e(w,U),e(U,aa),e(w,V),e(V,oa),e(w,W),e(W,da),e(w,X),e(X,ra),e(w,Z),e(Z,sa),e(w,ee),e(ee,ia),e(w,te),e(te,na),e(w,ae),e(ae,la),e(w,oe),e(oe,ha),e(w,de),e(de,ca),e(w,re),e(re,ma),e(w,se),e(se,fa),l(a,jt,n),l(a,T,n),e(T,q),e(q,pa),l(a,At,n),l(a,F,n),e(F,ga),l(a,Rt,n),l(a,k,n),k.innerHTML=ts,l(a,$t,n),l(a,c,n),e(c,ie),e(ie,ua),e(c,ne),e(ne,va),e(c,le),e(le,Da),e(c,he),e(he,wa),e(c,ce),e(ce,_a),e(c,me),e(me,xa),e(c,fe),e(fe,Ea),e(c,pe),e(pe,ba),e(c,ge),e(ge,ya),e(c,ue),e(ue,Ta),e(c,ve),e(ve,ka),e(c,De),e(De,Ma),e(c,we),e(we,Ia),e(c,_e),e(_e,za),e(c,xe),e(xe,Ha),e(c,Ee),e(Ee,Ca),e(c,be),e(be,La),e(c,ye),e(ye,Pa),e(c,Te),e(Te,ja),e(c,ke),e(ke,Aa),e(c,Me),e(Me,Ra),e(c,Ie),e(Ie,$a),l(a,qt,n),l(a,M,n),e(M,S),e(S,qa),l(a,Ft,n),l(a,Y,n),e(Y,Fa),l(a,St,n),l(a,I,n),I.innerHTML=as,l(a,Yt,n),l(a,g,n),e(g,ze),e(ze,Sa),e(g,He),e(He,Ya),e(g,Ce),e(Ce,Ja),e(g,Le),e(Le,Ba),e(g,Pe),e(Pe,Ga),e(g,je),e(je,Ka),e(g,Ae),e(Ae,Na),e(g,Re),e(Re,Oa),e(g,$e),e($e,Qa),e(g,qe),e(qe,Ua),e(g,Fe),e(Fe,Va),e(g,Se),e(Se,Wa),e(g,Ye),e(Ye,Xa),e(g,Je),e(Je,Za),e(g,Be),e(Be,eo),e(g,Ge),e(Ge,to),l(a,Jt,n),l(a,z,n),e(z,J),e(J,ao),l(a,Bt,n),l(a,B,n),e(B,oo),l(a,Gt,n),l(a,H,n),H.innerHTML=os,l(a,Kt,n),l(a,u,n),e(u,Ke),e(Ke,ro),e(u,Ne),e(Ne,so),e(u,Oe),e(Oe,io),e(u,Qe),e(Qe,no),e(u,Ue),e(Ue,lo),e(u,Ve),e(Ve,ho),e(u,We),e(We,co),e(u,Xe),e(Xe,mo),e(u,Ze),e(Ze,fo),e(u,et),e(et,po),e(u,tt),e(tt,go),e(u,at),e(at,uo),e(u,ot),e(ot,vo),e(u,dt),e(dt,Do),e(u,rt),e(rt,wo),e(u,st),e(st,_o),l(a,Nt,n),l(a,C,n),e(C,G),e(G,xo),l(a,Ot,n),l(a,K,n),e(K,Eo),l(a,Qt,n),l(a,L,n),L.innerHTML=ds,l(a,Ut,n),l(a,h,n),e(h,it),e(it,bo),e(h,nt),e(nt,yo),e(h,lt),e(lt,To),e(h,ht),e(ht,ko),e(h,ct),e(ct,Mo),e(h,mt),e(mt,Io),e(h,ft),e(ft,zo),e(h,pt),e(pt,Ho),e(h,gt),e(gt,Co),e(h,ut),e(ut,Lo),e(h,vt),e(vt,Po),e(h,Dt),e(Dt,jo),e(h,wt),e(wt,Ao),e(h,_t),e(_t,Ro),e(h,xt),e(xt,$o),e(h,Et),e(Et,qo),e(h,bt),e(bt,Fo),e(h,yt),e(yt,So),e(h,Tt),e(Tt,Yo),e(h,kt),e(kt,Jo),e(h,Mt),e(Mt,Bo),e(h,It),e(It,Go),e(h,zt),e(zt,Ko),e(h,Ht),e(Ht,No),l(a,Vt,n),l(a,P,n),e(P,N),e(N,Oo),l(a,Wt,n),l(a,j,n),e(j,A),e(A,Qo),e(j,Uo)},p:Wo,i:Wo,o:Wo,d(a){a&&t(b),a&&t(Ct),a&&t($),a&&t(Lt),a&&t(y),a&&t(Pt),a&&t(w),a&&t(jt),a&&t(T),a&&t(At),a&&t(F),a&&t(Rt),a&&t(k),a&&t($t),a&&t(c),a&&t(qt),a&&t(M),a&&t(Ft),a&&t(Y),a&&t(St),a&&t(I),a&&t(Yt),a&&t(g),a&&t(Jt),a&&t(z),a&&t(Bt),a&&t(B),a&&t(Gt),a&&t(H),a&&t(Kt),a&&t(u),a&&t(Nt),a&&t(C),a&&t(Ot),a&&t(K),a&&t(Qt),a&&t(L),a&&t(Ut),a&&t(h),a&&t(Vt),a&&t(P),a&&t(Wt),a&&t(j)}}}const gs={date:"2011-12-22 12:34",title:"Combining images with ImageMagick",prev:"google-apps-script-boilerplate",next:"change-title-cmd-window",excerpt:'Assorted <a href="http://www.imagemagick.org/script/index.php">ImageMagick</a> commands for combining images',tags:["imagemagick"]};class us extends hs{constructor(b){super();cs(this,b,null,fs,ms,{})}}export{us as default,gs as metadata};
