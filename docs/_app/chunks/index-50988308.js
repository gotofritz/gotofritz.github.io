import {
  S as fi,
  i as ni,
  s as ui,
  e as l,
  t as a,
  j as n,
  c as i,
  a as f,
  g as r,
  d as t,
  l as u,
  b as d,
  a0 as Bl,
  f as p,
  G as o,
  L as Ks,
} from "./vendor-b6749e9b.js";
var di = "/_app/assets/penguins-b7dc7505.mp4";
function hi(Ql) {
  let v,
    ao,
    j,
    ro,
    po,
    et,
    se,
    fo,
    tt,
    m,
    Oe,
    A,
    no,
    Te,
    uo,
    ho,
    co,
    Ce,
    F,
    vo,
    De,
    mo,
    yo,
    Eo,
    He,
    R,
    wo,
    je,
    _o,
    bo,
    ot,
    le,
    ko,
    st,
    lt,
    it,
    S,
    ie,
    Po,
    at,
    y,
    Io,
    Ae,
    xo,
    go,
    L,
    Oo,
    To,
    rt,
    E,
    Co,
    Fe,
    Do,
    Ho,
    Re,
    jo,
    Ao,
    pt,
    M,
    Xl = `<code class="language-undefined">/blog/my-first-post.md
/blog/my-first-post/index.md</code>`,
    ft,
    w,
    Fo,
    Se,
    Ro,
    So,
    Le,
    Lo,
    Mo,
    nt,
    Y,
    ei = `<code class="language-md"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml">title: My First Post
date: 2021-07-09
preview: This text will be used for the preview instead of the first paragraph</span>
<span class="token punctuation">---</span></span>

(your content here)</code>`,
    ut,
    x,
    Yo,
    Me,
    qo,
    zo,
    dt,
    ht,
    ct,
    q,
    ae,
    Go,
    vt,
    _,
    Vo,
    Ye,
    Ko,
    No,
    qe,
    Wo,
    Uo,
    mt,
    g,
    $o,
    z,
    Jo,
    Zo,
    yt,
    re,
    pe,
    Ns,
    Et,
    fe,
    Bo,
    wt,
    _t,
    bt,
    G,
    ne,
    Qo,
    kt,
    h,
    Xo,
    ze,
    es,
    ts,
    Ge,
    os,
    ss,
    Ve,
    ls,
    is,
    Pt,
    V,
    O,
    as,
    Ke,
    rs,
    ps,
    It,
    P,
    Ne,
    fs,
    ns,
    We,
    us,
    ds,
    xt,
    ue,
    hs,
    gt,
    Ot,
    Tt,
    K,
    de,
    cs,
    Ct,
    I,
    vs,
    N,
    ms,
    ys,
    Ue,
    Es,
    Dt,
    b,
    ws,
    $e,
    _s,
    bs,
    W,
    ks,
    Ps,
    Ht,
    U,
    ti = `<code class="language-javascript"><span class="token keyword">function</span> <span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> <span class="token string">'Hello World'</span>
<span class="token punctuation">&#125;</span></code>`,
    jt,
    At,
    Ft,
    $,
    he,
    Is,
    Rt,
    T,
    xs,
    Je,
    gs,
    Os,
    St,
    J,
    ce,
    Ts,
    Lt,
    ve,
    Cs,
    Mt,
    Z,
    oi =
      '<code class="language-md"><span class="token url"><span class="token operator">!</span>[<span class="token content">my video</span>](<span class="token url">/videos/my-cool-video.mp4</span>)</span></code>',
    Yt,
    B,
    me,
    Ds,
    qt,
    C,
    Hs,
    Q,
    js,
    As,
    zt,
    X,
    si =
      '<code class="language-md"><span class="token url"><span class="token operator">!</span>[<span class="token content">penguins</span>](<span class="token url">./penguins.mp4</span>)</span></code>',
    Gt,
    ye,
    c,
    Ws,
    Vt,
    Kt,
    Nt,
    ee,
    Ee,
    Fs,
    Wt,
    k,
    Rs,
    Ze,
    Ss,
    Ls,
    Be,
    Ms,
    Ys,
    Ut,
    $t,
    Jt,
    te,
    we,
    qs,
    Zt,
    D,
    zs,
    oe,
    Gs,
    Vs;
  return {
    c() {
      (v = l("p")),
        (ao = a(
          "Thanks for checking out my blog template. It\u2019s based on the blog I built for my own ",
        )),
        (j = l("a")),
        (ro = a("website")),
        (po = a(
          " and I hope this is a good starting point for you to start yours.",
        )),
        (et = n()),
        (se = l("p")),
        (fo = a("Let\u2019s go over a few quick things:")),
        (tt = n()),
        (m = l("ul")),
        (Oe = l("li")),
        (A = l("p")),
        (no = a("First things first, you should edit the ")),
        (Te = l("code")),
        (uo = a("src/lib/info.js")),
        (ho = a(
          " file to contain your information. This will properly update the parts of the website that display your name and the SEO tags for your posts.",
        )),
        (co = n()),
        (Ce = l("li")),
        (F = l("p")),
        (vo = a(
          "This template is configured to use the static adapter. If you intend to add SSR you will need to change it to something like ",
        )),
        (De = l("code")),
        (mo = a("@sveltejs/adapter-node")),
        (yo = a(" or your preferred hosting adapter (vercel, netlify, etc).")),
        (Eo = n()),
        (He = l("li")),
        (R = l("p")),
        (wo = a("This template was built using ")),
        (je = l("code")),
        (_o = a("@sveltejs/kit@1.0.0-next.218")),
        (bo = a(
          ". I\u2019ll keep it updated when I can, but be aware that there things might break since SvelteKit is still in beta.",
        )),
        (ot = n()),
        (le = l("p")),
        (ko = a(
          "Now that that\u2019s out of the way, let\u2019s learn about how to make posts.",
        )),
        (st = n()),
        (lt = l("hr")),
        (it = n()),
        (S = l("h2")),
        (ie = l("a")),
        (Po = a("Creating a Post")),
        (at = n()),
        (y = l("p")),
        (Io = a("All of your posts (including this one) are located in ")),
        (Ae = l("code")),
        (xo = a("/posts")),
        (go = a(
          ". They are written in markdown and parsed with mdsvex. If you\u2019re unfamiliar with mdsvex, I would recommend ",
        )),
        (L = l("a")),
        (Oo = a("looking at the website")),
        (To = a(" to see what is all possible out of the box.")),
        (rt = n()),
        (E = l("p")),
        (Co = a("You can add a new post by creating either a new ")),
        (Fe = l("code")),
        (Do = a(".md")),
        (Ho = a(" file or a folder with an ")),
        (Re = l("code")),
        (jo = a("index.md")),
        (Ao = a(" file:")),
        (pt = n()),
        (M = l("pre")),
        (ft = n()),
        (w = l("p")),
        (Fo = a("Make sure your posts have ")),
        (Se = l("code")),
        (Ro = a("title")),
        (So = a(" and ")),
        (Le = l("code")),
        (Lo = a("date")),
        (Mo = a(" properties in the front matter:")),
        (nt = n()),
        (Y = l("pre")),
        (ut = n()),
        (x = l("p")),
        (Yo = a("The ")),
        (Me = l("code")),
        (qo = a("preview")),
        (zo = a(
          " property is optional, in case you want to customize the preview text. If the property is added, but the text is left empty, the first paragraph is used automatically.",
        )),
        (dt = n()),
        (ht = l("hr")),
        (ct = n()),
        (q = l("h2")),
        (ae = l("a")),
        (Go = a("Rendering Posts")),
        (vt = n()),
        (_ = l("p")),
        (Vo = a("Each individual post is rendered at ")),
        (Ye = l("code")),
        (Ko = a("src/routes/blog/[slug].svelte")),
        (No = a(". You\u2019ll notice the ")),
        (qe = l("code")),
        (Wo = a("load")),
        (Uo = a(
          " function fetches the post by slug, and then dynamically imports the appropriate .md file.",
        )),
        (mt = n()),
        (g = l("p")),
        ($o = a(
          "There are some basic meta tags setup for SEO and social media sharing, including a generated open graph image (courtesy of ",
        )),
        (z = l("a")),
        (Jo = a("og-image.vercel.app")),
        (Zo = a(").")),
        (yt = n()),
        (re = l("p")),
        (pe = l("img")),
        (Et = n()),
        (fe = l("p")),
        (Bo = a(
          "Feel free to customize this page as you see fit. I included some nice-to-haves like a table of contents and links to the next and/or previous posts.",
        )),
        (wt = n()),
        (_t = l("hr")),
        (bt = n()),
        (G = l("h2")),
        (ne = l("a")),
        (Qo = a("Fetching Posts")),
        (kt = n()),
        (h = l("p")),
        (Xo = a("You should fetch posts by using the ")),
        (ze = l("code")),
        (es = a("/posts.json")),
        (ts = a(
          " endpoint in your pages. For anything server-side (such as other endpoints), you can use the ",
        )),
        (Ge = l("code")),
        (os = a("getPosts")),
        (ss = a(" function in ")),
        (Ve = l("code")),
        (ls = a("$lib/get-posts.js")),
        (is = a(
          " as it will not work on the client (the endpoint is a wrapper over that function).",
        )),
        (Pt = n()),
        (V = l("h3")),
        (O = l("a")),
        (as = a("Why doesn\u2019t ")),
        (Ke = l("code")),
        (rs = a("getPosts")),
        (ps = a(" work on the client?")),
        (It = n()),
        (P = l("p")),
        (Ne = l("code")),
        (fs = a("getPosts")),
        (ns = a(
          " fetches all posts and adds extra metadata (such as a preview and estimated reading time). In order to parse some of that metadata, it uses server-side only APIs. If you try to use ",
        )),
        (We = l("code")),
        (us = a("getPosts")),
        (ds = a(
          " on the client it will throw an error, advising you to fetch from the endpoint instead.",
        )),
        (xt = n()),
        (ue = l("p")),
        (hs = a(
          "Hopefully I can find a way to make this function isomorphic. If you have an idea how, please reach out!",
        )),
        (gt = n()),
        (Ot = l("hr")),
        (Tt = n()),
        (K = l("h2")),
        (de = l("a")),
        (cs = a("Theme")),
        (Ct = n()),
        (I = l("p")),
        (vs = a("Most of the site is themed using tailwind\u2019s ")),
        (N = l("a")),
        (ms = a("typography plugin")),
        (ys = a(". You can the configuration for it in ")),
        (Ue = l("code")),
        (Es = a("tailwind.config.cjs")),
        (Dt = n()),
        (b = l("p")),
        (ws = a(
          "For code blocks it uses a slightly modified Night Owl theme. You can change the theme by editing ",
        )),
        ($e = l("code")),
        (_s = a("src/prism.css")),
        (bs = a(", or ")),
        (W = l("a")),
        (ks = a("replacing it with one of the many available themes")),
        (Ps = a(".")),
        (Ht = n()),
        (U = l("pre")),
        (jt = n()),
        (At = l("hr")),
        (Ft = n()),
        ($ = l("h2")),
        (he = l("a")),
        (Is = a("Mdsvex Plugins")),
        (Rt = n()),
        (T = l("p")),
        (xs = a(
          "I\u2019ve added some mdsvex plugins to support a few extra things (check out the ",
        )),
        (Je = l("code")),
        (gs = a("mdsvex.config.js")),
        (Os = a(" file).")),
        (St = n()),
        (J = l("h3")),
        (ce = l("a")),
        (Ts = a("Videos")),
        (Lt = n()),
        (ve = l("p")),
        (Cs = a(".mp4 and .webm videos are supported")),
        (Mt = n()),
        (Z = l("pre")),
        (Yt = n()),
        (B = l("h3")),
        (me = l("a")),
        (Ds = a("Relative URLs for Images and Videos")),
        (qt = n()),
        (C = l("p")),
        (Hs = a("The ")),
        (Q = l("a")),
        (js = a("mdsvex-relative-images")),
        (As = a(
          " plugin allows loading images or videos with a relative path. This is particularly nice for grouping images with the post under the same folder.",
        )),
        (zt = n()),
        (X = l("pre")),
        (Gt = n()),
        (ye = l("p")),
        (c = l("video")),
        (Vt = n()),
        (Kt = l("hr")),
        (Nt = n()),
        (ee = l("h2")),
        (Ee = l("a")),
        (Fs = a("Deploying")),
        (Wt = n()),
        (k = l("p")),
        (Rs = a(
          "You can deploy this like you would any other SvelteKit project. I chose to use the static adapter by default so you can ",
        )),
        (Ze = l("code")),
        (Ss = a("npm run build")),
        (Ls = a(" and serve the ")),
        (Be = l("code")),
        (Ms = a("public")),
        (Ys = a(
          " folder on your host of choice. Feel free to change the adapter if you want.",
        )),
        (Ut = n()),
        ($t = l("hr")),
        (Jt = n()),
        (te = l("h2")),
        (we = l("a")),
        (qs = a("That\u2019s it!")),
        (Zt = n()),
        (D = l("p")),
        (zs = a(
          "I think I\u2019ve covered most of the important stuff. If you have any questions, suggestions, or problems feel free to ",
        )),
        (oe = l("a")),
        (Gs = a("open an issue")),
        (Vs = a(".")),
        this.h();
    },
    l(e) {
      v = i(e, "P", {});
      var s = f(v);
      (ao = r(
        s,
        "Thanks for checking out my blog template. It\u2019s based on the blog I built for my own ",
      )),
        (j = i(s, "A", { href: !0, rel: !0 }));
      var Us = f(j);
      (ro = r(Us, "website")),
        Us.forEach(t),
        (po = r(
          s,
          " and I hope this is a good starting point for you to start yours.",
        )),
        s.forEach(t),
        (et = u(e)),
        (se = i(e, "P", {}));
      var $s = f(se);
      (fo = r($s, "Let\u2019s go over a few quick things:")),
        $s.forEach(t),
        (tt = u(e)),
        (m = i(e, "UL", {}));
      var _e = f(m);
      Oe = i(_e, "LI", {});
      var Js = f(Oe);
      A = i(Js, "P", {});
      var Bt = f(A);
      (no = r(Bt, "First things first, you should edit the ")),
        (Te = i(Bt, "CODE", {}));
      var Zs = f(Te);
      (uo = r(Zs, "src/lib/info.js")),
        Zs.forEach(t),
        (ho = r(
          Bt,
          " file to contain your information. This will properly update the parts of the website that display your name and the SEO tags for your posts.",
        )),
        Bt.forEach(t),
        Js.forEach(t),
        (co = u(_e)),
        (Ce = i(_e, "LI", {}));
      var Bs = f(Ce);
      F = i(Bs, "P", {});
      var Qt = f(F);
      (vo = r(
        Qt,
        "This template is configured to use the static adapter. If you intend to add SSR you will need to change it to something like ",
      )),
        (De = i(Qt, "CODE", {}));
      var Qs = f(De);
      (mo = r(Qs, "@sveltejs/adapter-node")),
        Qs.forEach(t),
        (yo = r(
          Qt,
          " or your preferred hosting adapter (vercel, netlify, etc).",
        )),
        Qt.forEach(t),
        Bs.forEach(t),
        (Eo = u(_e)),
        (He = i(_e, "LI", {}));
      var Xs = f(He);
      R = i(Xs, "P", {});
      var Xt = f(R);
      (wo = r(Xt, "This template was built using ")), (je = i(Xt, "CODE", {}));
      var el = f(je);
      (_o = r(el, "@sveltejs/kit@1.0.0-next.218")),
        el.forEach(t),
        (bo = r(
          Xt,
          ". I\u2019ll keep it updated when I can, but be aware that there things might break since SvelteKit is still in beta.",
        )),
        Xt.forEach(t),
        Xs.forEach(t),
        _e.forEach(t),
        (ot = u(e)),
        (le = i(e, "P", {}));
      var tl = f(le);
      (ko = r(
        tl,
        "Now that that\u2019s out of the way, let\u2019s learn about how to make posts.",
      )),
        tl.forEach(t),
        (st = u(e)),
        (lt = i(e, "HR", {})),
        (it = u(e)),
        (S = i(e, "H2", { id: !0 }));
      var ol = f(S);
      ie = i(ol, "A", { href: !0 });
      var sl = f(ie);
      (Po = r(sl, "Creating a Post")),
        sl.forEach(t),
        ol.forEach(t),
        (at = u(e)),
        (y = i(e, "P", {}));
      var be = f(y);
      (Io = r(be, "All of your posts (including this one) are located in ")),
        (Ae = i(be, "CODE", {}));
      var ll = f(Ae);
      (xo = r(ll, "/posts")),
        ll.forEach(t),
        (go = r(
          be,
          ". They are written in markdown and parsed with mdsvex. If you\u2019re unfamiliar with mdsvex, I would recommend ",
        )),
        (L = i(be, "A", { href: !0, rel: !0 }));
      var il = f(L);
      (Oo = r(il, "looking at the website")),
        il.forEach(t),
        (To = r(be, " to see what is all possible out of the box.")),
        be.forEach(t),
        (rt = u(e)),
        (E = i(e, "P", {}));
      var ke = f(E);
      (Co = r(ke, "You can add a new post by creating either a new ")),
        (Fe = i(ke, "CODE", {}));
      var al = f(Fe);
      (Do = r(al, ".md")),
        al.forEach(t),
        (Ho = r(ke, " file or a folder with an ")),
        (Re = i(ke, "CODE", {}));
      var rl = f(Re);
      (jo = r(rl, "index.md")),
        rl.forEach(t),
        (Ao = r(ke, " file:")),
        ke.forEach(t),
        (pt = u(e)),
        (M = i(e, "PRE", { class: !0 }));
      var li = f(M);
      li.forEach(t), (ft = u(e)), (w = i(e, "P", {}));
      var Pe = f(w);
      (Fo = r(Pe, "Make sure your posts have ")), (Se = i(Pe, "CODE", {}));
      var pl = f(Se);
      (Ro = r(pl, "title")),
        pl.forEach(t),
        (So = r(Pe, " and ")),
        (Le = i(Pe, "CODE", {}));
      var fl = f(Le);
      (Lo = r(fl, "date")),
        fl.forEach(t),
        (Mo = r(Pe, " properties in the front matter:")),
        Pe.forEach(t),
        (nt = u(e)),
        (Y = i(e, "PRE", { class: !0 }));
      var ii = f(Y);
      ii.forEach(t), (ut = u(e)), (x = i(e, "P", {}));
      var eo = f(x);
      (Yo = r(eo, "The ")), (Me = i(eo, "CODE", {}));
      var nl = f(Me);
      (qo = r(nl, "preview")),
        nl.forEach(t),
        (zo = r(
          eo,
          " property is optional, in case you want to customize the preview text. If the property is added, but the text is left empty, the first paragraph is used automatically.",
        )),
        eo.forEach(t),
        (dt = u(e)),
        (ht = i(e, "HR", {})),
        (ct = u(e)),
        (q = i(e, "H2", { id: !0 }));
      var ul = f(q);
      ae = i(ul, "A", { href: !0 });
      var dl = f(ae);
      (Go = r(dl, "Rendering Posts")),
        dl.forEach(t),
        ul.forEach(t),
        (vt = u(e)),
        (_ = i(e, "P", {}));
      var Ie = f(_);
      (Vo = r(Ie, "Each individual post is rendered at ")),
        (Ye = i(Ie, "CODE", {}));
      var hl = f(Ye);
      (Ko = r(hl, "src/routes/blog/[slug].svelte")),
        hl.forEach(t),
        (No = r(Ie, ". You\u2019ll notice the ")),
        (qe = i(Ie, "CODE", {}));
      var cl = f(qe);
      (Wo = r(cl, "load")),
        cl.forEach(t),
        (Uo = r(
          Ie,
          " function fetches the post by slug, and then dynamically imports the appropriate .md file.",
        )),
        Ie.forEach(t),
        (mt = u(e)),
        (g = i(e, "P", {}));
      var to = f(g);
      ($o = r(
        to,
        "There are some basic meta tags setup for SEO and social media sharing, including a generated open graph image (courtesy of ",
      )),
        (z = i(to, "A", { href: !0, rel: !0 }));
      var vl = f(z);
      (Jo = r(vl, "og-image.vercel.app")),
        vl.forEach(t),
        (Zo = r(to, ").")),
        to.forEach(t),
        (yt = u(e)),
        (re = i(e, "P", {}));
      var ml = f(re);
      (pe = i(ml, "IMG", { src: !0, alt: !0 })),
        ml.forEach(t),
        (Et = u(e)),
        (fe = i(e, "P", {}));
      var yl = f(fe);
      (Bo = r(
        yl,
        "Feel free to customize this page as you see fit. I included some nice-to-haves like a table of contents and links to the next and/or previous posts.",
      )),
        yl.forEach(t),
        (wt = u(e)),
        (_t = i(e, "HR", {})),
        (bt = u(e)),
        (G = i(e, "H2", { id: !0 }));
      var El = f(G);
      ne = i(El, "A", { href: !0 });
      var wl = f(ne);
      (Qo = r(wl, "Fetching Posts")),
        wl.forEach(t),
        El.forEach(t),
        (kt = u(e)),
        (h = i(e, "P", {}));
      var H = f(h);
      (Xo = r(H, "You should fetch posts by using the ")),
        (ze = i(H, "CODE", {}));
      var _l = f(ze);
      (es = r(_l, "/posts.json")),
        _l.forEach(t),
        (ts = r(
          H,
          " endpoint in your pages. For anything server-side (such as other endpoints), you can use the ",
        )),
        (Ge = i(H, "CODE", {}));
      var bl = f(Ge);
      (os = r(bl, "getPosts")),
        bl.forEach(t),
        (ss = r(H, " function in ")),
        (Ve = i(H, "CODE", {}));
      var kl = f(Ve);
      (ls = r(kl, "$lib/get-posts.js")),
        kl.forEach(t),
        (is = r(
          H,
          " as it will not work on the client (the endpoint is a wrapper over that function).",
        )),
        H.forEach(t),
        (Pt = u(e)),
        (V = i(e, "H3", { id: !0 }));
      var Pl = f(V);
      O = i(Pl, "A", { href: !0 });
      var oo = f(O);
      (as = r(oo, "Why doesn\u2019t ")), (Ke = i(oo, "CODE", {}));
      var Il = f(Ke);
      (rs = r(Il, "getPosts")),
        Il.forEach(t),
        (ps = r(oo, " work on the client?")),
        oo.forEach(t),
        Pl.forEach(t),
        (It = u(e)),
        (P = i(e, "P", {}));
      var Qe = f(P);
      Ne = i(Qe, "CODE", {});
      var xl = f(Ne);
      (fs = r(xl, "getPosts")),
        xl.forEach(t),
        (ns = r(
          Qe,
          " fetches all posts and adds extra metadata (such as a preview and estimated reading time). In order to parse some of that metadata, it uses server-side only APIs. If you try to use ",
        )),
        (We = i(Qe, "CODE", {}));
      var gl = f(We);
      (us = r(gl, "getPosts")),
        gl.forEach(t),
        (ds = r(
          Qe,
          " on the client it will throw an error, advising you to fetch from the endpoint instead.",
        )),
        Qe.forEach(t),
        (xt = u(e)),
        (ue = i(e, "P", {}));
      var Ol = f(ue);
      (hs = r(
        Ol,
        "Hopefully I can find a way to make this function isomorphic. If you have an idea how, please reach out!",
      )),
        Ol.forEach(t),
        (gt = u(e)),
        (Ot = i(e, "HR", {})),
        (Tt = u(e)),
        (K = i(e, "H2", { id: !0 }));
      var Tl = f(K);
      de = i(Tl, "A", { href: !0 });
      var Cl = f(de);
      (cs = r(Cl, "Theme")),
        Cl.forEach(t),
        Tl.forEach(t),
        (Ct = u(e)),
        (I = i(e, "P", {}));
      var Xe = f(I);
      (vs = r(Xe, "Most of the site is themed using tailwind\u2019s ")),
        (N = i(Xe, "A", { href: !0, rel: !0 }));
      var Dl = f(N);
      (ms = r(Dl, "typography plugin")),
        Dl.forEach(t),
        (ys = r(Xe, ". You can the configuration for it in ")),
        (Ue = i(Xe, "CODE", {}));
      var Hl = f(Ue);
      (Es = r(Hl, "tailwind.config.cjs")),
        Hl.forEach(t),
        Xe.forEach(t),
        (Dt = u(e)),
        (b = i(e, "P", {}));
      var xe = f(b);
      (ws = r(
        xe,
        "For code blocks it uses a slightly modified Night Owl theme. You can change the theme by editing ",
      )),
        ($e = i(xe, "CODE", {}));
      var jl = f($e);
      (_s = r(jl, "src/prism.css")),
        jl.forEach(t),
        (bs = r(xe, ", or ")),
        (W = i(xe, "A", { href: !0, rel: !0 }));
      var Al = f(W);
      (ks = r(Al, "replacing it with one of the many available themes")),
        Al.forEach(t),
        (Ps = r(xe, ".")),
        xe.forEach(t),
        (Ht = u(e)),
        (U = i(e, "PRE", { class: !0 }));
      var ai = f(U);
      ai.forEach(t),
        (jt = u(e)),
        (At = i(e, "HR", {})),
        (Ft = u(e)),
        ($ = i(e, "H2", { id: !0 }));
      var Fl = f($);
      he = i(Fl, "A", { href: !0 });
      var Rl = f(he);
      (Is = r(Rl, "Mdsvex Plugins")),
        Rl.forEach(t),
        Fl.forEach(t),
        (Rt = u(e)),
        (T = i(e, "P", {}));
      var so = f(T);
      (xs = r(
        so,
        "I\u2019ve added some mdsvex plugins to support a few extra things (check out the ",
      )),
        (Je = i(so, "CODE", {}));
      var Sl = f(Je);
      (gs = r(Sl, "mdsvex.config.js")),
        Sl.forEach(t),
        (Os = r(so, " file).")),
        so.forEach(t),
        (St = u(e)),
        (J = i(e, "H3", { id: !0 }));
      var Ll = f(J);
      ce = i(Ll, "A", { href: !0 });
      var Ml = f(ce);
      (Ts = r(Ml, "Videos")),
        Ml.forEach(t),
        Ll.forEach(t),
        (Lt = u(e)),
        (ve = i(e, "P", {}));
      var Yl = f(ve);
      (Cs = r(Yl, ".mp4 and .webm videos are supported")),
        Yl.forEach(t),
        (Mt = u(e)),
        (Z = i(e, "PRE", { class: !0 }));
      var ri = f(Z);
      ri.forEach(t), (Yt = u(e)), (B = i(e, "H3", { id: !0 }));
      var ql = f(B);
      me = i(ql, "A", { href: !0 });
      var zl = f(me);
      (Ds = r(zl, "Relative URLs for Images and Videos")),
        zl.forEach(t),
        ql.forEach(t),
        (qt = u(e)),
        (C = i(e, "P", {}));
      var lo = f(C);
      (Hs = r(lo, "The ")), (Q = i(lo, "A", { href: !0, rel: !0 }));
      var Gl = f(Q);
      (js = r(Gl, "mdsvex-relative-images")),
        Gl.forEach(t),
        (As = r(
          lo,
          " plugin allows loading images or videos with a relative path. This is particularly nice for grouping images with the post under the same folder.",
        )),
        lo.forEach(t),
        (zt = u(e)),
        (X = i(e, "PRE", { class: !0 }));
      var pi = f(X);
      pi.forEach(t), (Gt = u(e)), (ye = i(e, "P", {}));
      var Vl = f(ye);
      (c = i(Vl, "VIDEO", { src: !0, title: !0 })),
        f(c).forEach(t),
        Vl.forEach(t),
        (Vt = u(e)),
        (Kt = i(e, "HR", {})),
        (Nt = u(e)),
        (ee = i(e, "H2", { id: !0 }));
      var Kl = f(ee);
      Ee = i(Kl, "A", { href: !0 });
      var Nl = f(Ee);
      (Fs = r(Nl, "Deploying")),
        Nl.forEach(t),
        Kl.forEach(t),
        (Wt = u(e)),
        (k = i(e, "P", {}));
      var ge = f(k);
      (Rs = r(
        ge,
        "You can deploy this like you would any other SvelteKit project. I chose to use the static adapter by default so you can ",
      )),
        (Ze = i(ge, "CODE", {}));
      var Wl = f(Ze);
      (Ss = r(Wl, "npm run build")),
        Wl.forEach(t),
        (Ls = r(ge, " and serve the ")),
        (Be = i(ge, "CODE", {}));
      var Ul = f(Be);
      (Ms = r(Ul, "public")),
        Ul.forEach(t),
        (Ys = r(
          ge,
          " folder on your host of choice. Feel free to change the adapter if you want.",
        )),
        ge.forEach(t),
        (Ut = u(e)),
        ($t = i(e, "HR", {})),
        (Jt = u(e)),
        (te = i(e, "H2", { id: !0 }));
      var $l = f(te);
      we = i($l, "A", { href: !0 });
      var Jl = f(we);
      (qs = r(Jl, "That\u2019s it!")),
        Jl.forEach(t),
        $l.forEach(t),
        (Zt = u(e)),
        (D = i(e, "P", {}));
      var io = f(D);
      (zs = r(
        io,
        "I think I\u2019ve covered most of the important stuff. If you have any questions, suggestions, or problems feel free to ",
      )),
        (oe = i(io, "A", { href: !0, rel: !0 }));
      var Zl = f(oe);
      (Gs = r(Zl, "open an issue")),
        Zl.forEach(t),
        (Vs = r(io, ".")),
        io.forEach(t),
        this.h();
    },
    h() {
      d(j, "href", "https://mattjennings.io"),
        d(j, "rel", "nofollow"),
        d(ie, "href", "#creating-a-post"),
        d(S, "id", "creating-a-post"),
        d(L, "href", "https://mdsvex.com/playground"),
        d(L, "rel", "nofollow"),
        d(M, "class", "language-undefined"),
        d(Y, "class", "language-md"),
        d(ae, "href", "#rendering-posts"),
        d(q, "id", "rendering-posts"),
        d(z, "href", "https://og-image.vercel.app"),
        d(z, "rel", "nofollow"),
        Bl(
          pe.src,
          (Ns =
            "https://og-image.vercel.app/**Getting%20Started**?theme=light&md=1&fontSize=100px&images=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Ffront%2Fassets%2Fdesign%2Fhyper-color-logo.svg"),
        ) || d(pe, "src", Ns),
        d(pe, "alt", "open-graph"),
        d(ne, "href", "#fetching-posts"),
        d(G, "id", "fetching-posts"),
        d(O, "href", "#why-doesnt-getposts-work-on-the-client"),
        d(V, "id", "why-doesnt-getposts-work-on-the-client"),
        d(de, "href", "#theme"),
        d(K, "id", "theme"),
        d(N, "href", "https://tailwindcss.com/docs/typography-plugin"),
        d(N, "rel", "nofollow"),
        d(
          W,
          "href",
          "https://github.com/PrismJS/prism-themes/tree/master/themes",
        ),
        d(W, "rel", "nofollow"),
        d(U, "class", "language-javascript"),
        d(he, "href", "#mdsvex-plugins"),
        d($, "id", "mdsvex-plugins"),
        d(ce, "href", "#videos"),
        d(J, "id", "videos"),
        d(Z, "class", "language-md"),
        d(me, "href", "#relative-urls-for-images-and-videos"),
        d(B, "id", "relative-urls-for-images-and-videos"),
        d(Q, "href", "https://github.com/mattjennings/mdsvex-relative-images"),
        d(Q, "rel", "nofollow"),
        d(X, "class", "language-md"),
        Bl(c.src, (Ws = di)) || d(c, "src", Ws),
        (c.autoplay = !0),
        (c.muted = !0),
        (c.playsInline = !0),
        (c.loop = !0),
        d(c, "title", "penguins"),
        d(Ee, "href", "#deploying"),
        d(ee, "id", "deploying"),
        d(we, "href", "#thats-it"),
        d(te, "id", "thats-it"),
        d(
          oe,
          "href",
          "https://github.com/mattjennings/sveltekit-blog-template/issues",
        ),
        d(oe, "rel", "nofollow");
    },
    m(e, s) {
      p(e, v, s),
        o(v, ao),
        o(v, j),
        o(j, ro),
        o(v, po),
        p(e, et, s),
        p(e, se, s),
        o(se, fo),
        p(e, tt, s),
        p(e, m, s),
        o(m, Oe),
        o(Oe, A),
        o(A, no),
        o(A, Te),
        o(Te, uo),
        o(A, ho),
        o(m, co),
        o(m, Ce),
        o(Ce, F),
        o(F, vo),
        o(F, De),
        o(De, mo),
        o(F, yo),
        o(m, Eo),
        o(m, He),
        o(He, R),
        o(R, wo),
        o(R, je),
        o(je, _o),
        o(R, bo),
        p(e, ot, s),
        p(e, le, s),
        o(le, ko),
        p(e, st, s),
        p(e, lt, s),
        p(e, it, s),
        p(e, S, s),
        o(S, ie),
        o(ie, Po),
        p(e, at, s),
        p(e, y, s),
        o(y, Io),
        o(y, Ae),
        o(Ae, xo),
        o(y, go),
        o(y, L),
        o(L, Oo),
        o(y, To),
        p(e, rt, s),
        p(e, E, s),
        o(E, Co),
        o(E, Fe),
        o(Fe, Do),
        o(E, Ho),
        o(E, Re),
        o(Re, jo),
        o(E, Ao),
        p(e, pt, s),
        p(e, M, s),
        (M.innerHTML = Xl),
        p(e, ft, s),
        p(e, w, s),
        o(w, Fo),
        o(w, Se),
        o(Se, Ro),
        o(w, So),
        o(w, Le),
        o(Le, Lo),
        o(w, Mo),
        p(e, nt, s),
        p(e, Y, s),
        (Y.innerHTML = ei),
        p(e, ut, s),
        p(e, x, s),
        o(x, Yo),
        o(x, Me),
        o(Me, qo),
        o(x, zo),
        p(e, dt, s),
        p(e, ht, s),
        p(e, ct, s),
        p(e, q, s),
        o(q, ae),
        o(ae, Go),
        p(e, vt, s),
        p(e, _, s),
        o(_, Vo),
        o(_, Ye),
        o(Ye, Ko),
        o(_, No),
        o(_, qe),
        o(qe, Wo),
        o(_, Uo),
        p(e, mt, s),
        p(e, g, s),
        o(g, $o),
        o(g, z),
        o(z, Jo),
        o(g, Zo),
        p(e, yt, s),
        p(e, re, s),
        o(re, pe),
        p(e, Et, s),
        p(e, fe, s),
        o(fe, Bo),
        p(e, wt, s),
        p(e, _t, s),
        p(e, bt, s),
        p(e, G, s),
        o(G, ne),
        o(ne, Qo),
        p(e, kt, s),
        p(e, h, s),
        o(h, Xo),
        o(h, ze),
        o(ze, es),
        o(h, ts),
        o(h, Ge),
        o(Ge, os),
        o(h, ss),
        o(h, Ve),
        o(Ve, ls),
        o(h, is),
        p(e, Pt, s),
        p(e, V, s),
        o(V, O),
        o(O, as),
        o(O, Ke),
        o(Ke, rs),
        o(O, ps),
        p(e, It, s),
        p(e, P, s),
        o(P, Ne),
        o(Ne, fs),
        o(P, ns),
        o(P, We),
        o(We, us),
        o(P, ds),
        p(e, xt, s),
        p(e, ue, s),
        o(ue, hs),
        p(e, gt, s),
        p(e, Ot, s),
        p(e, Tt, s),
        p(e, K, s),
        o(K, de),
        o(de, cs),
        p(e, Ct, s),
        p(e, I, s),
        o(I, vs),
        o(I, N),
        o(N, ms),
        o(I, ys),
        o(I, Ue),
        o(Ue, Es),
        p(e, Dt, s),
        p(e, b, s),
        o(b, ws),
        o(b, $e),
        o($e, _s),
        o(b, bs),
        o(b, W),
        o(W, ks),
        o(b, Ps),
        p(e, Ht, s),
        p(e, U, s),
        (U.innerHTML = ti),
        p(e, jt, s),
        p(e, At, s),
        p(e, Ft, s),
        p(e, $, s),
        o($, he),
        o(he, Is),
        p(e, Rt, s),
        p(e, T, s),
        o(T, xs),
        o(T, Je),
        o(Je, gs),
        o(T, Os),
        p(e, St, s),
        p(e, J, s),
        o(J, ce),
        o(ce, Ts),
        p(e, Lt, s),
        p(e, ve, s),
        o(ve, Cs),
        p(e, Mt, s),
        p(e, Z, s),
        (Z.innerHTML = oi),
        p(e, Yt, s),
        p(e, B, s),
        o(B, me),
        o(me, Ds),
        p(e, qt, s),
        p(e, C, s),
        o(C, Hs),
        o(C, Q),
        o(Q, js),
        o(C, As),
        p(e, zt, s),
        p(e, X, s),
        (X.innerHTML = si),
        p(e, Gt, s),
        p(e, ye, s),
        o(ye, c),
        p(e, Vt, s),
        p(e, Kt, s),
        p(e, Nt, s),
        p(e, ee, s),
        o(ee, Ee),
        o(Ee, Fs),
        p(e, Wt, s),
        p(e, k, s),
        o(k, Rs),
        o(k, Ze),
        o(Ze, Ss),
        o(k, Ls),
        o(k, Be),
        o(Be, Ms),
        o(k, Ys),
        p(e, Ut, s),
        p(e, $t, s),
        p(e, Jt, s),
        p(e, te, s),
        o(te, we),
        o(we, qs),
        p(e, Zt, s),
        p(e, D, s),
        o(D, zs),
        o(D, oe),
        o(oe, Gs),
        o(D, Vs);
    },
    p: Ks,
    i: Ks,
    o: Ks,
    d(e) {
      e && t(v),
        e && t(et),
        e && t(se),
        e && t(tt),
        e && t(m),
        e && t(ot),
        e && t(le),
        e && t(st),
        e && t(lt),
        e && t(it),
        e && t(S),
        e && t(at),
        e && t(y),
        e && t(rt),
        e && t(E),
        e && t(pt),
        e && t(M),
        e && t(ft),
        e && t(w),
        e && t(nt),
        e && t(Y),
        e && t(ut),
        e && t(x),
        e && t(dt),
        e && t(ht),
        e && t(ct),
        e && t(q),
        e && t(vt),
        e && t(_),
        e && t(mt),
        e && t(g),
        e && t(yt),
        e && t(re),
        e && t(Et),
        e && t(fe),
        e && t(wt),
        e && t(_t),
        e && t(bt),
        e && t(G),
        e && t(kt),
        e && t(h),
        e && t(Pt),
        e && t(V),
        e && t(It),
        e && t(P),
        e && t(xt),
        e && t(ue),
        e && t(gt),
        e && t(Ot),
        e && t(Tt),
        e && t(K),
        e && t(Ct),
        e && t(I),
        e && t(Dt),
        e && t(b),
        e && t(Ht),
        e && t(U),
        e && t(jt),
        e && t(At),
        e && t(Ft),
        e && t($),
        e && t(Rt),
        e && t(T),
        e && t(St),
        e && t(J),
        e && t(Lt),
        e && t(ve),
        e && t(Mt),
        e && t(Z),
        e && t(Yt),
        e && t(B),
        e && t(qt),
        e && t(C),
        e && t(zt),
        e && t(X),
        e && t(Gt),
        e && t(ye),
        e && t(Vt),
        e && t(Kt),
        e && t(Nt),
        e && t(ee),
        e && t(Wt),
        e && t(k),
        e && t(Ut),
        e && t($t),
        e && t(Jt),
        e && t(te),
        e && t(Zt),
        e && t(D);
    },
  };
}
const vi = { title: "Getting Started", date: "2022-01-08T00:00:00.000Z" };
class mi extends fi {
  constructor(v) {
    super();
    ni(this, v, null, hi, ui, {});
  }
}
export { mi as default, vi as metadata };
