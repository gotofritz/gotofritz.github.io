import{S as Hi,i as Ki,s as Ri,e as a,t as l,k as c,c as n,a as o,d as t,h as i,m as h,b as d,Z as Li,g as p,I as s,E as Ko}from"./index-6e518972.js";var Mi="/_app/assets/docs-50ad1ff9.png";function $i(ci){let I,j,Ge,Xs,ts,m,Ys,ae,ea,ta,ne,sa,aa,Ue,na,oa,Ve,la,ia,ss,oe,hi=`<code class="language-bash">$ <span class="token function">mkdir</span> gotofritz.github.io-redesign
$ <span class="token function">cp</span> -r   gotofritz.github.io/.git gotofritz.github.io-redesign/
$ <span class="token builtin class-name">cd</span> gotofritz.github.io-redesign/
$ <span class="token function">git</span> checkout -b svelte-redesign
Switched to a new branch <span class="token string">'svelte-redesign'</span>
$ npx degit mattjennings/sveltekit-blog-template --force
  destination directory is not empty. Using --force, continuing
  cloned mattjennings/sveltekit-blog-template<span class="token comment">#HEAD</span>

<span class="token comment"># i like semicolons, thank you very much</span>
$ <span class="token function">cp</span> <span class="token punctuation">..</span>/gotofritz.github.io/.prettierrc .prettierrc

<span class="token comment"># Perfect - I also like pnpm. The same would work with npm</span>
<span class="token comment"># or yarn, of course</span>
$ <span class="token function">pnpm</span> <span class="token function">install</span>
Packages: +321
<span class="token punctuation">..</span>.

<span class="token comment"># check that it runs</span>
$ <span class="token function">pnpm</span> run dev
  sveltekit-blog-template@0.0.1 dev
  <span class="token punctuation">..</span>.
  local:   http://localhost:3000
  network: not exposed

  Use --host to expose server to other devices on this network

<span class="token comment"># it does</span>
  <span class="token operator">&lt;</span>CTRL-C<span class="token operator">></span>

$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
$ <span class="token function">git</span> commit -m <span class="token string">"feature: clone mattjennings/sveltekit-blog-template"</span></code>`,as,C,H,Je,ra,ns,b,pa,We,da,ca,Ze,ha,ua,Fe,fa,ma,os,le,ui=`<code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> kit: &#123;
</span><span class="token prefix unchanged"> </span><span class="token line">   target: "#svelte",
</span><span class="token prefix unchanged"> </span><span class="token line">   adapter: adapter(&#123;
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">      pages: 'public',
</span><span class="token prefix deleted">-</span><span class="token line">      assets: 'public'
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">     pages: "docs",
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   &#125;),</span></span></code>`,ls,xe,ka,is,Se,De,Ro,rs,K,R,Qe,va,ps,x,ga,ie,ba,wa,Xe,ya,_a,ds,L,M,Ye,Ea,cs,Te,Ia,hs,$,B,et,xa,us,k,Sa,tt,Da,Ta,st,Pa,Aa,at,Oa,ja,re,Ca,Ha,fs,w,Ka,nt,Ra,La,ot,Ma,$a,lt,Ba,qa,ms,pe,fi=`<code class="language-bash"><span class="token assign-left variable">DIR_POSTS</span><span class="token operator">=</span>./posts
<span class="token assign-left variable">DIR_POSTS_BAK</span><span class="token operator">=~</span>/Dropbox/your site/posts</code>`,ks,Pe,Na,vs,de,mi=`<code class="language-json">...
<span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"sync"</span><span class="token operator">:</span> <span class="token string">"source .env; if [[ ! -z $DIR_POSTS_BAK ]]; then unison "$DIR_POSTS_BAK" "$DIR_POSTS" -batch; fi"</span><span class="token punctuation">,</span>
  <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"pnpm run sync ; svelte-kit build"</span><span class="token punctuation">,</span>
  <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"pnpm ryn sync ; svelte-kit dev"</span><span class="token punctuation">,</span>
  ...
<span class="token punctuation">&#125;</span>
  ...</code>`,gs,Ae,za,bs,y,it,Ga,rt,Ua,pt,Va,dt,Ja,ct,Wa,ht,Za,ws,_,ut,Fa,ft,Qa,mt,Xa,kt,Ya,vt,en,gt,tn,ys,S,sn,bt,an,nn,wt,on,ln,_s,ce,ki=`<code class="language-bash">posts/*
<span class="token operator">!</span>posts/.gitkeep</code>`,Es,Oe,rn,Is,q,N,yt,pn,xs,D,dn,_t,cn,hn,Et,un,fn,Ss,he,vi=`<code class="language-bash">  <span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">..</span>.
    <span class="token string">"sync-to-here"</span><span class="token builtin class-name">:</span> <span class="token string">"source .env; if [[ ! -z <span class="token variable">$DIR_POSTS_BAK</span> ]]; then rsync -a <span class="token entity" title="&quot;">"</span><span class="token variable">$DIR_POSTS_BAK</span>/<span class="token entity" title="&quot;">"</span> <span class="token entity" title="&quot;">"</span><span class="token variable">$DIR_POSTS</span><span class="token entity" title="&quot;">"</span>; fi"</span>,
    <span class="token string">"sync-to-backup"</span><span class="token builtin class-name">:</span> <span class="token string">"source .env; if [[ ! -z <span class="token variable">$DIR_POSTS_BAK</span> ]]; then rsync -a <span class="token entity" title="&quot;">"</span><span class="token variable">$DIR_POSTS</span>/<span class="token entity" title="&quot;">"</span> <span class="token entity" title="&quot;">"</span><span class="token variable">$DIR_POSTS_BAK</span><span class="token entity" title="&quot;">"</span>; fi"</span>
  <span class="token punctuation">&#125;</span>,</code>`,Ds,je,mn,Ts,z,G,It,kn,Ps,g,vn,ue,gn,bn,xt,wn,yn,St,_n,En,Dt,In,As,u,fe,me,xn,Tt,Sn,Dn,Tn,Ce,gi='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">makeTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">title</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> | gotofritz</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span></code>',Pn,Pt,v,An,At,On,jn,Ot,Cn,Hn,jt,Kn,Rn,Ct,Ln,Mn,Ht,$n,Bn,Kt,Rt,qn,Nn,ke,ve,zn,Lt,Gn,Un,Vn,He,bi=`<code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml">title: How I built a markdown drive static website with SvelteKit and Tailwind
tags:
tags:
  - svelte
  - gotofritz
...</span>
<span class="token punctuation">---</span></span></code>`,Jn,Mt,$t,Wn,Zn,Bt,qt,Fn,Qn,Nt,zt,Xn,Yn,Gt,ge,eo,Ut,to,so,Os,U,V,Vt,ao,js,T,no,Jt,oo,lo,Wt,io,ro,Cs,be,wi=`<code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml">date: 2022-05-03
updated: 2022-05-25T22:39:29.436714
draft: true
title: How I built a markdown drive static website with SvelteKit and Tailwind</span>
<span class="token punctuation">---</span></span></code>`,Hs,J,po,Zt,co,ho,Ks,we,yi=`<code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> import &#123; browser &#125; from "$app/env";
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import &#123; browser, dev &#125; from "$app/env";
</span></span>...
const posts = Object.entries(import.meta.globEager('/posts/*_/_.md'))
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> .map(([filepath, post]) => &#123;
</span><span class="token prefix unchanged"> </span><span class="token line">   return &#123;
</span><span class="token prefix unchanged"> </span><span class="token line">   ...
</span></span>&#125;)
<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  .filter((post) => dev || !post.draft)
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // parse HTML output for content metadata (preview, reading time, toc)
</span><span class="token prefix unchanged"> </span><span class="token line"> .map((post) => &#123;
</span><span class="token prefix unchanged"> </span><span class="token line">   const parsedHtml = parse(post.component.render().html)
</span><span class="token prefix unchanged"> </span><span class="token line">   ...</span></span></code>`,Rs,W,Z,Ft,uo,Ls,Ke,fo,Ms,ye,_i=`<code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ...
</span><span class="token prefix unchanged"> </span><span class="token line"> kit: &#123;
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   target: "#svelte",
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   adapter: adapter(&#123;
</span><span class="token prefix unchanged"> </span><span class="token line">     pages: "docs",
</span><span class="token prefix unchanged"> </span><span class="token line">   &#125;),
</span><span class="token prefix unchanged"> </span><span class="token line"> ...
</span><span class="token prefix unchanged"> </span><span class="token line"> prerender: &#123;
</span><span class="token prefix unchanged"> </span><span class="token line">     entries: ["*", "/sitemap.xml", "/feed.xml"],
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">     default: true,
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   &#125;,
</span><span class="token prefix unchanged"> </span><span class="token line"> ...</span></span></code>`,$s,F,Q,Qt,mo,Bs,Re,ko,qs,Le,vo,Ns,X,Xt,go,bo,Yt,wo,zs,Y,ee,es,yo,Gs,Me,$e,_e,_o,Eo;return{c(){I=a("h2"),j=a("a"),Ge=a("span"),Xs=l("Getting started"),ts=c(),m=a("p"),Ys=l("I use "),ae=a("a"),ea=l("degit, a tool by the SvelteKit\u2019s creator"),ta=l(", to reproduce "),ne=a("a"),sa=l("Matt Jennings\u2019s excellent SvelteKit blog template"),aa=l(" in a folder ("),Ue=a("code"),na=l("gotofritz.github.io-redesign/"),oa=l(") parallel to my main branch ("),Ve=a("code"),la=l("gotofritz.github.io/"),ia=l(")"),ss=c(),oe=a("pre"),as=c(),C=a("h2"),H=a("a"),Je=a("span"),ra=l("Publishing the static Sveltekit markdown site to GitHub pages"),ns=c(),b=a("p"),pa=l("The original repo is set up to publish to a "),We=a("code"),da=l("/public/"),ca=l(" folder, but GitHub pages expect either the root folder or a folder called "),Ze=a("code"),ha=l("docs/"),ua=l(". I went for the latter. A simple change in "),Fe=a("code"),fa=l("svelte.config.js"),ma=l(" made it happen"),os=c(),le=a("pre"),ls=c(),xe=a("p"),ka=l("All the other files I needed (the CNAME file, and google confirmation) are already in my static folder"),is=c(),Se=a("p"),De=a("img"),rs=c(),K=a("h2"),R=a("a"),Qe=a("span"),va=l("Importing markdown posts from outside the SvelteKit project root"),ps=c(),x=a("p"),ga=l("\u2026cannot be done, at least not in Q2 of 2022. It\u2019s "),ie=a("a"),ba=l("a limitation of Vite"),wa=l(", the bundler used by SvelteKit. And no, symbolic links don\u2019t help either. Vite is \u201Cclever\u201D enough to spot that you are trying to trick it.That is "),Xe=a("em"),ya=l("that"),_a=l(" close to being a deal breaker. I like keeping the posts data and the code completely separate. I also prefer keeping posts in Dropbox, and then manage them with tools like Obsidian. That allows me to easily access them from my mobile phone when I am on the go. I came up with a workaround, but it\u2019s a hack."),ds=c(),L=a("h2"),M=a("a"),Ye=a("span"),Ea=l("Synchronising posts inside SvelteKit with a folder outside the project using unison"),cs=c(),Te=a("p"),Ia=l("Since source files cannot exist outside the project in Vite, I only have two options: ignore it, or sync manually. I decided to go for the syncing. But not quite manual"),hs=c(),$=a("h3"),B=a("a"),et=a("span"),xa=l("Using unison to sync folders before a build"),us=c(),k=a("p"),Sa=l("My first approach was to add a sync command to "),tt=a("code"),Da=l("package.json"),Ta=l(", and run it before building the site. As well as before starting the local dev server. Or I can, indeed, manually as needed. This is almost the kind of task you would use "),st=a("code"),Pa=l("rsync"),Aa=l(" for, but not quite. rsync at heart is a "),at=a("em"),Oa=l("backup"),ja=l(" command; you sync something you care about with a remote location. One is the original, the other the clone. But in the case of blog posts case either could be the original. I may have edited the post at work and the Dropbox copy is the most up to date. Or vice versa. What I need is a tool to keep two folders in sync, updating whichever is less recent. That tool is "),re=a("a"),Ca=l("unison"),Ha=l(". Or so I thought."),fs=c(),w=a("p"),Ka=l("The first step was to install unison with brew, "),nt=a("code"),Ra=l("brew install unison"),La=l(". Then I created an .env file with the path of the folders to sync to, and from. The file is called "),ot=a("code"),Ma=l(".env"),$a=l(" and there is a version called "),lt=a("code"),Ba=l(".env.example"),qa=l(" in the repo."),ms=c(),pe=a("pre"),ks=c(),Pe=a("p"),Na=l("Then the package.json changes"),vs=c(),de=a("pre"),gs=c(),Ae=a("p"),za=l("which can be broken down as"),bs=c(),y=a("dl"),it=a("dt"),Ga=l("source .env;"),rt=a("dd"),Ua=l("a _very_ basic way to load a .env file into memory. Note that it doesn't handle comments and a lot of other things. Only suitable for a quick hack"),pt=a("dt"),Va=l("if [[ ! -z $DIR_POSTS_BAK ]]; "),dt=a("dd"),Ja=l("only run if I have actually set that variable in the .env file"),ct=a("dt"),Wa=l('unison \\"$DIR_POSTS_BAK\\" \\"$DIR_POSTS\\" -batch'),ht=a("dd"),Za=l("this is where the syncing happens. `-batch` runs the command without asking the hundreds of impenetrable questions unison tends to ask"),ws=c(),_=a("dl"),ut=a("dt"),Fa=l("pnpm run sync"),ft=a("dd"),Qa=l("run this command with pnpm (I prefer it to npm, but either will work)"),mt=a("dt"),Xa=l("; "),kt=a("dd"),Ya=l("whether the previous command succeeds or not, then..."),vt=a("dt"),en=l("svelte-kit build"),gt=a("dd"),tn=l("run this script"),ys=c(),S=a("p"),sn=l("I can now remove the posts from Git (but not the filesystem!) with "),bt=a("code"),an=l("git rm --cached posts/*"),nn=l(". To make sure that folder doesn\u2019t disappear, I add a blank file to it with "),wt=a("code"),on=l("touch posts/.gitkeep"),ln=l(". I then amend the .gitignore file to reflect the latest changes"),_s=c(),ce=a("pre"),Es=c(),Oe=a("p"),rn=l("That kind of worked, and I was quite pleased with it. But eventually I got some racing condition between Dropbox syncing the folder with its remote copy and the folder inside the SvelteKit instance. I don\u2019t know exactly how, but unison ended up deleting both copies. Luckily I had another backup somewhere else. I am not sure of the dynamics but in the end it doesn\u2019t matter. The fact it happened once means it can happen again. And life\u2019s too short to waste it worrying about losing your blog posts. I needed another approach."),Is=c(),q=a("h3"),N=a("a"),yt=a("span"),pn=l("Back to rsync"),xs=c(),D=a("p"),dn=l("I ditched unison and the idea of automatic syncing. I restored the original "),_t=a("code"),cn=l("build"),hn=l(" and "),Et=a("code"),un=l("dev"),fn=l(" scripts and added a couple of rsync ones"),Ss=c(),he=a("pre"),Ds=c(),je=a("p"),mn=l("So now I have to sync manually. Not ideal, but hopefully the SvelteKit team will come up with a workaround."),Ts=c(),z=a("h2"),G=a("a"),It=a("span"),kn=l("Adapting the boilerplate to my needs"),Ps=c(),g=a("p"),vn=l("I made some changes and adaptations, but mostly small touches here and there. I really like how it is setup, particularly the use of the "),ue=a("a"),gn=l("mdsvex-relative-images"),bn=l(" plugin which lets me create posts as either "),xt=a("code"),wn=l("blog/my-post.md"),yn=l(" or "),St=a("code"),_n=l("blog/my-post/index.md"),En=l(" which can then fetch images like "),Dt=a("code"),In=l("blog/my-post/an-image.png"),As=c(),u=a("ul"),fe=a("li"),me=a("p"),xn=l("I changed "),Tt=a("code"),Sn=l("info.js"),Dn=l(" to include the name of my own blog, and added a simple page title helper to it."),Tn=c(),Ce=a("pre"),Pn=c(),Pt=a("li"),v=a("p"),An=l("Renamed a few routes inside "),At=a("code"),On=l("routes/"),jn=l(": from "),Ot=a("code"),Cn=l("posts/"),Hn=l(" to "),jt=a("code"),Kn=l("blog/"),Rn=l(", from "),Ct=a("code"),Ln=l("rss.xml"),Mn=l(" to "),Ht=a("code"),$n=l("feed.xml"),Bn=c(),Kt=a("li"),Rt=a("p"),qn=l("Added my own favicon.ico"),Nn=c(),ke=a("li"),ve=a("p"),zn=l("Changed "),Lt=a("code"),Gn=l("get-posts.js"),Un=l(" to cater for the legacy frontmatter in my posts, which is not always the same as Matt is using. One big difference is that I use tags, which is a simple array"),Vn=c(),He=a("pre"),Jn=c(),Mt=a("li"),$t=a("p"),Wn=l("Built my own template with Svelte / Tailwind markup, importing my own fonts (I really like DM Serif Display for the title)"),Zn=c(),Bt=a("li"),qt=a("p"),Fn=l("Added sitemap to the robots.txt"),Qn=c(),Nt=a("li"),zt=a("p"),Xn=l("I use google as a search engine for the site, so I added that in the top navbar"),Yn=c(),Gt=a("li"),ge=a("p"),eo=l("Created pages for the tag. They are similar to the index page, but they use a variation of "),Ut=a("code"),to=l("get-posts.js"),so=l(" to get their content from."),Os=c(),U=a("h3"),V=a("a"),Vt=a("span"),ao=l("Displaying drafts in dev mode in SvelteKit, but excluding it from build"),js=c(),T=a("p"),no=l("I added a field to the frontmatter of the posts I wanted to keep as draft. Adding "),Jt=a("code"),oo=l("draft: true"),lo=l(" rather than, say "),Wt=a("code"),io=l("published: false"),ro=l(" meant I only needed to add those flags to the posts that were drafts."),Cs=c(),be=a("pre"),Hs=c(),J=a("p"),po=l("I then added a filter to the "),Zt=a("code"),co=l("get-posts.js"),ho=l(" page to only allow those posts in dev mode"),Ks=c(),we=a("pre"),Rs=c(),W=a("h3"),Z=a("a"),Ft=a("span"),uo=l("Upgrading to @sveltejs/kit 1.0.0-next.338"),Ls=c(),Ke=a("p"),fo=l("I was having some routing issues I couldn\u2019t work around, but luckily upgrading to the latest version of SvelteKit solved them. I did need to make a couple of changes to the configuration though"),Ms=c(),ye=a("pre"),$s=c(),F=a("h2"),Q=a("a"),Qt=a("span"),mo=l("Happy with SvelteKit so far, except for two issues"),Bs=c(),Re=a("p"),ko=l("In the end Matt\u2019s work has saved me a lot of time. Thanks! I like Svelte and think it works well. I\u2019d recommend it for any cases where you don\u2019t want to use React (i.e., when design systems are not involved. There is just no beating React when it comes to create, use, and manage design systems!"),qs=c(),Le=a("p"),vo=l("There are only two outstanding issues that bother me"),Ns=c(),X=a("ul"),Xt=a("li"),go=l("the fact you can\u2019t put the posts outside the repository root"),bo=c(),Yt=a("li"),wo=l("some aggressive caching which cannot be turned off. For example the tag pages often need to be reloaded to show their \u2018true\u2019 content. I haven\u2019t worked how to fix that yet"),zs=c(),Y=a("h2"),ee=a("a"),es=a("span"),yo=l("Prior art"),Gs=c(),Me=a("ul"),$e=a("li"),_e=a("a"),_o=l("Matt Jennings"),Eo=l(" posts explains a lot of his design choices"),this.h()},l(e){I=n(e,"H2",{id:!0});var r=o(I);j=n(r,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Lo=o(j);Ge=n(Lo,"SPAN",{class:!0}),o(Ge).forEach(t),Lo.forEach(t),Xs=i(r,"Getting started"),r.forEach(t),ts=h(e),m=n(e,"P",{});var P=o(m);Ys=i(P,"I use "),ae=n(P,"A",{href:!0,rel:!0});var Mo=o(ae);ea=i(Mo,"degit, a tool by the SvelteKit\u2019s creator"),Mo.forEach(t),ta=i(P,", to reproduce "),ne=n(P,"A",{href:!0,rel:!0});var $o=o(ne);sa=i($o,"Matt Jennings\u2019s excellent SvelteKit blog template"),$o.forEach(t),aa=i(P," in a folder ("),Ue=n(P,"CODE",{});var Bo=o(Ue);na=i(Bo,"gotofritz.github.io-redesign/"),Bo.forEach(t),oa=i(P,") parallel to my main branch ("),Ve=n(P,"CODE",{});var qo=o(Ve);la=i(qo,"gotofritz.github.io/"),qo.forEach(t),ia=i(P,")"),P.forEach(t),ss=h(e),oe=n(e,"PRE",{class:!0});var Ei=o(oe);Ei.forEach(t),as=h(e),C=n(e,"H2",{id:!0});var Io=o(C);H=n(Io,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var No=o(H);Je=n(No,"SPAN",{class:!0}),o(Je).forEach(t),No.forEach(t),ra=i(Io,"Publishing the static Sveltekit markdown site to GitHub pages"),Io.forEach(t),ns=h(e),b=n(e,"P",{});var te=o(b);pa=i(te,"The original repo is set up to publish to a "),We=n(te,"CODE",{});var zo=o(We);da=i(zo,"/public/"),zo.forEach(t),ca=i(te," folder, but GitHub pages expect either the root folder or a folder called "),Ze=n(te,"CODE",{});var Go=o(Ze);ha=i(Go,"docs/"),Go.forEach(t),ua=i(te,". I went for the latter. A simple change in "),Fe=n(te,"CODE",{});var Uo=o(Fe);fa=i(Uo,"svelte.config.js"),Uo.forEach(t),ma=i(te," made it happen"),te.forEach(t),os=h(e),le=n(e,"PRE",{class:!0});var Ii=o(le);Ii.forEach(t),ls=h(e),xe=n(e,"P",{});var Vo=o(xe);ka=i(Vo,"All the other files I needed (the CNAME file, and google confirmation) are already in my static folder"),Vo.forEach(t),is=h(e),Se=n(e,"P",{});var Jo=o(Se);De=n(Jo,"IMG",{src:!0,alt:!0}),Jo.forEach(t),rs=h(e),K=n(e,"H2",{id:!0});var xo=o(K);R=n(xo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Wo=o(R);Qe=n(Wo,"SPAN",{class:!0}),o(Qe).forEach(t),Wo.forEach(t),va=i(xo,"Importing markdown posts from outside the SvelteKit project root"),xo.forEach(t),ps=h(e),x=n(e,"P",{});var Be=o(x);ga=i(Be,"\u2026cannot be done, at least not in Q2 of 2022. It\u2019s "),ie=n(Be,"A",{href:!0,rel:!0});var Zo=o(ie);ba=i(Zo,"a limitation of Vite"),Zo.forEach(t),wa=i(Be,", the bundler used by SvelteKit. And no, symbolic links don\u2019t help either. Vite is \u201Cclever\u201D enough to spot that you are trying to trick it.That is "),Xe=n(Be,"EM",{});var Fo=o(Xe);ya=i(Fo,"that"),Fo.forEach(t),_a=i(Be," close to being a deal breaker. I like keeping the posts data and the code completely separate. I also prefer keeping posts in Dropbox, and then manage them with tools like Obsidian. That allows me to easily access them from my mobile phone when I am on the go. I came up with a workaround, but it\u2019s a hack."),Be.forEach(t),ds=h(e),L=n(e,"H2",{id:!0});var So=o(L);M=n(So,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Qo=o(M);Ye=n(Qo,"SPAN",{class:!0}),o(Ye).forEach(t),Qo.forEach(t),Ea=i(So,"Synchronising posts inside SvelteKit with a folder outside the project using unison"),So.forEach(t),cs=h(e),Te=n(e,"P",{});var Xo=o(Te);Ia=i(Xo,"Since source files cannot exist outside the project in Vite, I only have two options: ignore it, or sync manually. I decided to go for the syncing. But not quite manual"),Xo.forEach(t),hs=h(e),$=n(e,"H3",{id:!0});var Do=o($);B=n(Do,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Yo=o(B);et=n(Yo,"SPAN",{class:!0}),o(et).forEach(t),Yo.forEach(t),xa=i(Do,"Using unison to sync folders before a build"),Do.forEach(t),us=h(e),k=n(e,"P",{});var A=o(k);Sa=i(A,"My first approach was to add a sync command to "),tt=n(A,"CODE",{});var el=o(tt);Da=i(el,"package.json"),el.forEach(t),Ta=i(A,", and run it before building the site. As well as before starting the local dev server. Or I can, indeed, manually as needed. This is almost the kind of task you would use "),st=n(A,"CODE",{});var tl=o(st);Pa=i(tl,"rsync"),tl.forEach(t),Aa=i(A," for, but not quite. rsync at heart is a "),at=n(A,"EM",{});var sl=o(at);Oa=i(sl,"backup"),sl.forEach(t),ja=i(A," command; you sync something you care about with a remote location. One is the original, the other the clone. But in the case of blog posts case either could be the original. I may have edited the post at work and the Dropbox copy is the most up to date. Or vice versa. What I need is a tool to keep two folders in sync, updating whichever is less recent. That tool is "),re=n(A,"A",{href:!0,rel:!0});var al=o(re);Ca=i(al,"unison"),al.forEach(t),Ha=i(A,". Or so I thought."),A.forEach(t),fs=h(e),w=n(e,"P",{});var se=o(w);Ka=i(se,"The first step was to install unison with brew, "),nt=n(se,"CODE",{});var nl=o(nt);Ra=i(nl,"brew install unison"),nl.forEach(t),La=i(se,". Then I created an .env file with the path of the folders to sync to, and from. The file is called "),ot=n(se,"CODE",{});var ol=o(ot);Ma=i(ol,".env"),ol.forEach(t),$a=i(se," and there is a version called "),lt=n(se,"CODE",{});var ll=o(lt);Ba=i(ll,".env.example"),ll.forEach(t),qa=i(se," in the repo."),se.forEach(t),ms=h(e),pe=n(e,"PRE",{class:!0});var xi=o(pe);xi.forEach(t),ks=h(e),Pe=n(e,"P",{});var il=o(Pe);Na=i(il,"Then the package.json changes"),il.forEach(t),vs=h(e),de=n(e,"PRE",{class:!0});var Si=o(de);Si.forEach(t),gs=h(e),Ae=n(e,"P",{});var rl=o(Ae);za=i(rl,"which can be broken down as"),rl.forEach(t),bs=h(e),y=n(e,"DL",{class:!0});var Ee=o(y);it=n(Ee,"DT",{});var pl=o(it);Ga=i(pl,"source .env;"),pl.forEach(t),rt=n(Ee,"DD",{});var dl=o(rt);Ua=i(dl,"a _very_ basic way to load a .env file into memory. Note that it doesn't handle comments and a lot of other things. Only suitable for a quick hack"),dl.forEach(t),pt=n(Ee,"DT",{});var cl=o(pt);Va=i(cl,"if [[ ! -z $DIR_POSTS_BAK ]]; "),cl.forEach(t),dt=n(Ee,"DD",{});var hl=o(dt);Ja=i(hl,"only run if I have actually set that variable in the .env file"),hl.forEach(t),ct=n(Ee,"DT",{});var ul=o(ct);Wa=i(ul,'unison \\"$DIR_POSTS_BAK\\" \\"$DIR_POSTS\\" -batch'),ul.forEach(t),ht=n(Ee,"DD",{});var fl=o(ht);Za=i(fl,"this is where the syncing happens. `-batch` runs the command without asking the hundreds of impenetrable questions unison tends to ask"),fl.forEach(t),Ee.forEach(t),ws=h(e),_=n(e,"DL",{class:!0});var Ie=o(_);ut=n(Ie,"DT",{});var ml=o(ut);Fa=i(ml,"pnpm run sync"),ml.forEach(t),ft=n(Ie,"DD",{});var kl=o(ft);Qa=i(kl,"run this command with pnpm (I prefer it to npm, but either will work)"),kl.forEach(t),mt=n(Ie,"DT",{});var vl=o(mt);Xa=i(vl,"; "),vl.forEach(t),kt=n(Ie,"DD",{});var gl=o(kt);Ya=i(gl,"whether the previous command succeeds or not, then..."),gl.forEach(t),vt=n(Ie,"DT",{});var bl=o(vt);en=i(bl,"svelte-kit build"),bl.forEach(t),gt=n(Ie,"DD",{});var wl=o(gt);tn=i(wl,"run this script"),wl.forEach(t),Ie.forEach(t),ys=h(e),S=n(e,"P",{});var qe=o(S);sn=i(qe,"I can now remove the posts from Git (but not the filesystem!) with "),bt=n(qe,"CODE",{});var yl=o(bt);an=i(yl,"git rm --cached posts/*"),yl.forEach(t),nn=i(qe,". To make sure that folder doesn\u2019t disappear, I add a blank file to it with "),wt=n(qe,"CODE",{});var _l=o(wt);on=i(_l,"touch posts/.gitkeep"),_l.forEach(t),ln=i(qe,". I then amend the .gitignore file to reflect the latest changes"),qe.forEach(t),_s=h(e),ce=n(e,"PRE",{class:!0});var Di=o(ce);Di.forEach(t),Es=h(e),Oe=n(e,"P",{});var El=o(Oe);rn=i(El,"That kind of worked, and I was quite pleased with it. But eventually I got some racing condition between Dropbox syncing the folder with its remote copy and the folder inside the SvelteKit instance. I don\u2019t know exactly how, but unison ended up deleting both copies. Luckily I had another backup somewhere else. I am not sure of the dynamics but in the end it doesn\u2019t matter. The fact it happened once means it can happen again. And life\u2019s too short to waste it worrying about losing your blog posts. I needed another approach."),El.forEach(t),Is=h(e),q=n(e,"H3",{id:!0});var To=o(q);N=n(To,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Il=o(N);yt=n(Il,"SPAN",{class:!0}),o(yt).forEach(t),Il.forEach(t),pn=i(To,"Back to rsync"),To.forEach(t),xs=h(e),D=n(e,"P",{});var Ne=o(D);dn=i(Ne,"I ditched unison and the idea of automatic syncing. I restored the original "),_t=n(Ne,"CODE",{});var xl=o(_t);cn=i(xl,"build"),xl.forEach(t),hn=i(Ne," and "),Et=n(Ne,"CODE",{});var Sl=o(Et);un=i(Sl,"dev"),Sl.forEach(t),fn=i(Ne," scripts and added a couple of rsync ones"),Ne.forEach(t),Ss=h(e),he=n(e,"PRE",{class:!0});var Ti=o(he);Ti.forEach(t),Ds=h(e),je=n(e,"P",{});var Dl=o(je);mn=i(Dl,"So now I have to sync manually. Not ideal, but hopefully the SvelteKit team will come up with a workaround."),Dl.forEach(t),Ts=h(e),z=n(e,"H2",{id:!0});var Po=o(z);G=n(Po,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Tl=o(G);It=n(Tl,"SPAN",{class:!0}),o(It).forEach(t),Tl.forEach(t),kn=i(Po,"Adapting the boilerplate to my needs"),Po.forEach(t),Ps=h(e),g=n(e,"P",{});var O=o(g);vn=i(O,"I made some changes and adaptations, but mostly small touches here and there. I really like how it is setup, particularly the use of the "),ue=n(O,"A",{href:!0,rel:!0});var Pl=o(ue);gn=i(Pl,"mdsvex-relative-images"),Pl.forEach(t),bn=i(O," plugin which lets me create posts as either "),xt=n(O,"CODE",{});var Al=o(xt);wn=i(Al,"blog/my-post.md"),Al.forEach(t),yn=i(O," or "),St=n(O,"CODE",{});var Ol=o(St);_n=i(Ol,"blog/my-post/index.md"),Ol.forEach(t),En=i(O," which can then fetch images like "),Dt=n(O,"CODE",{});var jl=o(Dt);In=i(jl,"blog/my-post/an-image.png"),jl.forEach(t),O.forEach(t),As=h(e),u=n(e,"UL",{});var f=o(u);fe=n(f,"LI",{});var Us=o(fe);me=n(Us,"P",{});var Vs=o(me);xn=i(Vs,"I changed "),Tt=n(Vs,"CODE",{});var Cl=o(Tt);Sn=i(Cl,"info.js"),Cl.forEach(t),Dn=i(Vs," to include the name of my own blog, and added a simple page title helper to it."),Vs.forEach(t),Tn=h(Us),Ce=n(Us,"PRE",{class:!0});var Pi=o(Ce);Pi.forEach(t),Us.forEach(t),Pn=h(f),Pt=n(f,"LI",{});var Hl=o(Pt);v=n(Hl,"P",{});var E=o(v);An=i(E,"Renamed a few routes inside "),At=n(E,"CODE",{});var Kl=o(At);On=i(Kl,"routes/"),Kl.forEach(t),jn=i(E,": from "),Ot=n(E,"CODE",{});var Rl=o(Ot);Cn=i(Rl,"posts/"),Rl.forEach(t),Hn=i(E," to "),jt=n(E,"CODE",{});var Ll=o(jt);Kn=i(Ll,"blog/"),Ll.forEach(t),Rn=i(E,", from "),Ct=n(E,"CODE",{});var Ml=o(Ct);Ln=i(Ml,"rss.xml"),Ml.forEach(t),Mn=i(E," to "),Ht=n(E,"CODE",{});var $l=o(Ht);$n=i($l,"feed.xml"),$l.forEach(t),E.forEach(t),Hl.forEach(t),Bn=h(f),Kt=n(f,"LI",{});var Bl=o(Kt);Rt=n(Bl,"P",{});var ql=o(Rt);qn=i(ql,"Added my own favicon.ico"),ql.forEach(t),Bl.forEach(t),Nn=h(f),ke=n(f,"LI",{});var Js=o(ke);ve=n(Js,"P",{});var Ws=o(ve);zn=i(Ws,"Changed "),Lt=n(Ws,"CODE",{});var Nl=o(Lt);Gn=i(Nl,"get-posts.js"),Nl.forEach(t),Un=i(Ws," to cater for the legacy frontmatter in my posts, which is not always the same as Matt is using. One big difference is that I use tags, which is a simple array"),Ws.forEach(t),Vn=h(Js),He=n(Js,"PRE",{class:!0});var Ai=o(He);Ai.forEach(t),Js.forEach(t),Jn=h(f),Mt=n(f,"LI",{});var zl=o(Mt);$t=n(zl,"P",{});var Gl=o($t);Wn=i(Gl,"Built my own template with Svelte / Tailwind markup, importing my own fonts (I really like DM Serif Display for the title)"),Gl.forEach(t),zl.forEach(t),Zn=h(f),Bt=n(f,"LI",{});var Ul=o(Bt);qt=n(Ul,"P",{});var Vl=o(qt);Fn=i(Vl,"Added sitemap to the robots.txt"),Vl.forEach(t),Ul.forEach(t),Qn=h(f),Nt=n(f,"LI",{});var Jl=o(Nt);zt=n(Jl,"P",{});var Wl=o(zt);Xn=i(Wl,"I use google as a search engine for the site, so I added that in the top navbar"),Wl.forEach(t),Jl.forEach(t),Yn=h(f),Gt=n(f,"LI",{});var Zl=o(Gt);ge=n(Zl,"P",{});var Zs=o(ge);eo=i(Zs,"Created pages for the tag. They are similar to the index page, but they use a variation of "),Ut=n(Zs,"CODE",{});var Fl=o(Ut);to=i(Fl,"get-posts.js"),Fl.forEach(t),so=i(Zs," to get their content from."),Zs.forEach(t),Zl.forEach(t),f.forEach(t),Os=h(e),U=n(e,"H3",{id:!0});var Ao=o(U);V=n(Ao,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ql=o(V);Vt=n(Ql,"SPAN",{class:!0}),o(Vt).forEach(t),Ql.forEach(t),ao=i(Ao,"Displaying drafts in dev mode in SvelteKit, but excluding it from build"),Ao.forEach(t),js=h(e),T=n(e,"P",{});var ze=o(T);no=i(ze,"I added a field to the frontmatter of the posts I wanted to keep as draft. Adding "),Jt=n(ze,"CODE",{});var Xl=o(Jt);oo=i(Xl,"draft: true"),Xl.forEach(t),lo=i(ze," rather than, say "),Wt=n(ze,"CODE",{});var Yl=o(Wt);io=i(Yl,"published: false"),Yl.forEach(t),ro=i(ze," meant I only needed to add those flags to the posts that were drafts."),ze.forEach(t),Cs=h(e),be=n(e,"PRE",{class:!0});var Oi=o(be);Oi.forEach(t),Hs=h(e),J=n(e,"P",{});var Fs=o(J);po=i(Fs,"I then added a filter to the "),Zt=n(Fs,"CODE",{});var ei=o(Zt);co=i(ei,"get-posts.js"),ei.forEach(t),ho=i(Fs," page to only allow those posts in dev mode"),Fs.forEach(t),Ks=h(e),we=n(e,"PRE",{class:!0});var ji=o(we);ji.forEach(t),Rs=h(e),W=n(e,"H3",{id:!0});var Oo=o(W);Z=n(Oo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ti=o(Z);Ft=n(ti,"SPAN",{class:!0}),o(Ft).forEach(t),ti.forEach(t),uo=i(Oo,"Upgrading to @sveltejs/kit 1.0.0-next.338"),Oo.forEach(t),Ls=h(e),Ke=n(e,"P",{});var si=o(Ke);fo=i(si,"I was having some routing issues I couldn\u2019t work around, but luckily upgrading to the latest version of SvelteKit solved them. I did need to make a couple of changes to the configuration though"),si.forEach(t),Ms=h(e),ye=n(e,"PRE",{class:!0});var Ci=o(ye);Ci.forEach(t),$s=h(e),F=n(e,"H2",{id:!0});var jo=o(F);Q=n(jo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ai=o(Q);Qt=n(ai,"SPAN",{class:!0}),o(Qt).forEach(t),ai.forEach(t),mo=i(jo,"Happy with SvelteKit so far, except for two issues"),jo.forEach(t),Bs=h(e),Re=n(e,"P",{});var ni=o(Re);ko=i(ni,"In the end Matt\u2019s work has saved me a lot of time. Thanks! I like Svelte and think it works well. I\u2019d recommend it for any cases where you don\u2019t want to use React (i.e., when design systems are not involved. There is just no beating React when it comes to create, use, and manage design systems!"),ni.forEach(t),qs=h(e),Le=n(e,"P",{});var oi=o(Le);vo=i(oi,"There are only two outstanding issues that bother me"),oi.forEach(t),Ns=h(e),X=n(e,"UL",{});var Qs=o(X);Xt=n(Qs,"LI",{});var li=o(Xt);go=i(li,"the fact you can\u2019t put the posts outside the repository root"),li.forEach(t),bo=h(Qs),Yt=n(Qs,"LI",{});var ii=o(Yt);wo=i(ii,"some aggressive caching which cannot be turned off. For example the tag pages often need to be reloaded to show their \u2018true\u2019 content. I haven\u2019t worked how to fix that yet"),ii.forEach(t),Qs.forEach(t),zs=h(e),Y=n(e,"H2",{id:!0});var Co=o(Y);ee=n(Co,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ri=o(ee);es=n(ri,"SPAN",{class:!0}),o(es).forEach(t),ri.forEach(t),yo=i(Co,"Prior art"),Co.forEach(t),Gs=h(e),Me=n(e,"UL",{});var pi=o(Me);$e=n(pi,"LI",{});var Ho=o($e);_e=n(Ho,"A",{href:!0,rel:!0});var di=o(_e);_o=i(di,"Matt Jennings"),di.forEach(t),Eo=i(Ho," posts explains a lot of his design choices"),Ho.forEach(t),pi.forEach(t),this.h()},h(){d(Ge,"class","icon icon-link"),d(j,"aria-hidden","true"),d(j,"tabindex","-1"),d(j,"href","#getting-started"),d(I,"id","getting-started"),d(ae,"href","https://github.com/Rich-Harris/degit"),d(ae,"rel","nofollow"),d(ne,"href","https://github.com/mattjennings/sveltekit-blog-template"),d(ne,"rel","nofollow"),d(oe,"class","language-bash"),d(Je,"class","icon icon-link"),d(H,"aria-hidden","true"),d(H,"tabindex","-1"),d(H,"href","#publishing-the-static-sveltekit-markdown-site-to-github-pages"),d(C,"id","publishing-the-static-sveltekit-markdown-site-to-github-pages"),d(le,"class","language-diff"),Li(De.src,Ro=Mi)||d(De,"src",Ro),d(De,"alt","Where to set the docs/ folder as the root for your github pages in the github settings"),d(Qe,"class","icon icon-link"),d(R,"aria-hidden","true"),d(R,"tabindex","-1"),d(R,"href","#importing-markdown-posts-from-outside-the-sveltekit-project-root"),d(K,"id","importing-markdown-posts-from-outside-the-sveltekit-project-root"),d(ie,"href","https://github.com/vitejs/vite/issues/4759"),d(ie,"rel","nofollow"),d(Ye,"class","icon icon-link"),d(M,"aria-hidden","true"),d(M,"tabindex","-1"),d(M,"href","#synchronising-posts-inside-sveltekit-with-a-folder-outside-the-project-using-unison"),d(L,"id","synchronising-posts-inside-sveltekit-with-a-folder-outside-the-project-using-unison"),d(et,"class","icon icon-link"),d(B,"aria-hidden","true"),d(B,"tabindex","-1"),d(B,"href","#using-unison-to-sync-folders-before-a-build"),d($,"id","using-unison-to-sync-folders-before-a-build"),d(re,"href","https://www.cis.upenn.edu/~bcpierce/unison/"),d(re,"rel","nofollow"),d(pe,"class","language-bash"),d(de,"class","language-json"),d(y,"class","code-breakdown"),d(_,"class","code-breakdown"),d(ce,"class","language-bash"),d(yt,"class","icon icon-link"),d(N,"aria-hidden","true"),d(N,"tabindex","-1"),d(N,"href","#back-to-rsync"),d(q,"id","back-to-rsync"),d(he,"class","language-bash"),d(It,"class","icon icon-link"),d(G,"aria-hidden","true"),d(G,"tabindex","-1"),d(G,"href","#adapting-the-boilerplate-to-my-needs"),d(z,"id","adapting-the-boilerplate-to-my-needs"),d(ue,"href","https://github.com/mattjennings/mdsvex-relative-images"),d(ue,"rel","nofollow"),d(Ce,"class","language-js"),d(He,"class","language-markdown"),d(Vt,"class","icon icon-link"),d(V,"aria-hidden","true"),d(V,"tabindex","-1"),d(V,"href","#displaying-drafts-in-dev-mode-in-sveltekit-but-excluding-it-from-build"),d(U,"id","displaying-drafts-in-dev-mode-in-sveltekit-but-excluding-it-from-build"),d(be,"class","language-markdown"),d(we,"class","language-diff"),d(Ft,"class","icon icon-link"),d(Z,"aria-hidden","true"),d(Z,"tabindex","-1"),d(Z,"href","#upgrading-to-sveltejskit-100-next338"),d(W,"id","upgrading-to-sveltejskit-100-next338"),d(ye,"class","language-diff"),d(Qt,"class","icon icon-link"),d(Q,"aria-hidden","true"),d(Q,"tabindex","-1"),d(Q,"href","#happy-with-sveltekit-so-far-except-for-two-issues"),d(F,"id","happy-with-sveltekit-so-far-except-for-two-issues"),d(es,"class","icon icon-link"),d(ee,"aria-hidden","true"),d(ee,"tabindex","-1"),d(ee,"href","#prior-art"),d(Y,"id","prior-art"),d(_e,"href","https://mattjennings.io/blog/rewriting-my-website-in-sveltekit"),d(_e,"rel","nofollow")},m(e,r){p(e,I,r),s(I,j),s(j,Ge),s(I,Xs),p(e,ts,r),p(e,m,r),s(m,Ys),s(m,ae),s(ae,ea),s(m,ta),s(m,ne),s(ne,sa),s(m,aa),s(m,Ue),s(Ue,na),s(m,oa),s(m,Ve),s(Ve,la),s(m,ia),p(e,ss,r),p(e,oe,r),oe.innerHTML=hi,p(e,as,r),p(e,C,r),s(C,H),s(H,Je),s(C,ra),p(e,ns,r),p(e,b,r),s(b,pa),s(b,We),s(We,da),s(b,ca),s(b,Ze),s(Ze,ha),s(b,ua),s(b,Fe),s(Fe,fa),s(b,ma),p(e,os,r),p(e,le,r),le.innerHTML=ui,p(e,ls,r),p(e,xe,r),s(xe,ka),p(e,is,r),p(e,Se,r),s(Se,De),p(e,rs,r),p(e,K,r),s(K,R),s(R,Qe),s(K,va),p(e,ps,r),p(e,x,r),s(x,ga),s(x,ie),s(ie,ba),s(x,wa),s(x,Xe),s(Xe,ya),s(x,_a),p(e,ds,r),p(e,L,r),s(L,M),s(M,Ye),s(L,Ea),p(e,cs,r),p(e,Te,r),s(Te,Ia),p(e,hs,r),p(e,$,r),s($,B),s(B,et),s($,xa),p(e,us,r),p(e,k,r),s(k,Sa),s(k,tt),s(tt,Da),s(k,Ta),s(k,st),s(st,Pa),s(k,Aa),s(k,at),s(at,Oa),s(k,ja),s(k,re),s(re,Ca),s(k,Ha),p(e,fs,r),p(e,w,r),s(w,Ka),s(w,nt),s(nt,Ra),s(w,La),s(w,ot),s(ot,Ma),s(w,$a),s(w,lt),s(lt,Ba),s(w,qa),p(e,ms,r),p(e,pe,r),pe.innerHTML=fi,p(e,ks,r),p(e,Pe,r),s(Pe,Na),p(e,vs,r),p(e,de,r),de.innerHTML=mi,p(e,gs,r),p(e,Ae,r),s(Ae,za),p(e,bs,r),p(e,y,r),s(y,it),s(it,Ga),s(y,rt),s(rt,Ua),s(y,pt),s(pt,Va),s(y,dt),s(dt,Ja),s(y,ct),s(ct,Wa),s(y,ht),s(ht,Za),p(e,ws,r),p(e,_,r),s(_,ut),s(ut,Fa),s(_,ft),s(ft,Qa),s(_,mt),s(mt,Xa),s(_,kt),s(kt,Ya),s(_,vt),s(vt,en),s(_,gt),s(gt,tn),p(e,ys,r),p(e,S,r),s(S,sn),s(S,bt),s(bt,an),s(S,nn),s(S,wt),s(wt,on),s(S,ln),p(e,_s,r),p(e,ce,r),ce.innerHTML=ki,p(e,Es,r),p(e,Oe,r),s(Oe,rn),p(e,Is,r),p(e,q,r),s(q,N),s(N,yt),s(q,pn),p(e,xs,r),p(e,D,r),s(D,dn),s(D,_t),s(_t,cn),s(D,hn),s(D,Et),s(Et,un),s(D,fn),p(e,Ss,r),p(e,he,r),he.innerHTML=vi,p(e,Ds,r),p(e,je,r),s(je,mn),p(e,Ts,r),p(e,z,r),s(z,G),s(G,It),s(z,kn),p(e,Ps,r),p(e,g,r),s(g,vn),s(g,ue),s(ue,gn),s(g,bn),s(g,xt),s(xt,wn),s(g,yn),s(g,St),s(St,_n),s(g,En),s(g,Dt),s(Dt,In),p(e,As,r),p(e,u,r),s(u,fe),s(fe,me),s(me,xn),s(me,Tt),s(Tt,Sn),s(me,Dn),s(fe,Tn),s(fe,Ce),Ce.innerHTML=gi,s(u,Pn),s(u,Pt),s(Pt,v),s(v,An),s(v,At),s(At,On),s(v,jn),s(v,Ot),s(Ot,Cn),s(v,Hn),s(v,jt),s(jt,Kn),s(v,Rn),s(v,Ct),s(Ct,Ln),s(v,Mn),s(v,Ht),s(Ht,$n),s(u,Bn),s(u,Kt),s(Kt,Rt),s(Rt,qn),s(u,Nn),s(u,ke),s(ke,ve),s(ve,zn),s(ve,Lt),s(Lt,Gn),s(ve,Un),s(ke,Vn),s(ke,He),He.innerHTML=bi,s(u,Jn),s(u,Mt),s(Mt,$t),s($t,Wn),s(u,Zn),s(u,Bt),s(Bt,qt),s(qt,Fn),s(u,Qn),s(u,Nt),s(Nt,zt),s(zt,Xn),s(u,Yn),s(u,Gt),s(Gt,ge),s(ge,eo),s(ge,Ut),s(Ut,to),s(ge,so),p(e,Os,r),p(e,U,r),s(U,V),s(V,Vt),s(U,ao),p(e,js,r),p(e,T,r),s(T,no),s(T,Jt),s(Jt,oo),s(T,lo),s(T,Wt),s(Wt,io),s(T,ro),p(e,Cs,r),p(e,be,r),be.innerHTML=wi,p(e,Hs,r),p(e,J,r),s(J,po),s(J,Zt),s(Zt,co),s(J,ho),p(e,Ks,r),p(e,we,r),we.innerHTML=yi,p(e,Rs,r),p(e,W,r),s(W,Z),s(Z,Ft),s(W,uo),p(e,Ls,r),p(e,Ke,r),s(Ke,fo),p(e,Ms,r),p(e,ye,r),ye.innerHTML=_i,p(e,$s,r),p(e,F,r),s(F,Q),s(Q,Qt),s(F,mo),p(e,Bs,r),p(e,Re,r),s(Re,ko),p(e,qs,r),p(e,Le,r),s(Le,vo),p(e,Ns,r),p(e,X,r),s(X,Xt),s(Xt,go),s(X,bo),s(X,Yt),s(Yt,wo),p(e,zs,r),p(e,Y,r),s(Y,ee),s(ee,es),s(Y,yo),p(e,Gs,r),p(e,Me,r),s(Me,$e),s($e,_e),s(_e,_o),s($e,Eo)},p:Ko,i:Ko,o:Ko,d(e){e&&t(I),e&&t(ts),e&&t(m),e&&t(ss),e&&t(oe),e&&t(as),e&&t(C),e&&t(ns),e&&t(b),e&&t(os),e&&t(le),e&&t(ls),e&&t(xe),e&&t(is),e&&t(Se),e&&t(rs),e&&t(K),e&&t(ps),e&&t(x),e&&t(ds),e&&t(L),e&&t(cs),e&&t(Te),e&&t(hs),e&&t($),e&&t(us),e&&t(k),e&&t(fs),e&&t(w),e&&t(ms),e&&t(pe),e&&t(ks),e&&t(Pe),e&&t(vs),e&&t(de),e&&t(gs),e&&t(Ae),e&&t(bs),e&&t(y),e&&t(ws),e&&t(_),e&&t(ys),e&&t(S),e&&t(_s),e&&t(ce),e&&t(Es),e&&t(Oe),e&&t(Is),e&&t(q),e&&t(xs),e&&t(D),e&&t(Ss),e&&t(he),e&&t(Ds),e&&t(je),e&&t(Ts),e&&t(z),e&&t(Ps),e&&t(g),e&&t(As),e&&t(u),e&&t(Os),e&&t(U),e&&t(js),e&&t(T),e&&t(Cs),e&&t(be),e&&t(Hs),e&&t(J),e&&t(Ks),e&&t(we),e&&t(Rs),e&&t(W),e&&t(Ls),e&&t(Ke),e&&t(Ms),e&&t(ye),e&&t($s),e&&t(F),e&&t(Bs),e&&t(Re),e&&t(qs),e&&t(Le),e&&t(Ns),e&&t(X),e&&t(zs),e&&t(Y),e&&t(Gs),e&&t(Me)}}}const qi={date:"2022-05-03T00:00:00.000Z",updated:"2022-05-25T22:39:29.436Z",draft:!1,archived:!1,title:"How I built a markdown drive static website with SvelteKit and Tailwind",tags:["svelte","gotofritz"],excerpt:'In <a href="/blog/blog-with-sveltekit-and-markdown">my last post I ported my existing blog to SvelteKit</a>, to get to used to it. Now I am going to build a new version from scratch, using markdown and tailwind. I will use <a href="https://github.com/mattjennings/sveltekit-blog-template">Matt Jennings&#39;s excellent SvelteKit blog template</a> as seed.'};class Ni extends Hi{constructor(I){super(),Ki(this,I,null,$i,Ri,{})}}export{Ni as default,qi as metadata};
