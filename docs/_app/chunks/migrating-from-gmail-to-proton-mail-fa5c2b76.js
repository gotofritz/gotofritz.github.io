import{S as Hr,i as qr,s as Br,e as n,t as l,k as p,c as s,a as o,d as t,h as i,m as c,b as r,g as d,I as e,E as Nl}from"./index-6e518972.js";function Vr(gr){let P,S,st,bn,wa,Se,_n,ba,O,En,ie,In,An,_a,M,D,ot,Pn,Ea,m,lt,xn,Tn,re,Ln,Oe,Cn,Sn,On,pe,Mn,ce,Dn,jn,Nn,it,Rn,Gn,rt,Hn,qn,pt,Bn,Vn,ct,Yn,Ia,Me,Un,Aa,j,N,ut,Fn,Pa,ue,de,Wn,$n,xa,R,G,dt,Kn,Ta,H,q,ht,zn,La,De,Xn,Ca,je,Zn,Sa,h,Jn,ft,Qn,es,mt,ts,as,kt,ns,ss,yt,os,ls,gt,is,rs,vt,ps,cs,wt,us,ds,bt,hs,fs,Oa,B,ms,_t,ks,ys,Ma,w,T,gs,Et,vs,ws,It,bs,_s,Es,he,Is,At,As,Ps,xs,Pt,Ts,Ls,fe,Cs,xt,Ss,Os,Ms,Tt,Ds,Da,V,js,Lt,Ns,Rs,ja,Ne,Gs,Na,Y,U,Ct,Hs,Ra,Re,qs,Ga,F,W,St,Bs,Ha,Ge,me,Vs,qa,$,K,Ot,Ys,Ba,k,ke,Us,ye,Fs,Ws,$s,Mt,Ks,zs,Dt,Xs,Zs,jt,Js,Qs,Nt,eo,to,z,ao,Rt,no,so,Gt,oo,lo,Ht,io,Va,He,ro,Ya,f,ge,qt,po,co,qe,vr=`<code class="language-bash">$ python -V
<span class="token number">3.8</span>.5
$ pyenv <span class="token builtin class-name">local</span> <span class="token number">3.10</span>.1
<span class="token punctuation">..</span>.
$ python -V
<span class="token number">3.10</span>.1
$ poetry init
<span class="token punctuation">..</span>. accept all default except <span class="token keyword">for</span>
<span class="token punctuation">..</span>. <span class="token variable"><span class="token variable">&#96;</span>Would you like to define your main dependencies interactively?<span class="token variable">&#96;</span></span>
$ poetry shell</code>`,uo,ve,Bt,ho,fo,Be,wr='<code class="language-bash">$ poetry <span class="token function">add</span> google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client</code>',mo,we,be,ko,Vt,yo,go,vo,Ve,br=`<code class="language-bash"> $ <span class="token function">cp</span> ~/Downloads/client<span class="token punctuation">..</span><span class="token punctuation">..</span>json client_secret.json
 $ <span class="token function">touch</span> .gitignore
 $ <span class="token builtin class-name">echo</span> <span class="token string">"client_secret.json"</span> <span class="token operator">>></span> .gitignore</code>`,wo,_e,Yt,bo,_o,Ye,_r=`<code class="language-bash"> $ <span class="token function">cp</span> -r ~/Downloads/takeout/playlists <span class="token builtin class-name">.</span>
 $ <span class="token function">touch</span> playlists/.gitkeep
 $ <span class="token builtin class-name">echo</span> <span class="token string">"playlists/*.csv"</span> <span class="token operator">>></span> .gitignore</code>`,Eo,Ut,Ft,Io,Ao,Ee,Ie,Po,Wt,xo,To,Lo,Ue,Er=`<code class="language-json"><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">"./playlists/blah.csv"</span><span class="token punctuation">,</span> <span class="token string">"PLabcdefghijklmnopqrstu-vwxyz12345"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">"./playlists/another one.csv"</span><span class="token punctuation">,</span> <span class="token string">"PLutsrqponmlkjihgfedcba-vwxyz67890"</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span></code>`,Co,A,$t,So,Oo,Fe,Ir=`<code class="language-python"><span class="token comment"># uploader.py</span>

<span class="token keyword">import</span> csv
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> json

filenames <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./playlists/config.json"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
   <span class="token keyword">for</span> csv_filename<span class="token punctuation">,</span> playlist_code <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>
       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Adding videos from </span><span class="token interpolation"><span class="token punctuation">&#123;</span>csv_filename<span class="token punctuation">&#125;</span></span><span class="token string"> to </span><span class="token interpolation"><span class="token punctuation">&#123;</span>playlist_code<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">"&#92;n&#92;n"</span><span class="token punctuation">)</span>

       <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>csv_filename<span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>
           <span class="token comment"># skip the first 3 lines, which contain meta information about the playlist</span>
           playlist_csv <span class="token operator">=</span> csv_file<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

           reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictReader<span class="token punctuation">(</span>playlist_csv<span class="token punctuation">)</span>
           <span class="token keyword">try</span><span class="token punctuation">:</span>
               <span class="token keyword">for</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
                   <span class="token keyword">if</span> <span class="token keyword">not</span> row<span class="token punctuation">:</span>
                       <span class="token keyword">continue</span>
                   <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">"Video ID"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
           <span class="token keyword">except</span> csv<span class="token punctuation">.</span>Error <span class="token keyword">as</span> e<span class="token punctuation">:</span>
               sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token string">"file &#123;&#125;, line &#123;&#125;: &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> reader<span class="token punctuation">.</span>line_num<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code>`,Mo,Kt,Do,jo,We,Ar=`<code class="language-bash">Adding videos from ./playlists/blah.csv to PL123456-78910

abcdefghijk
lmnopqrstuv
<span class="token punctuation">..</span>.</code>`,No,Ae,zt,Ro,Go,$e,Pr=`<code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import os
</span><span class="token prefix inserted">+</span><span class="token line"> import google.oauth2.credentials
</span><span class="token prefix inserted">+</span><span class="token line"> import google_auth_oauthlib.flow
</span><span class="token prefix inserted">+</span><span class="token line"> from googleapiclient.discovery import build
</span><span class="token prefix inserted">+</span><span class="token line"> from googleapiclient.errors import HttpError
</span><span class="token prefix inserted">+</span><span class="token line"> from google_auth_oauthlib.flow import InstalledAppFlow
</span></span>
filenames = json.loads(open("./playlists/config.json").read())

<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> CLIENT_SECRETS_FILE = "client_secret.json"
</span></span>
<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> # This scope allows for full read/write
</span><span class="token prefix inserted">+</span><span class="token line"> # access to the authenticated user's account
</span><span class="token prefix inserted">+</span><span class="token line"> # and requires requests to use an SSL connection.
</span><span class="token prefix inserted">+</span><span class="token line"> SCOPES = ["https://www.googleapis.com/auth/youtube.force-ssl"]
</span><span class="token prefix inserted">+</span><span class="token line"> API_SERVICE_NAME = "youtube"
</span><span class="token prefix inserted">+</span><span class="token line"> API_VERSION = "v3"</span></span></code>`,Ua,E,Xt,Ho,qo,Zt,Bo,Vo,Jt,Yo,Uo,Qt,Fo,Fa,X,ea,Wo,$o,ta,Ko,Wa,Ke,zo,$a,g,aa,L,Xo,na,Zo,Jo,sa,Qo,el,tl,oa,Pe,Z,la,al,nl,ia,xe,J,ra,sl,ol,pa,Q,ee,ca,ua,ll,il,rl,da,ha,pl,cl,C,fa,ul,dl,ze,xr=`<code class="language-undefined">
When it runs it tries stops and asks me for an authorisation code:

&#96;&#96;&#96;bash
$ python uploader.py
Please visit this URL to authorize this application: https://accounts.google.com/o/oauth2/auth?response_type=code&amp;....etc...
Enter the authorization code:</code>`,hl,ma,fl,Ka,Xe,Te,Le,ml,ka,kl,yl,gl,Ze,Tr=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">add_to_playlist_a_video</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> playlistId<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> videoId<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Adding </span><span class="token interpolation"><span class="token punctuation">&#123;</span>videoId<span class="token punctuation">&#125;</span></span><span class="token string"> to </span><span class="token interpolation"><span class="token punctuation">&#123;</span>playlistId<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> <span class="token punctuation">(</span>
            client<span class="token punctuation">.</span>playlistItems<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span>insert<span class="token punctuation">(</span>
                part<span class="token operator">=</span><span class="token string">"snippet, contentDetails"</span><span class="token punctuation">,</span>
                body<span class="token operator">=</span><span class="token punctuation">&#123;</span>
                    <span class="token string">"contentDetails"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">"videoId"</span><span class="token punctuation">:</span> videoId<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                    <span class="token string">"snippet"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
                        <span class="token string">"playlistId"</span><span class="token punctuation">:</span> playlistId<span class="token punctuation">,</span>
                        <span class="token string">"resourceId"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
                            <span class="token string">"kind"</span><span class="token punctuation">:</span> <span class="token string">"youtube#video"</span><span class="token punctuation">,</span>
                            <span class="token string">"videoId"</span><span class="token punctuation">:</span> videoId<span class="token punctuation">,</span>
                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
            <span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>
            <span class="token string-interpolation"><span class="token string">f" + </span><span class="token interpolation"><span class="token punctuation">&#123;</span>response<span class="token punctuation">[</span><span class="token string">'snippet'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string"> / "</span></span>
            <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>response<span class="token punctuation">[</span><span class="token string">'snippet'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string"> in playlist"</span></span>
        <span class="token punctuation">)</span>
    <span class="token keyword">except</span> HttpError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">if</span> e<span class="token punctuation">.</span>error_details<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"reason"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"quotaExceeded"</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f">>>> Quota exceeded when trying to add </span><span class="token interpolation"><span class="token punctuation">&#123;</span>videoId<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
            exit<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f">>>> ERROR: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span>error_details<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></code>`,za,te,ae,ya,vl,Xa,Je,wl,Za,ne,se,ga,bl,Ja,Qe,_l,Qa,et,Ce,El;return{c(){P=n("h2"),S=n("a"),st=n("span"),bn=l("Times are tough, ad revenue is down"),wa=p(),Se=n("p"),_n=l("Google is not well. Not only the search engine is losing its edge, but ad revenue is going down. They sent an email to one of my free accounts which simply said \u201CA quick reminder that showing ads is the primary way we fund our services\u201D. And then a link to change my privacy settings. The mail didn\u2019t even tell me which settings exactly are troubling them. Smacked of desperation. And then of course if you follow the link, out of curiosity more than goodwill, you have to login first. And then the UI forgets what the original link was and you are just left there. Oh google, google."),ba=p(),O=n("p"),En=l("More importantly, they want to charge "),ie=n("a"),In=l("\u201Csmall businesses\u201D for using the google mail servers"),An=l(". By \u201Csmall business\u201D they mean anyone with their on domain. What a mercantile view of the internet, google. Anyway it\u2019s fair enough, they already data mined the shit out of our private correspondence. They don\u2019t need us any more, they know us better than we know ourselves. I wish I had the time, skills, and inclination to manage my own web server, but I don\u2019t. So I will take this chance to migrate away from them. As it happens my Samsung also died at the same time (second time around - I don\u2019t think I will bother with them any more), so it\u2019s a chance to move to an iPhone."),_a=p(),M=n("h2"),D=n("a"),ot=n("span"),Pn=l("Migrating away from Google - a laundry list"),Ea=p(),m=n("ul"),lt=n("li"),xn=l("At work we use GCP heavily of course, but I personally don\u2019t use any of that"),Tn=p(),re=n("li"),Ln=l("I use "),Oe=n("a"),Cn=l("Google Apps Script"),Sn=l(" quite heavily, but I can carry on doing that with my free accounts but I will need to move over my scripts. None of them are mission critical stuff, I can lose it any time. Actually transferring them is not possible. Docs, Sheets etc belong to \u201Cmy org\u201D, and cannot be transferred. I will have to copy and paste them manually. How tedious."),On=p(),pe=n("li"),Mn=l("I have a few youtube playlists - I use them to bookmark music and then download it via "),ce=n("a"),Dn=l("youtube-dl"),jn=l(". I will have to copy them over to one of my free accounts"),Nn=p(),it=n("li"),Rn=l("Google Drive will be replaced by Dropbox"),Gn=p(),rt=n("li"),Hn=l("Contacts"),qn=p(),pt=n("li"),Bn=l("Calendars"),Vn=p(),ct=n("li"),Yn=l("Mail. The last three are tricky and I am not going to roll my own, life\u2019s too short. I will have to find a paid service"),Ia=p(),Me=n("p"),Un=l("In short it\u2019s just a few things to copy over, some manually. The big one is migrating Mail / Calendars / Contacts. I will use Proton for that. They seems decent."),Aa=p(),j=n("h2"),N=n("a"),ut=n("span"),Fn=l("Copying youtube playlists from one user to another"),Pa=p(),ue=n("p"),de=n("a"),Wn=l("This stack overflow answer"),$n=l(" did the job."),xa=p(),R=n("h2"),G=n("a"),dt=n("span"),Kn=l("Migrating to Proton mail"),Ta=p(),H=n("h3"),q=n("a"),ht=n("span"),zn=l("Setting up and importing mail"),La=p(),De=n("p"),Xn=l("The onboarding page is very good. Buying an account and setting it up is child\u2019s play. Importing all my data from Google is also super easy. Calendars imports are perfect. Contacts are usable, although I have to see what they are like to use in the phone app. The main issue is email."),Ca=p(),je=n("p"),Zn=l("Importing mail into Proton is super fast. But it needs re-organising. I am quite well organised with my mail filing. I spent more than a decade fine tuning a system that I mutated from GTD, and I am quite happy with it. I have seven major areas I organise my activity in, and then nested subfolders within them. Of course GMail doesn\u2019t use folders but labels."),Sa=p(),h=n("p"),Jn=l("Proton is quite confusing in that it asks you to assign a label to your import. It\u2019s not spelled out, but that is an "),ft=n("em"),Qn=l("additional"),es=l(" label (with the date and time of your import). Your GMail labels will stay. Although renamed. For example I had a hierarchical label "),mt=n("code"),ts=l("Admin > Bills > DE Bills"),as=l(". Proton creates three labels for that: "),kt=n("code"),ns=l("Admin"),ss=l(", "),yt=n("code"),os=l("Admin-Bills"),ls=l(", "),gt=n("code"),is=l("Admin-Bills-DE-Bills"),rs=l(". There is no hierarchy for labels, so they all site at the top level. Proton also have folders, which "),vt=n("em"),ps=l("can"),cs=l(" be hierarchical. But AFAIK there is no easy way to convert labels to folders. You have to do it manually. In fact, it\u2019s even worse. Under the bonnet, labels and folders are the same thing. I know because I couldn\u2019t create a folder, say, called "),wt=n("code"),us=l("Admin"),ds=l(". Proton says there is already one. But there is only a label of that name. Hence they "),bt=n("em"),hs=l("must"),fs=l(" be the same thing."),Oa=p(),B=n("p"),ms=l("\u201CWho cares?\u201D I heard myself think. Well you do if you want to create children of "),_t=n("code"),ks=l("Admin"),ys=l(". To create the tree folder structure inherent in the Gmail labels, one needs to:"),Ma=p(),w=n("ul"),T=n("li"),gs=l("rename the top level labels (for example "),Et=n("code"),vs=l("Admin"),ws=l(" to "),It=n("code"),bs=l("Admin2"),_s=l(")"),Es=p(),he=n("li"),Is=l("Manually create folders with the same name as the labels before you rename them (so, "),At=n("code"),As=l("Admin"),Ps=l(" for example)"),xs=p(),Pt=n("li"),Ts=l("Manually recreate all nested folders (no need to rename those, there won\u2019t be any clashes)"),Ls=p(),fe=n("li"),Cs=l("Manually move mail with label X to folder X > Y > Z. For each label. For each "),xt=n("em"),Ss=l("page"),Os=l(" of each label. You need to select all mails with that label, then move them, then remove the label. Then refresh. You will get the next page of mails for that label. Lather, rinse and repeat. IT TAKES FOREVER."),Ms=p(),Tt=n("li"),Ds=l("Delete the labels, one by one"),Da=p(),V=n("p"),js=l("The whole process is quite laborious, and made more by the UI. Labels are not in an alphabetical order, for a start. Also the page which lists them and the page where you can edit them are different (you can\u2019t just right click and rename it). So it\u2019s two tabs open and lots of back and forth. And to delete a label you have to select from a pulldown menu and then confirm. And you can\u2019t delete them in order - if you delete the "),Lt=n("code"),Ns=l("Admin"),Rs=l(" label you also delete the nested labels (even though they are not officially nested \u{1F926}\u200D\u2642\uFE0F). It\u2019s all quite laborious and messed up."),ja=p(),Ne=n("p"),Gs=l("But it\u2019s a one off process, so I\u2019ll give it the benefit of the doubt."),Na=p(),Y=n("h2"),U=n("a"),Ct=n("span"),Hs=l("Conclusion: saved from a potential Kafkaesque nightmare"),Ra=p(),Re=n("p"),qs=l("I always wanted to migrate away from Google. Not because I am anti-Google or anything, but out of anxiety. They are a huge, faceless organisation without even a hint of customer support. I once worked on a youtube project for a Very Large Energy Company, which paid for support. And Google treated them like dirt, hardly returning their calls and scheduling meetings weeks down the lines. If that\u2019s how they treat a Very Large Energy Company what hope do I have. Any glitch in the system, any breach of some unspoken rule, and I can find myself locked out of my account. So many services depend on it! And nobody to contact for help. It would be a Kafkaesque nightmare. Glad I\u2019m no longer in danger now."),Ga=p(),F=n("h2"),W=n("a"),St=n("span"),Bs=l("download youtube data"),Ha=p(),Ge=n("p"),me=n("a"),Vs=l("Went to"),qa=p(),$=n("h2"),K=n("a"),Ot=n("span"),Ys=l("Creating"),Ba=p(),k=n("ol"),ke=n("li"),Us=l("Went to "),ye=n("a"),Fs=l("https://console.developers.google.com/"),Ws=l(" with my free Google account, created a new project"),$s=p(),Mt=n("li"),Ks=l("Searched for \u2018YouTube API\u2019 and enabled it"),zs=p(),Dt=n("li"),Xs=l("Clicked on \u2018credentials\u2019 on side bar, and then \u2018Configure consent screen\u2019. I had to pick \u2018External\u2019. Added the email address and a made up app name in the next screen."),Zs=p(),jt=n("li"),Js=l("Click on \u2018add scopes\u2019 and find the YouTube API ones in the list. Select them all and clicked on \u2018save\u2019"),Qs=p(),Nt=n("li"),eo=l("In the next screen, added myself as a test user, then \u2018Save and Continue\u2019"),to=p(),z=n("li"),ao=l("Back on \u2018credentials\u2019 on side bar, then "),Rt=n("code"),no=l("Create OAuth client ID"),so=l(". Picked "),Gt=n("code"),oo=l("OAuth Client Id"),lo=p(),Ht=n("li"),io=l("In the next screen I enter some app details. NOTE: Type should not be \u201Cweb application\u201D, but \u201Cdesktop app\u201D. Clicked on \u201Ccreate\u201D and then \u201Cdownload JSON\u201D in the modal box on the next screen"),Va=p(),He=n("p"),ro=l("Setting up project"),Ya=p(),f=n("ol"),ge=n("li"),qt=n("p"),po=l("created a folder on my local machine, then made sure the right version of python was installed with pyenv, then inited the project with poetry"),co=p(),qe=n("pre"),uo=p(),ve=n("li"),Bt=n("p"),ho=l("Added dependencies"),fo=p(),Be=n("pre"),mo=p(),we=n("li"),be=n("p"),ko=l("Moved the "),Vt=n("code"),yo=l("client_json_xxxxx"),go=l(" file and playlists files to my project folder. Don\u2019t forget to add to .gitignore!"),vo=p(),Ve=n("pre"),wo=p(),_e=n("li"),Yt=n("p"),bo=l("Copy the playlist data to playlists folder. Also add to .gitignore, but keep the folder"),_o=p(),Ye=n("pre"),Eo=p(),Ut=n("li"),Ft=n("p"),Io=l("I manually created the target playlists in the target account. I could have used the YouTube API, but it\u2019s much faster this way"),Ao=p(),Ee=n("li"),Ie=n("p"),Po=l("I created a config file in the plalylists folder, with pair of strings to map CSV file from the YouTube dowload and the newly created playlist. Added that file to "),Wt=n("code"),xo=l(".gitignore"),To=l(" too, but left a blank example"),Lo=p(),Ue=n("pre"),Co=p(),A=n("li"),$t=n("p"),So=l("Started a little python script to read the local CSV data and make sure it\u2019s all there"),Oo=p(),Fe=n("pre"),Mo=p(),Kt=n("p"),Do=l("The output looks legit"),jo=p(),We=n("pre"),No=p(),Ae=n("li"),zt=n("p"),Ro=l("I then try logging into the Google Api"),Go=p(),$e=n("pre"),Ua=p(),E=n("ul"),Xt=n("li"),Ho=l("def get_authenticated_service():"),qo=p(),Zt=n("li"),Bo=l("flow = InstalledAppFlow.from_client_secrets_file(CLIENT_SECRETS_FILE, SCOPES)"),Vo=p(),Jt=n("li"),Yo=l("credentials = flow.run_console()"),Uo=p(),Qt=n("li"),Fo=l("return build(API_SERVICE_NAME, API_VERSION, credentials=credentials)"),Fa=p(),X=n("ul"),ea=n("li"),Wo=l("def print_response(response):"),$o=p(),ta=n("li"),Ko=l("print(response)"),Wa=p(),Ke=n("p"),zo=l(`for csv_filename, playlist_code in filenames:
\u2026`),$a=p(),g=n("ul"),aa=n("li"),L=n("p"),Xo=l("if "),na=n("strong"),Zo=l("name"),Jo=l(" == \u201D"),sa=n("strong"),Qo=l("main"),el=l("\u201C:"),tl=p(),oa=n("li"),Pe=n("h1"),Z=n("a"),la=n("span"),al=l("When running locally, disable OAuthlib\u2019s"),nl=p(),ia=n("li"),xe=n("h1"),J=n("a"),ra=n("span"),sl=l("HTTPs verification. When running in production"),ol=p(),pa=n("li"),Q=n("h1"),ee=n("a"),ca=n("span"),ua=n("em"),ll=l("do not"),il=l(" leave this option enabled."),rl=p(),da=n("li"),ha=n("p"),pl=l("os.environ[\u201COAUTHLIB_INSECURE_TRANSPORT\u201D] = \u201C1\u201D"),cl=p(),C=n("li"),fa=n("p"),ul=l(`client = get_authenticated_service()
main()`),dl=p(),ze=n("pre"),hl=p(),ma=n("p"),fl=l("I paste the URL in a browser, authenticate, copy the code, and paste it on the CLI. I have to do this every time I run the script, but it works"),Ka=p(),Xe=n("ol"),Te=n("li"),Le=n("p"),ml=l("Then it\u2019s a matter of creating a function to add the video to the playlist. There is an issue that one is only allowed a quota, which at the time of writing works out to about 100 videos per day. I could add code to save the excess videoIds to a new spreadsheet, to be uploaded tomorrow. But once again, this is a one off job and I can do that part manually. If I "),ka=n("em"),kl=l("were"),yl=l(" to go down that route, I would probably collate all the CSV files into a single one, then it would be simpler to handle. Instead the script bails out when it realises the quota has been reached."),gl=p(),Ze=n("pre"),za=p(),te=n("h3"),ae=n("a"),ya=n("span"),vl=l("Downloading google script"),Xa=p(),Je=n("p"),wl=l(`pnpm i -g @google/clasp
clasp login login
clasp clone [script id]`),Za=p(),ne=n("h3"),se=n("a"),ga=n("span"),bl=l("Conclusion"),Ja=p(),Qe=n("p"),_l=l("It\u2019s the kind of script that is barely useful if you run it once, although it is interesting to play with the YouTube API every now and then. But it will more useful later"),Qa=p(),et=n("p"),Ce=n("a"),El=l("https://www.geeksforgeeks.org/youtube-data-api-playlist-set-1"),this.h()},l(a){P=s(a,"H2",{id:!0});var u=o(P);S=s(u,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Rl=o(S);st=s(Rl,"SPAN",{class:!0}),o(st).forEach(t),Rl.forEach(t),bn=i(u,"Times are tough, ad revenue is down"),u.forEach(t),wa=c(a),Se=s(a,"P",{});var Gl=o(Se);_n=i(Gl,"Google is not well. Not only the search engine is losing its edge, but ad revenue is going down. They sent an email to one of my free accounts which simply said \u201CA quick reminder that showing ads is the primary way we fund our services\u201D. And then a link to change my privacy settings. The mail didn\u2019t even tell me which settings exactly are troubling them. Smacked of desperation. And then of course if you follow the link, out of curiosity more than goodwill, you have to login first. And then the UI forgets what the original link was and you are just left there. Oh google, google."),Gl.forEach(t),ba=c(a),O=s(a,"P",{});var en=o(O);En=i(en,"More importantly, they want to charge "),ie=s(en,"A",{href:!0,rel:!0});var Hl=o(ie);In=i(Hl,"\u201Csmall businesses\u201D for using the google mail servers"),Hl.forEach(t),An=i(en,". By \u201Csmall business\u201D they mean anyone with their on domain. What a mercantile view of the internet, google. Anyway it\u2019s fair enough, they already data mined the shit out of our private correspondence. They don\u2019t need us any more, they know us better than we know ourselves. I wish I had the time, skills, and inclination to manage my own web server, but I don\u2019t. So I will take this chance to migrate away from them. As it happens my Samsung also died at the same time (second time around - I don\u2019t think I will bother with them any more), so it\u2019s a chance to move to an iPhone."),en.forEach(t),_a=c(a),M=s(a,"H2",{id:!0});var Il=o(M);D=s(Il,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ql=o(D);ot=s(ql,"SPAN",{class:!0}),o(ot).forEach(t),ql.forEach(t),Pn=i(Il,"Migrating away from Google - a laundry list"),Il.forEach(t),Ea=c(a),m=s(a,"UL",{});var b=o(m);lt=s(b,"LI",{});var Bl=o(lt);xn=i(Bl,"At work we use GCP heavily of course, but I personally don\u2019t use any of that"),Bl.forEach(t),Tn=c(b),re=s(b,"LI",{});var tn=o(re);Ln=i(tn,"I use "),Oe=s(tn,"A",{href:!0});var Vl=o(Oe);Cn=i(Vl,"Google Apps Script"),Vl.forEach(t),Sn=i(tn," quite heavily, but I can carry on doing that with my free accounts but I will need to move over my scripts. None of them are mission critical stuff, I can lose it any time. Actually transferring them is not possible. Docs, Sheets etc belong to \u201Cmy org\u201D, and cannot be transferred. I will have to copy and paste them manually. How tedious."),tn.forEach(t),On=c(b),pe=s(b,"LI",{});var an=o(pe);Mn=i(an,"I have a few youtube playlists - I use them to bookmark music and then download it via "),ce=s(an,"A",{href:!0,rel:!0});var Yl=o(ce);Dn=i(Yl,"youtube-dl"),Yl.forEach(t),jn=i(an,". I will have to copy them over to one of my free accounts"),an.forEach(t),Nn=c(b),it=s(b,"LI",{});var Ul=o(it);Rn=i(Ul,"Google Drive will be replaced by Dropbox"),Ul.forEach(t),Gn=c(b),rt=s(b,"LI",{});var Fl=o(rt);Hn=i(Fl,"Contacts"),Fl.forEach(t),qn=c(b),pt=s(b,"LI",{});var Wl=o(pt);Bn=i(Wl,"Calendars"),Wl.forEach(t),Vn=c(b),ct=s(b,"LI",{});var $l=o(ct);Yn=i($l,"Mail. The last three are tricky and I am not going to roll my own, life\u2019s too short. I will have to find a paid service"),$l.forEach(t),b.forEach(t),Ia=c(a),Me=s(a,"P",{});var Kl=o(Me);Un=i(Kl,"In short it\u2019s just a few things to copy over, some manually. The big one is migrating Mail / Calendars / Contacts. I will use Proton for that. They seems decent."),Kl.forEach(t),Aa=c(a),j=s(a,"H2",{id:!0});var Al=o(j);N=s(Al,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var zl=o(N);ut=s(zl,"SPAN",{class:!0}),o(ut).forEach(t),zl.forEach(t),Fn=i(Al,"Copying youtube playlists from one user to another"),Al.forEach(t),Pa=c(a),ue=s(a,"P",{});var Pl=o(ue);de=s(Pl,"A",{href:!0,rel:!0});var Xl=o(de);Wn=i(Xl,"This stack overflow answer"),Xl.forEach(t),$n=i(Pl," did the job."),Pl.forEach(t),xa=c(a),R=s(a,"H2",{id:!0});var xl=o(R);G=s(xl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Zl=o(G);dt=s(Zl,"SPAN",{class:!0}),o(dt).forEach(t),Zl.forEach(t),Kn=i(xl,"Migrating to Proton mail"),xl.forEach(t),Ta=c(a),H=s(a,"H3",{id:!0});var Tl=o(H);q=s(Tl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Jl=o(q);ht=s(Jl,"SPAN",{class:!0}),o(ht).forEach(t),Jl.forEach(t),zn=i(Tl,"Setting up and importing mail"),Tl.forEach(t),La=c(a),De=s(a,"P",{});var Ql=o(De);Xn=i(Ql,"The onboarding page is very good. Buying an account and setting it up is child\u2019s play. Importing all my data from Google is also super easy. Calendars imports are perfect. Contacts are usable, although I have to see what they are like to use in the phone app. The main issue is email."),Ql.forEach(t),Ca=c(a),je=s(a,"P",{});var ei=o(je);Zn=i(ei,"Importing mail into Proton is super fast. But it needs re-organising. I am quite well organised with my mail filing. I spent more than a decade fine tuning a system that I mutated from GTD, and I am quite happy with it. I have seven major areas I organise my activity in, and then nested subfolders within them. Of course GMail doesn\u2019t use folders but labels."),ei.forEach(t),Sa=c(a),h=s(a,"P",{});var y=o(h);Jn=i(y,"Proton is quite confusing in that it asks you to assign a label to your import. It\u2019s not spelled out, but that is an "),ft=s(y,"EM",{});var ti=o(ft);Qn=i(ti,"additional"),ti.forEach(t),es=i(y," label (with the date and time of your import). Your GMail labels will stay. Although renamed. For example I had a hierarchical label "),mt=s(y,"CODE",{});var ai=o(mt);ts=i(ai,"Admin > Bills > DE Bills"),ai.forEach(t),as=i(y,". Proton creates three labels for that: "),kt=s(y,"CODE",{});var ni=o(kt);ns=i(ni,"Admin"),ni.forEach(t),ss=i(y,", "),yt=s(y,"CODE",{});var si=o(yt);os=i(si,"Admin-Bills"),si.forEach(t),ls=i(y,", "),gt=s(y,"CODE",{});var oi=o(gt);is=i(oi,"Admin-Bills-DE-Bills"),oi.forEach(t),rs=i(y,". There is no hierarchy for labels, so they all site at the top level. Proton also have folders, which "),vt=s(y,"EM",{});var li=o(vt);ps=i(li,"can"),li.forEach(t),cs=i(y," be hierarchical. But AFAIK there is no easy way to convert labels to folders. You have to do it manually. In fact, it\u2019s even worse. Under the bonnet, labels and folders are the same thing. I know because I couldn\u2019t create a folder, say, called "),wt=s(y,"CODE",{});var ii=o(wt);us=i(ii,"Admin"),ii.forEach(t),ds=i(y,". Proton says there is already one. But there is only a label of that name. Hence they "),bt=s(y,"EM",{});var ri=o(bt);hs=i(ri,"must"),ri.forEach(t),fs=i(y," be the same thing."),y.forEach(t),Oa=c(a),B=s(a,"P",{});var nn=o(B);ms=i(nn,"\u201CWho cares?\u201D I heard myself think. Well you do if you want to create children of "),_t=s(nn,"CODE",{});var pi=o(_t);ks=i(pi,"Admin"),pi.forEach(t),ys=i(nn,". To create the tree folder structure inherent in the Gmail labels, one needs to:"),nn.forEach(t),Ma=c(a),w=s(a,"UL",{});var x=o(w);T=s(x,"LI",{});var tt=o(T);gs=i(tt,"rename the top level labels (for example "),Et=s(tt,"CODE",{});var ci=o(Et);vs=i(ci,"Admin"),ci.forEach(t),ws=i(tt," to "),It=s(tt,"CODE",{});var ui=o(It);bs=i(ui,"Admin2"),ui.forEach(t),_s=i(tt,")"),tt.forEach(t),Es=c(x),he=s(x,"LI",{});var sn=o(he);Is=i(sn,"Manually create folders with the same name as the labels before you rename them (so, "),At=s(sn,"CODE",{});var di=o(At);As=i(di,"Admin"),di.forEach(t),Ps=i(sn," for example)"),sn.forEach(t),xs=c(x),Pt=s(x,"LI",{});var hi=o(Pt);Ts=i(hi,"Manually recreate all nested folders (no need to rename those, there won\u2019t be any clashes)"),hi.forEach(t),Ls=c(x),fe=s(x,"LI",{});var on=o(fe);Cs=i(on,"Manually move mail with label X to folder X > Y > Z. For each label. For each "),xt=s(on,"EM",{});var fi=o(xt);Ss=i(fi,"page"),fi.forEach(t),Os=i(on," of each label. You need to select all mails with that label, then move them, then remove the label. Then refresh. You will get the next page of mails for that label. Lather, rinse and repeat. IT TAKES FOREVER."),on.forEach(t),Ms=c(x),Tt=s(x,"LI",{});var mi=o(Tt);Ds=i(mi,"Delete the labels, one by one"),mi.forEach(t),x.forEach(t),Da=c(a),V=s(a,"P",{});var ln=o(V);js=i(ln,"The whole process is quite laborious, and made more by the UI. Labels are not in an alphabetical order, for a start. Also the page which lists them and the page where you can edit them are different (you can\u2019t just right click and rename it). So it\u2019s two tabs open and lots of back and forth. And to delete a label you have to select from a pulldown menu and then confirm. And you can\u2019t delete them in order - if you delete the "),Lt=s(ln,"CODE",{});var ki=o(Lt);Ns=i(ki,"Admin"),ki.forEach(t),Rs=i(ln," label you also delete the nested labels (even though they are not officially nested \u{1F926}\u200D\u2642\uFE0F). It\u2019s all quite laborious and messed up."),ln.forEach(t),ja=c(a),Ne=s(a,"P",{});var yi=o(Ne);Gs=i(yi,"But it\u2019s a one off process, so I\u2019ll give it the benefit of the doubt."),yi.forEach(t),Na=c(a),Y=s(a,"H2",{id:!0});var Ll=o(Y);U=s(Ll,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var gi=o(U);Ct=s(gi,"SPAN",{class:!0}),o(Ct).forEach(t),gi.forEach(t),Hs=i(Ll,"Conclusion: saved from a potential Kafkaesque nightmare"),Ll.forEach(t),Ra=c(a),Re=s(a,"P",{});var vi=o(Re);qs=i(vi,"I always wanted to migrate away from Google. Not because I am anti-Google or anything, but out of anxiety. They are a huge, faceless organisation without even a hint of customer support. I once worked on a youtube project for a Very Large Energy Company, which paid for support. And Google treated them like dirt, hardly returning their calls and scheduling meetings weeks down the lines. If that\u2019s how they treat a Very Large Energy Company what hope do I have. Any glitch in the system, any breach of some unspoken rule, and I can find myself locked out of my account. So many services depend on it! And nobody to contact for help. It would be a Kafkaesque nightmare. Glad I\u2019m no longer in danger now."),vi.forEach(t),Ga=c(a),F=s(a,"H2",{id:!0});var Cl=o(F);W=s(Cl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var wi=o(W);St=s(wi,"SPAN",{class:!0}),o(St).forEach(t),wi.forEach(t),Bs=i(Cl,"download youtube data"),Cl.forEach(t),Ha=c(a),Ge=s(a,"P",{});var bi=o(Ge);me=s(bi,"A",{href:!0,rel:!0});var _i=o(me);Vs=i(_i,"Went to"),_i.forEach(t),bi.forEach(t),qa=c(a),$=s(a,"H2",{id:!0});var Sl=o($);K=s(Sl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ei=o(K);Ot=s(Ei,"SPAN",{class:!0}),o(Ot).forEach(t),Ei.forEach(t),Ys=i(Sl,"Creating"),Sl.forEach(t),Ba=c(a),k=s(a,"OL",{});var _=o(k);ke=s(_,"LI",{});var rn=o(ke);Us=i(rn,"Went to "),ye=s(rn,"A",{href:!0,rel:!0});var Ii=o(ye);Fs=i(Ii,"https://console.developers.google.com/"),Ii.forEach(t),Ws=i(rn," with my free Google account, created a new project"),rn.forEach(t),$s=c(_),Mt=s(_,"LI",{});var Ai=o(Mt);Ks=i(Ai,"Searched for \u2018YouTube API\u2019 and enabled it"),Ai.forEach(t),zs=c(_),Dt=s(_,"LI",{});var Pi=o(Dt);Xs=i(Pi,"Clicked on \u2018credentials\u2019 on side bar, and then \u2018Configure consent screen\u2019. I had to pick \u2018External\u2019. Added the email address and a made up app name in the next screen."),Pi.forEach(t),Zs=c(_),jt=s(_,"LI",{});var xi=o(jt);Js=i(xi,"Click on \u2018add scopes\u2019 and find the YouTube API ones in the list. Select them all and clicked on \u2018save\u2019"),xi.forEach(t),Qs=c(_),Nt=s(_,"LI",{});var Ti=o(Nt);eo=i(Ti,"In the next screen, added myself as a test user, then \u2018Save and Continue\u2019"),Ti.forEach(t),to=c(_),z=s(_,"LI",{});var va=o(z);ao=i(va,"Back on \u2018credentials\u2019 on side bar, then "),Rt=s(va,"CODE",{});var Li=o(Rt);no=i(Li,"Create OAuth client ID"),Li.forEach(t),so=i(va,". Picked "),Gt=s(va,"CODE",{});var Ci=o(Gt);oo=i(Ci,"OAuth Client Id"),Ci.forEach(t),va.forEach(t),lo=c(_),Ht=s(_,"LI",{});var Si=o(Ht);io=i(Si,"In the next screen I enter some app details. NOTE: Type should not be \u201Cweb application\u201D, but \u201Cdesktop app\u201D. Clicked on \u201Ccreate\u201D and then \u201Cdownload JSON\u201D in the modal box on the next screen"),Si.forEach(t),_.forEach(t),Va=c(a),He=s(a,"P",{});var Oi=o(He);ro=i(Oi,"Setting up project"),Oi.forEach(t),Ya=c(a),f=s(a,"OL",{});var v=o(f);ge=s(v,"LI",{});var pn=o(ge);qt=s(pn,"P",{});var Mi=o(qt);po=i(Mi,"created a folder on my local machine, then made sure the right version of python was installed with pyenv, then inited the project with poetry"),Mi.forEach(t),co=c(pn),qe=s(pn,"PRE",{class:!0});var Lr=o(qe);Lr.forEach(t),pn.forEach(t),uo=c(v),ve=s(v,"LI",{});var cn=o(ve);Bt=s(cn,"P",{});var Di=o(Bt);ho=i(Di,"Added dependencies"),Di.forEach(t),fo=c(cn),Be=s(cn,"PRE",{class:!0});var Cr=o(Be);Cr.forEach(t),cn.forEach(t),mo=c(v),we=s(v,"LI",{});var un=o(we);be=s(un,"P",{});var dn=o(be);ko=i(dn,"Moved the "),Vt=s(dn,"CODE",{});var ji=o(Vt);yo=i(ji,"client_json_xxxxx"),ji.forEach(t),go=i(dn," file and playlists files to my project folder. Don\u2019t forget to add to .gitignore!"),dn.forEach(t),vo=c(un),Ve=s(un,"PRE",{class:!0});var Sr=o(Ve);Sr.forEach(t),un.forEach(t),wo=c(v),_e=s(v,"LI",{});var hn=o(_e);Yt=s(hn,"P",{});var Ni=o(Yt);bo=i(Ni,"Copy the playlist data to playlists folder. Also add to .gitignore, but keep the folder"),Ni.forEach(t),_o=c(hn),Ye=s(hn,"PRE",{class:!0});var Or=o(Ye);Or.forEach(t),hn.forEach(t),Eo=c(v),Ut=s(v,"LI",{});var Ri=o(Ut);Ft=s(Ri,"P",{});var Gi=o(Ft);Io=i(Gi,"I manually created the target playlists in the target account. I could have used the YouTube API, but it\u2019s much faster this way"),Gi.forEach(t),Ri.forEach(t),Ao=c(v),Ee=s(v,"LI",{});var fn=o(Ee);Ie=s(fn,"P",{});var mn=o(Ie);Po=i(mn,"I created a config file in the plalylists folder, with pair of strings to map CSV file from the YouTube dowload and the newly created playlist. Added that file to "),Wt=s(mn,"CODE",{});var Hi=o(Wt);xo=i(Hi,".gitignore"),Hi.forEach(t),To=i(mn," too, but left a blank example"),mn.forEach(t),Lo=c(fn),Ue=s(fn,"PRE",{class:!0});var Mr=o(Ue);Mr.forEach(t),fn.forEach(t),Co=c(v),A=s(v,"LI",{});var oe=o(A);$t=s(oe,"P",{});var qi=o($t);So=i(qi,"Started a little python script to read the local CSV data and make sure it\u2019s all there"),qi.forEach(t),Oo=c(oe),Fe=s(oe,"PRE",{class:!0});var Dr=o(Fe);Dr.forEach(t),Mo=c(oe),Kt=s(oe,"P",{});var Bi=o(Kt);Do=i(Bi,"The output looks legit"),Bi.forEach(t),jo=c(oe),We=s(oe,"PRE",{class:!0});var jr=o(We);jr.forEach(t),oe.forEach(t),No=c(v),Ae=s(v,"LI",{});var kn=o(Ae);zt=s(kn,"P",{});var Vi=o(zt);Ro=i(Vi,"I then try logging into the Google Api"),Vi.forEach(t),Go=c(kn),$e=s(kn,"PRE",{class:!0});var Nr=o($e);Nr.forEach(t),kn.forEach(t),v.forEach(t),Ua=c(a),E=s(a,"UL",{});var le=o(E);Xt=s(le,"LI",{});var Yi=o(Xt);Ho=i(Yi,"def get_authenticated_service():"),Yi.forEach(t),qo=c(le),Zt=s(le,"LI",{});var Ui=o(Zt);Bo=i(Ui,"flow = InstalledAppFlow.from_client_secrets_file(CLIENT_SECRETS_FILE, SCOPES)"),Ui.forEach(t),Vo=c(le),Jt=s(le,"LI",{});var Fi=o(Jt);Yo=i(Fi,"credentials = flow.run_console()"),Fi.forEach(t),Uo=c(le),Qt=s(le,"LI",{});var Wi=o(Qt);Fo=i(Wi,"return build(API_SERVICE_NAME, API_VERSION, credentials=credentials)"),Wi.forEach(t),le.forEach(t),Fa=c(a),X=s(a,"UL",{});var yn=o(X);ea=s(yn,"LI",{});var $i=o(ea);Wo=i($i,"def print_response(response):"),$i.forEach(t),$o=c(yn),ta=s(yn,"LI",{});var Ki=o(ta);Ko=i(Ki,"print(response)"),Ki.forEach(t),yn.forEach(t),Wa=c(a),Ke=s(a,"P",{});var zi=o(Ke);zo=i(zi,`for csv_filename, playlist_code in filenames:
\u2026`),zi.forEach(t),$a=c(a),g=s(a,"UL",{});var I=o(g);aa=s(I,"LI",{});var Xi=o(aa);L=s(Xi,"P",{});var at=o(L);Xo=i(at,"if "),na=s(at,"STRONG",{});var Zi=o(na);Zo=i(Zi,"name"),Zi.forEach(t),Jo=i(at," == \u201D"),sa=s(at,"STRONG",{});var Ji=o(sa);Qo=i(Ji,"main"),Ji.forEach(t),el=i(at,"\u201C:"),at.forEach(t),Xi.forEach(t),tl=c(I),oa=s(I,"LI",{});var Qi=o(oa);Pe=s(Qi,"H1",{id:!0});var Ol=o(Pe);Z=s(Ol,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var er=o(Z);la=s(er,"SPAN",{class:!0}),o(la).forEach(t),er.forEach(t),al=i(Ol,"When running locally, disable OAuthlib\u2019s"),Ol.forEach(t),Qi.forEach(t),nl=c(I),ia=s(I,"LI",{});var tr=o(ia);xe=s(tr,"H1",{id:!0});var Ml=o(xe);J=s(Ml,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ar=o(J);ra=s(ar,"SPAN",{class:!0}),o(ra).forEach(t),ar.forEach(t),sl=i(Ml,"HTTPs verification. When running in production"),Ml.forEach(t),tr.forEach(t),ol=c(I),pa=s(I,"LI",{});var nr=o(pa);Q=s(nr,"H1",{id:!0});var gn=o(Q);ee=s(gn,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var sr=o(ee);ca=s(sr,"SPAN",{class:!0}),o(ca).forEach(t),sr.forEach(t),ua=s(gn,"EM",{});var or=o(ua);ll=i(or,"do not"),or.forEach(t),il=i(gn," leave this option enabled."),gn.forEach(t),nr.forEach(t),rl=c(I),da=s(I,"LI",{});var lr=o(da);ha=s(lr,"P",{});var ir=o(ha);pl=i(ir,"os.environ[\u201COAUTHLIB_INSECURE_TRANSPORT\u201D] = \u201C1\u201D"),ir.forEach(t),lr.forEach(t),cl=c(I),C=s(I,"LI",{});var nt=o(C);fa=s(nt,"P",{});var rr=o(fa);ul=i(rr,`client = get_authenticated_service()
main()`),rr.forEach(t),dl=c(nt),ze=s(nt,"PRE",{class:!0});var Rr=o(ze);Rr.forEach(t),hl=c(nt),ma=s(nt,"P",{});var pr=o(ma);fl=i(pr,"I paste the URL in a browser, authenticate, copy the code, and paste it on the CLI. I have to do this every time I run the script, but it works"),pr.forEach(t),nt.forEach(t),I.forEach(t),Ka=c(a),Xe=s(a,"OL",{});var cr=o(Xe);Te=s(cr,"LI",{});var vn=o(Te);Le=s(vn,"P",{});var wn=o(Le);ml=i(wn,"Then it\u2019s a matter of creating a function to add the video to the playlist. There is an issue that one is only allowed a quota, which at the time of writing works out to about 100 videos per day. I could add code to save the excess videoIds to a new spreadsheet, to be uploaded tomorrow. But once again, this is a one off job and I can do that part manually. If I "),ka=s(wn,"EM",{});var ur=o(ka);kl=i(ur,"were"),ur.forEach(t),yl=i(wn," to go down that route, I would probably collate all the CSV files into a single one, then it would be simpler to handle. Instead the script bails out when it realises the quota has been reached."),wn.forEach(t),gl=c(vn),Ze=s(vn,"PRE",{class:!0});var Gr=o(Ze);Gr.forEach(t),vn.forEach(t),cr.forEach(t),za=c(a),te=s(a,"H3",{id:!0});var Dl=o(te);ae=s(Dl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var dr=o(ae);ya=s(dr,"SPAN",{class:!0}),o(ya).forEach(t),dr.forEach(t),vl=i(Dl,"Downloading google script"),Dl.forEach(t),Xa=c(a),Je=s(a,"P",{});var hr=o(Je);wl=i(hr,`pnpm i -g @google/clasp
clasp login login
clasp clone [script id]`),hr.forEach(t),Za=c(a),ne=s(a,"H3",{id:!0});var jl=o(ne);se=s(jl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var fr=o(se);ga=s(fr,"SPAN",{class:!0}),o(ga).forEach(t),fr.forEach(t),bl=i(jl,"Conclusion"),jl.forEach(t),Ja=c(a),Qe=s(a,"P",{});var mr=o(Qe);_l=i(mr,"It\u2019s the kind of script that is barely useful if you run it once, although it is interesting to play with the YouTube API every now and then. But it will more useful later"),mr.forEach(t),Qa=c(a),et=s(a,"P",{});var kr=o(et);Ce=s(kr,"A",{href:!0,rel:!0});var yr=o(Ce);El=i(yr,"https://www.geeksforgeeks.org/youtube-data-api-playlist-set-1"),yr.forEach(t),kr.forEach(t),this.h()},h(){r(st,"class","icon icon-link"),r(S,"aria-hidden","true"),r(S,"tabindex","-1"),r(S,"href","#times-are-tough-ad-revenue-is-down"),r(P,"id","times-are-tough-ad-revenue-is-down"),r(ie,"href","https://www.inputmag.com/tech/google-charging-small-business-owners-google-workspace"),r(ie,"rel","nofollow"),r(ot,"class","icon icon-link"),r(D,"aria-hidden","true"),r(D,"tabindex","-1"),r(D,"href","#migrating-away-from-google---a-laundry-list"),r(M,"id","migrating-away-from-google---a-laundry-list"),r(Oe,"href","/tags/Google%20Apps%20Script"),r(ce,"href","https://youtube-dl.org/"),r(ce,"rel","nofollow"),r(ut,"class","icon icon-link"),r(N,"aria-hidden","true"),r(N,"tabindex","-1"),r(N,"href","#copying-youtube-playlists-from-one-user-to-another"),r(j,"id","copying-youtube-playlists-from-one-user-to-another"),r(de,"href","https://webapps.stackexchange.com/a/154530"),r(de,"rel","nofollow"),r(dt,"class","icon icon-link"),r(G,"aria-hidden","true"),r(G,"tabindex","-1"),r(G,"href","#migrating-to-proton-mail"),r(R,"id","migrating-to-proton-mail"),r(ht,"class","icon icon-link"),r(q,"aria-hidden","true"),r(q,"tabindex","-1"),r(q,"href","#setting-up-and-importing-mail"),r(H,"id","setting-up-and-importing-mail"),r(Ct,"class","icon icon-link"),r(U,"aria-hidden","true"),r(U,"tabindex","-1"),r(U,"href","#conclusion-saved-from-a-potential-kafkaesque-nightmare"),r(Y,"id","conclusion-saved-from-a-potential-kafkaesque-nightmare"),r(St,"class","icon icon-link"),r(W,"aria-hidden","true"),r(W,"tabindex","-1"),r(W,"href","#download-youtube-data"),r(F,"id","download-youtube-data"),r(me,"href","https://takeout.google.com/settings/takeout/downloads"),r(me,"rel","nofollow"),r(Ot,"class","icon icon-link"),r(K,"aria-hidden","true"),r(K,"tabindex","-1"),r(K,"href","#creating"),r($,"id","creating"),r(ye,"href","https://console.developers.google.com/"),r(ye,"rel","nofollow"),r(qe,"class","language-bash"),r(Be,"class","language-bash"),r(Ve,"class","language-bash"),r(Ye,"class","language-bash"),r(Ue,"class","language-json"),r(Fe,"class","language-python"),r(We,"class","language-bash"),r($e,"class","language-diff"),r(la,"class","icon icon-link"),r(Z,"aria-hidden","true"),r(Z,"tabindex","-1"),r(Z,"href","#when-running-locally-disable-oauthlibs"),r(Pe,"id","when-running-locally-disable-oauthlibs"),r(ra,"class","icon icon-link"),r(J,"aria-hidden","true"),r(J,"tabindex","-1"),r(J,"href","#https-verification-when-running-in-production"),r(xe,"id","https-verification-when-running-in-production"),r(ca,"class","icon icon-link"),r(ee,"aria-hidden","true"),r(ee,"tabindex","-1"),r(ee,"href","#-do-not--leave-this-option-enabled"),r(Q,"id","-do-not--leave-this-option-enabled"),r(ze,"class","language-undefined"),r(Ze,"class","language-python"),r(ya,"class","icon icon-link"),r(ae,"aria-hidden","true"),r(ae,"tabindex","-1"),r(ae,"href","#downloading-google-script"),r(te,"id","downloading-google-script"),r(ga,"class","icon icon-link"),r(se,"aria-hidden","true"),r(se,"tabindex","-1"),r(se,"href","#conclusion"),r(ne,"id","conclusion"),r(Ce,"href","https://www.geeksforgeeks.org/youtube-data-api-playlist-set-1"),r(Ce,"rel","nofollow")},m(a,u){d(a,P,u),e(P,S),e(S,st),e(P,bn),d(a,wa,u),d(a,Se,u),e(Se,_n),d(a,ba,u),d(a,O,u),e(O,En),e(O,ie),e(ie,In),e(O,An),d(a,_a,u),d(a,M,u),e(M,D),e(D,ot),e(M,Pn),d(a,Ea,u),d(a,m,u),e(m,lt),e(lt,xn),e(m,Tn),e(m,re),e(re,Ln),e(re,Oe),e(Oe,Cn),e(re,Sn),e(m,On),e(m,pe),e(pe,Mn),e(pe,ce),e(ce,Dn),e(pe,jn),e(m,Nn),e(m,it),e(it,Rn),e(m,Gn),e(m,rt),e(rt,Hn),e(m,qn),e(m,pt),e(pt,Bn),e(m,Vn),e(m,ct),e(ct,Yn),d(a,Ia,u),d(a,Me,u),e(Me,Un),d(a,Aa,u),d(a,j,u),e(j,N),e(N,ut),e(j,Fn),d(a,Pa,u),d(a,ue,u),e(ue,de),e(de,Wn),e(ue,$n),d(a,xa,u),d(a,R,u),e(R,G),e(G,dt),e(R,Kn),d(a,Ta,u),d(a,H,u),e(H,q),e(q,ht),e(H,zn),d(a,La,u),d(a,De,u),e(De,Xn),d(a,Ca,u),d(a,je,u),e(je,Zn),d(a,Sa,u),d(a,h,u),e(h,Jn),e(h,ft),e(ft,Qn),e(h,es),e(h,mt),e(mt,ts),e(h,as),e(h,kt),e(kt,ns),e(h,ss),e(h,yt),e(yt,os),e(h,ls),e(h,gt),e(gt,is),e(h,rs),e(h,vt),e(vt,ps),e(h,cs),e(h,wt),e(wt,us),e(h,ds),e(h,bt),e(bt,hs),e(h,fs),d(a,Oa,u),d(a,B,u),e(B,ms),e(B,_t),e(_t,ks),e(B,ys),d(a,Ma,u),d(a,w,u),e(w,T),e(T,gs),e(T,Et),e(Et,vs),e(T,ws),e(T,It),e(It,bs),e(T,_s),e(w,Es),e(w,he),e(he,Is),e(he,At),e(At,As),e(he,Ps),e(w,xs),e(w,Pt),e(Pt,Ts),e(w,Ls),e(w,fe),e(fe,Cs),e(fe,xt),e(xt,Ss),e(fe,Os),e(w,Ms),e(w,Tt),e(Tt,Ds),d(a,Da,u),d(a,V,u),e(V,js),e(V,Lt),e(Lt,Ns),e(V,Rs),d(a,ja,u),d(a,Ne,u),e(Ne,Gs),d(a,Na,u),d(a,Y,u),e(Y,U),e(U,Ct),e(Y,Hs),d(a,Ra,u),d(a,Re,u),e(Re,qs),d(a,Ga,u),d(a,F,u),e(F,W),e(W,St),e(F,Bs),d(a,Ha,u),d(a,Ge,u),e(Ge,me),e(me,Vs),d(a,qa,u),d(a,$,u),e($,K),e(K,Ot),e($,Ys),d(a,Ba,u),d(a,k,u),e(k,ke),e(ke,Us),e(ke,ye),e(ye,Fs),e(ke,Ws),e(k,$s),e(k,Mt),e(Mt,Ks),e(k,zs),e(k,Dt),e(Dt,Xs),e(k,Zs),e(k,jt),e(jt,Js),e(k,Qs),e(k,Nt),e(Nt,eo),e(k,to),e(k,z),e(z,ao),e(z,Rt),e(Rt,no),e(z,so),e(z,Gt),e(Gt,oo),e(k,lo),e(k,Ht),e(Ht,io),d(a,Va,u),d(a,He,u),e(He,ro),d(a,Ya,u),d(a,f,u),e(f,ge),e(ge,qt),e(qt,po),e(ge,co),e(ge,qe),qe.innerHTML=vr,e(f,uo),e(f,ve),e(ve,Bt),e(Bt,ho),e(ve,fo),e(ve,Be),Be.innerHTML=wr,e(f,mo),e(f,we),e(we,be),e(be,ko),e(be,Vt),e(Vt,yo),e(be,go),e(we,vo),e(we,Ve),Ve.innerHTML=br,e(f,wo),e(f,_e),e(_e,Yt),e(Yt,bo),e(_e,_o),e(_e,Ye),Ye.innerHTML=_r,e(f,Eo),e(f,Ut),e(Ut,Ft),e(Ft,Io),e(f,Ao),e(f,Ee),e(Ee,Ie),e(Ie,Po),e(Ie,Wt),e(Wt,xo),e(Ie,To),e(Ee,Lo),e(Ee,Ue),Ue.innerHTML=Er,e(f,Co),e(f,A),e(A,$t),e($t,So),e(A,Oo),e(A,Fe),Fe.innerHTML=Ir,e(A,Mo),e(A,Kt),e(Kt,Do),e(A,jo),e(A,We),We.innerHTML=Ar,e(f,No),e(f,Ae),e(Ae,zt),e(zt,Ro),e(Ae,Go),e(Ae,$e),$e.innerHTML=Pr,d(a,Ua,u),d(a,E,u),e(E,Xt),e(Xt,Ho),e(E,qo),e(E,Zt),e(Zt,Bo),e(E,Vo),e(E,Jt),e(Jt,Yo),e(E,Uo),e(E,Qt),e(Qt,Fo),d(a,Fa,u),d(a,X,u),e(X,ea),e(ea,Wo),e(X,$o),e(X,ta),e(ta,Ko),d(a,Wa,u),d(a,Ke,u),e(Ke,zo),d(a,$a,u),d(a,g,u),e(g,aa),e(aa,L),e(L,Xo),e(L,na),e(na,Zo),e(L,Jo),e(L,sa),e(sa,Qo),e(L,el),e(g,tl),e(g,oa),e(oa,Pe),e(Pe,Z),e(Z,la),e(Pe,al),e(g,nl),e(g,ia),e(ia,xe),e(xe,J),e(J,ra),e(xe,sl),e(g,ol),e(g,pa),e(pa,Q),e(Q,ee),e(ee,ca),e(Q,ua),e(ua,ll),e(Q,il),e(g,rl),e(g,da),e(da,ha),e(ha,pl),e(g,cl),e(g,C),e(C,fa),e(fa,ul),e(C,dl),e(C,ze),ze.innerHTML=xr,e(C,hl),e(C,ma),e(ma,fl),d(a,Ka,u),d(a,Xe,u),e(Xe,Te),e(Te,Le),e(Le,ml),e(Le,ka),e(ka,kl),e(Le,yl),e(Te,gl),e(Te,Ze),Ze.innerHTML=Tr,d(a,za,u),d(a,te,u),e(te,ae),e(ae,ya),e(te,vl),d(a,Xa,u),d(a,Je,u),e(Je,wl),d(a,Za,u),d(a,ne,u),e(ne,se),e(se,ga),e(ne,bl),d(a,Ja,u),d(a,Qe,u),e(Qe,_l),d(a,Qa,u),d(a,et,u),e(et,Ce),e(Ce,El)},p:Nl,i:Nl,o:Nl,d(a){a&&t(P),a&&t(wa),a&&t(Se),a&&t(ba),a&&t(O),a&&t(_a),a&&t(M),a&&t(Ea),a&&t(m),a&&t(Ia),a&&t(Me),a&&t(Aa),a&&t(j),a&&t(Pa),a&&t(ue),a&&t(xa),a&&t(R),a&&t(Ta),a&&t(H),a&&t(La),a&&t(De),a&&t(Ca),a&&t(je),a&&t(Sa),a&&t(h),a&&t(Oa),a&&t(B),a&&t(Ma),a&&t(w),a&&t(Da),a&&t(V),a&&t(ja),a&&t(Ne),a&&t(Na),a&&t(Y),a&&t(Ra),a&&t(Re),a&&t(Ga),a&&t(F),a&&t(Ha),a&&t(Ge),a&&t(qa),a&&t($),a&&t(Ba),a&&t(k),a&&t(Va),a&&t(He),a&&t(Ya),a&&t(f),a&&t(Ua),a&&t(E),a&&t(Fa),a&&t(X),a&&t(Wa),a&&t(Ke),a&&t($a),a&&t(g),a&&t(Ka),a&&t(Xe),a&&t(za),a&&t(te),a&&t(Xa),a&&t(Je),a&&t(Za),a&&t(ne),a&&t(Ja),a&&t(Qe),a&&t(Qa),a&&t(et)}}}const Ur={title:"Migrating away from Google: Hello Proton Mail!",date:"2022-08-30T00:00:00.000Z",excerpt:"Google informed me they would start charging me for letting me use their mail servers with my gotofritz.net domain. Fair enough, infrastructure costs money. But if I have to pay, why pay <i>them</i>? I'm going to shop around.",draft:!0,tags:["google","proton mail"]};class Fr extends Hr{constructor(P){super(),qr(this,P,null,Vr,Br,{})}}export{Fr as default,Ur as metadata};
