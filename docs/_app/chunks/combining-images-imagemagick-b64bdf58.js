import{S as gd,i as vd,s as bd,e as o,t as d,k as v,c as s,a as r,d as t,h as n,m as b,b as c,g as l,I as e,E as is}from"./index-6e518972.js";function Dd(rd){let E,k,Q,sa,Rt,B,ra,Nt,j,dd=`<code class="language-sh">convert *.png<span class="token punctuation">[</span>400x400<span class="token punctuation">]</span> <span class="token parameter variable">-splice</span> 0x10 <span class="token punctuation"></span><span class="token punctuation"></span>
    <span class="token parameter variable">-background</span> <span class="token string">"#ffffff"</span>  <span class="token parameter variable">-append</span>  <span class="token parameter variable">-crop</span> -0+10 output.png</code>`,Ft,D,U,da,V,na,W,ia,X,la,Z,ca,$,ha,ee,pa,te,ma,ae,fa,oe,ua,se,ga,re,va,de,ba,ne,Da,Yt,y,T,ie,xa,qt,G,wa,Bt,S,nd=`<code class="language-sh">convert *.png <span class="token parameter variable">-gravity</span> south <span class="token parameter variable">-splice</span> 0x111 <span class="token punctuation"></span><span class="token punctuation"></span>
    <span class="token parameter variable">-shave</span> 0x111 <span class="token parameter variable">-resize</span> 400x400  <span class="token parameter variable">-splice</span> 0x10 <span class="token parameter variable">-background</span> <span class="token string">"#ffffff"</span>  <span class="token punctuation"></span><span class="token punctuation"></span>
    <span class="token parameter variable">-append</span>  <span class="token parameter variable">-crop</span> -0+10 output.png</code>`,Gt,p,le,_a,ce,Ea,he,ka,pe,ya,me,Ta,fe,Ia,ue,Ma,ge,za,ve,Ha,be,Pa,De,Aa,xe,Ca,we,La,_e,ja,Ee,Sa,ke,Ra,ye,Na,Te,Fa,Ie,Ya,Me,qa,ze,Ba,He,Ga,Jt,I,M,Pe,Ja,Kt,J,Ka,Ot,R,id=`<code class="language-sh">convert *.png <span class="token parameter variable">-gravity</span> south <span class="token parameter variable">-splice</span> 0x111 <span class="token punctuation"></span><span class="token punctuation"></span>
    <span class="token parameter variable">-shave</span> 0x111 <span class="token parameter variable">-resize</span> 400x400  <span class="token parameter variable">-set</span> delay <span class="token number">300</span> output.gif</code>`,Qt,u,Ae,Oa,Ce,Qa,Le,Ua,je,Va,Se,Wa,Re,Xa,Ne,Za,Fe,$a,Ye,eo,qe,to,Be,ao,Ge,oo,Je,so,Ke,ro,Oe,no,Qe,io,Ut,z,H,Ue,lo,Vt,K,co,Wt,N,ld=`<code class="language-sh">convert *.png <span class="token parameter variable">-resize</span> 800x500^ <span class="token parameter variable">-gravity</span> center <span class="token punctuation"></span><span class="token punctuation"></span>
    <span class="token parameter variable">-crop</span>  800x500+0+0 +repage <span class="token parameter variable">-set</span> delay <span class="token number">300</span> output.gif</code>`,Xt,g,Ve,ho,We,po,Xe,mo,Ze,fo,$e,uo,et,go,tt,vo,at,bo,ot,Do,st,xo,rt,wo,dt,_o,nt,Eo,it,ko,lt,yo,ct,To,Zt,P,A,ht,Io,$t,O,Mo,ea,F,cd=`<code class="language-sh">convert *.png <span class="token parameter variable">-gravity</span> south <span class="token punctuation"></span><span class="token punctuation"></span>
    <span class="token parameter variable">-splice</span> 0x111 <span class="token parameter variable">-shave</span> 0x111 <span class="token parameter variable">-resize</span> 400x400 converted.png
montage converted*.png <span class="token parameter variable">-mode</span> concatenate  <span class="token parameter variable">-tile</span> 2x2  output.png</code>`,ta,h,pt,zo,mt,Ho,ft,Po,ut,Ao,gt,Co,vt,Lo,bt,jo,Dt,So,xt,Ro,wt,No,_t,Fo,Et,Yo,kt,qo,yt,Bo,Tt,Go,It,Jo,Mt,Ko,zt,Oo,Ht,Qo,Pt,Uo,At,Vo,Ct,Wo,Lt,Xo,jt,Zo,aa,C,L,St,$o,oa,Y,q,es,ts;return{c(){E=o("h2"),k=o("a"),Q=o("span"),sa=d("Combining images vertically with a line separating them"),Rt=v(),B=o("p"),ra=d("This is useful for combining a few images into a single vertical strip, with a 10px white border between each image, like the portrait photos from photo boots."),Nt=v(),j=o("pre"),Ft=v(),D=o("dl"),U=o("dt"),da=d("convert"),V=o("dd"),na=d("calls up one of the ImageMagick commands, convert"),W=o("dt"),ia=d("*.png[400x400] "),X=o("dd"),la=d("an expression using wildcards to match all png images in the current folder, and resize each as it is read so that neither width and height are greater than 400px"),Z=o("dt"),ca=d("-splice 0x10"),$=o("dd"),ha=d("add a 10px vertical border to each image"),ee=o("dt"),pa=d('-background "#ffffff"'),te=o("dd"),ma=d("make that border white (using HTML color ocde)"),ae=o("dt"),fa=d("-append"),oe=o("dd"),ua=d("combine images vertically - use +append to combine them horizontally"),se=o("dt"),ga=d("-crop -0+10"),re=o("dd"),va=d("crop the top 10 pixels from the combined image, as we want the borders only between images"),de=o("dt"),ba=d("output.png"),ne=o("dd"),Da=d("this is the result image file. It could just as easily be a .jpg"),Yt=v(),y=o("h2"),T=o("a"),ie=o("span"),xa=d("Removing window artefacts from the top of the images first"),qt=v(),G=o("p"),wa=d("If you have, say, a bunch of screenshots with the address bar etc at the top, you need to modify the command to get rid of it first. This time you can\u2019t use the shortcut resize."),Bt=v(),S=o("pre"),Gt=v(),p=o("dl"),le=o("dt"),_a=d("convert"),ce=o("dd"),Ea=d("calls up one of the ImageMagick commands, convert"),he=o("dt"),ka=d("*.png "),pe=o("dd"),ya=d("an expression using wildcards to match all png images in the current folder"),me=o("dt"),Ta=d("-gravity south"),fe=o("dd"),Ia=d("aligns the next command(s) bottom"),ue=o("dt"),Ma=d("-splice 0x111"),ge=o("dd"),za=d("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),ve=o("dt"),Ha=d("-shave 0x111"),be=o("dd"),Pa=d("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),De=o("dt"),Aa=d("-resize 400x400 "),xe=o("dd"),Ca=d("now i can resize so that the image does not exceed 400 px either direction. From now on carry on as for previous command"),we=o("dt"),La=d("-splice 0x10"),_e=o("dd"),ja=d("add a 10px vertical border to each image"),Ee=o("dt"),Sa=d('-background "#ffffff"'),ke=o("dd"),Ra=d("make that border white (using HTML color ocde)"),ye=o("dt"),Na=d("-append"),Te=o("dd"),Fa=d("combine images vertically - use +append to combine them horizontally"),Ie=o("dt"),Ya=d("-crop -0+10"),Me=o("dd"),qa=d("crop the top 10 pixels from the combined image, as we want the borders only between images"),ze=o("dt"),Ba=d("output.png"),He=o("dd"),Ga=d("this is the result image file. It could just as easily be a .jpg"),Jt=v(),I=o("h2"),M=o("a"),Pe=o("span"),Ja=d("Combining images into an animated gif"),Kt=v(),J=o("p"),Ka=d("If instead you\u2019d rather create an animated gif, here\u2019s the simplest way to do it - without any of the powerful options that ImageMagick offers."),Ot=v(),R=o("pre"),Qt=v(),u=o("dl"),Ae=o("dt"),Oa=d("convert"),Ce=o("dd"),Qa=d("calls up one of the ImageMagick commands, "),Le=o("dt"),Ua=d("*.png "),je=o("dd"),Va=d("an expression using wildcards to match all png images in the current folder"),Se=o("dt"),Wa=d("-gravity south"),Re=o("dd"),Xa=d("aligns the next command(s) bottom"),Ne=o("dt"),Za=d("-splice 0x111"),Fe=o("dd"),$a=d("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Ye=o("dt"),eo=d("-shave 0x111"),qe=o("dd"),to=d("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Be=o("dt"),ao=d("-resize 400x400 "),Ge=o("dd"),oo=d("now i can resize so that the image does not exceed 400 px either direction"),Je=o("dt"),so=d("-set delay 300"),Ke=o("dd"),ro=d("adds a three seconds delay between all images"),Oe=o("dt"),no=d("output.gif"),Qe=o("dd"),io=d("that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Ut=v(),z=o("h2"),H=o("a"),Ue=o("span"),lo=d("Cropping a set of images to the same size and animating them"),Vt=v(),K=o("p"),co=d("If the images in the gif are of different size you may want to do something about that. Here they are cropped to a minimum common size, the extra pixels discarded."),Wt=v(),N=o("pre"),Xt=v(),g=o("dl"),Ve=o("dt"),ho=d("convert"),We=o("dd"),po=d("calls up one of the ImageMagick commands, "),Xe=o("dt"),mo=d("*.png "),Ze=o("dd"),fo=d("an expression using wildcards to match all png images in the current folder"),$e=o("dt"),uo=d("-resize 800x500^"),et=o("dd"),go=d("the ^ after the dimensions means those are the minimum sizes rather then the maximum"),tt=o("dt"),vo=d("-gravity center"),at=o("dd"),bo=d("aligns the next command(s)"),ot=o("dt"),Do=d("-crop  800x500+0+0"),st=o("dd"),xo=d("crops to 800x500, with no offest (0,0)"),rt=o("dt"),wo=d("+repage"),dt=o("dd"),_o=d("resets the origin after the crop"),nt=o("dt"),Eo=d("-set delay 300"),it=o("dd"),ko=d("adds a three seconds delay between all images"),lt=o("dt"),yo=d("output.gif"),ct=o("dd"),To=d("that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Zt=v(),P=o("h2"),A=o("a"),ht=o("span"),Io=d("Arranging images in a grid"),$t=v(),O=o("p"),Mo=d("This is actually two commands, one after the other - one to resize and crop the images, the other to arrange them."),ea=v(),F=o("pre"),ta=v(),h=o("dl"),pt=o("dt"),zo=d("convert"),mt=o("dd"),Ho=d("calls up one of the ImageMagick commands, convert"),ft=o("dt"),Po=d("*.png "),ut=o("dd"),Ao=d("an expression using wildcards to match all png images in the current folder"),gt=o("dt"),Co=d("-gravity south"),vt=o("dd"),Lo=d("aligns the next command(s) bottom"),bt=o("dt"),jo=d("-splice 0x111"),Dt=o("dd"),So=d("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),xt=o("dt"),Ro=d("-shave 0x111"),wt=o("dd"),No=d("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),_t=o("dt"),Fo=d("-resize 400x400 "),Et=o("dd"),Yo=d("now i can resize so that the image does not exceed 400 px either direction"),kt=o("dt"),qo=d("converted.png"),yt=o("dd"),Bo=d("for each input image, it creates a correspoding output image in the current folder named converted-1.png, converted-2.png..."),Tt=o("dt"),Go=d("montage"),It=o("dd"),Jo=d("calls up one of the ImageMagick commands, montage"),Mt=o("dt"),Ko=d("converted*.png"),zt=o("dd"),Oo=d("this time only match the images whose name start with 'converted', i.e. the ones created by the previous command"),Ht=o("dt"),Qo=d("-mode concatenate"),Pt=o("dd"),Uo=d("arranges them in a grid"),At=o("dt"),Vo=d("-tile 2x2"),Ct=o("dd"),Wo=d("in this particular case, it is a 2x2 grid as I only had four images. You can use x2 or 2x to keep the number of rows and columns respectively fixed at 2, and the other dimension filled in with however many images you have"),Lt=o("dt"),Xo=d("output.png"),jt=o("dd"),Zo=d("...and here comes the image"),aa=v(),C=o("h2"),L=o("a"),St=o("span"),$o=d("More"),oa=v(),Y=o("p"),q=o("a"),es=d("More ImageMagick commands"),ts=d("."),this.h()},l(a){E=s(a,"H2",{id:!0});var i=r(E);k=s(i,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ls=r(k);Q=s(ls,"SPAN",{class:!0}),r(Q).forEach(t),ls.forEach(t),sa=n(i,"Combining images vertically with a line separating them"),i.forEach(t),Rt=b(a),B=s(a,"P",{});var cs=r(B);ra=n(cs,"This is useful for combining a few images into a single vertical strip, with a 10px white border between each image, like the portrait photos from photo boots."),cs.forEach(t),Nt=b(a),j=s(a,"PRE",{class:!0});var hd=r(j);hd.forEach(t),Ft=b(a),D=s(a,"DL",{class:!0});var _=r(D);U=s(_,"DT",{});var hs=r(U);da=n(hs,"convert"),hs.forEach(t),V=s(_,"DD",{});var ps=r(V);na=n(ps,"calls up one of the ImageMagick commands, convert"),ps.forEach(t),W=s(_,"DT",{});var ms=r(W);ia=n(ms,"*.png[400x400] "),ms.forEach(t),X=s(_,"DD",{});var fs=r(X);la=n(fs,"an expression using wildcards to match all png images in the current folder, and resize each as it is read so that neither width and height are greater than 400px"),fs.forEach(t),Z=s(_,"DT",{});var us=r(Z);ca=n(us,"-splice 0x10"),us.forEach(t),$=s(_,"DD",{});var gs=r($);ha=n(gs,"add a 10px vertical border to each image"),gs.forEach(t),ee=s(_,"DT",{});var vs=r(ee);pa=n(vs,'-background "#ffffff"'),vs.forEach(t),te=s(_,"DD",{});var bs=r(te);ma=n(bs,"make that border white (using HTML color ocde)"),bs.forEach(t),ae=s(_,"DT",{});var Ds=r(ae);fa=n(Ds,"-append"),Ds.forEach(t),oe=s(_,"DD",{});var xs=r(oe);ua=n(xs,"combine images vertically - use +append to combine them horizontally"),xs.forEach(t),se=s(_,"DT",{});var ws=r(se);ga=n(ws,"-crop -0+10"),ws.forEach(t),re=s(_,"DD",{});var _s=r(re);va=n(_s,"crop the top 10 pixels from the combined image, as we want the borders only between images"),_s.forEach(t),de=s(_,"DT",{});var Es=r(de);ba=n(Es,"output.png"),Es.forEach(t),ne=s(_,"DD",{});var ks=r(ne);Da=n(ks,"this is the result image file. It could just as easily be a .jpg"),ks.forEach(t),_.forEach(t),Yt=b(a),y=s(a,"H2",{id:!0});var as=r(y);T=s(as,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ys=r(T);ie=s(ys,"SPAN",{class:!0}),r(ie).forEach(t),ys.forEach(t),xa=n(as,"Removing window artefacts from the top of the images first"),as.forEach(t),qt=b(a),G=s(a,"P",{});var Ts=r(G);wa=n(Ts,"If you have, say, a bunch of screenshots with the address bar etc at the top, you need to modify the command to get rid of it first. This time you can\u2019t use the shortcut resize."),Ts.forEach(t),Bt=b(a),S=s(a,"PRE",{class:!0});var pd=r(S);pd.forEach(t),Gt=b(a),p=s(a,"DL",{class:!0});var f=r(p);le=s(f,"DT",{});var Is=r(le);_a=n(Is,"convert"),Is.forEach(t),ce=s(f,"DD",{});var Ms=r(ce);Ea=n(Ms,"calls up one of the ImageMagick commands, convert"),Ms.forEach(t),he=s(f,"DT",{});var zs=r(he);ka=n(zs,"*.png "),zs.forEach(t),pe=s(f,"DD",{});var Hs=r(pe);ya=n(Hs,"an expression using wildcards to match all png images in the current folder"),Hs.forEach(t),me=s(f,"DT",{});var Ps=r(me);Ta=n(Ps,"-gravity south"),Ps.forEach(t),fe=s(f,"DD",{});var As=r(fe);Ia=n(As,"aligns the next command(s) bottom"),As.forEach(t),ue=s(f,"DT",{});var Cs=r(ue);Ma=n(Cs,"-splice 0x111"),Cs.forEach(t),ge=s(f,"DD",{});var Ls=r(ge);za=n(Ls,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Ls.forEach(t),ve=s(f,"DT",{});var js=r(ve);Ha=n(js,"-shave 0x111"),js.forEach(t),be=s(f,"DD",{});var Ss=r(be);Pa=n(Ss,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Ss.forEach(t),De=s(f,"DT",{});var Rs=r(De);Aa=n(Rs,"-resize 400x400 "),Rs.forEach(t),xe=s(f,"DD",{});var Ns=r(xe);Ca=n(Ns,"now i can resize so that the image does not exceed 400 px either direction. From now on carry on as for previous command"),Ns.forEach(t),we=s(f,"DT",{});var Fs=r(we);La=n(Fs,"-splice 0x10"),Fs.forEach(t),_e=s(f,"DD",{});var Ys=r(_e);ja=n(Ys,"add a 10px vertical border to each image"),Ys.forEach(t),Ee=s(f,"DT",{});var qs=r(Ee);Sa=n(qs,'-background "#ffffff"'),qs.forEach(t),ke=s(f,"DD",{});var Bs=r(ke);Ra=n(Bs,"make that border white (using HTML color ocde)"),Bs.forEach(t),ye=s(f,"DT",{});var Gs=r(ye);Na=n(Gs,"-append"),Gs.forEach(t),Te=s(f,"DD",{});var Js=r(Te);Fa=n(Js,"combine images vertically - use +append to combine them horizontally"),Js.forEach(t),Ie=s(f,"DT",{});var Ks=r(Ie);Ya=n(Ks,"-crop -0+10"),Ks.forEach(t),Me=s(f,"DD",{});var Os=r(Me);qa=n(Os,"crop the top 10 pixels from the combined image, as we want the borders only between images"),Os.forEach(t),ze=s(f,"DT",{});var Qs=r(ze);Ba=n(Qs,"output.png"),Qs.forEach(t),He=s(f,"DD",{});var Us=r(He);Ga=n(Us,"this is the result image file. It could just as easily be a .jpg"),Us.forEach(t),f.forEach(t),Jt=b(a),I=s(a,"H2",{id:!0});var os=r(I);M=s(os,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Vs=r(M);Pe=s(Vs,"SPAN",{class:!0}),r(Pe).forEach(t),Vs.forEach(t),Ja=n(os,"Combining images into an animated gif"),os.forEach(t),Kt=b(a),J=s(a,"P",{});var Ws=r(J);Ka=n(Ws,"If instead you\u2019d rather create an animated gif, here\u2019s the simplest way to do it - without any of the powerful options that ImageMagick offers."),Ws.forEach(t),Ot=b(a),R=s(a,"PRE",{class:!0});var md=r(R);md.forEach(t),Qt=b(a),u=s(a,"DL",{class:!0});var x=r(u);Ae=s(x,"DT",{});var Xs=r(Ae);Oa=n(Xs,"convert"),Xs.forEach(t),Ce=s(x,"DD",{});var Zs=r(Ce);Qa=n(Zs,"calls up one of the ImageMagick commands, "),Zs.forEach(t),Le=s(x,"DT",{});var $s=r(Le);Ua=n($s,"*.png "),$s.forEach(t),je=s(x,"DD",{});var er=r(je);Va=n(er,"an expression using wildcards to match all png images in the current folder"),er.forEach(t),Se=s(x,"DT",{});var tr=r(Se);Wa=n(tr,"-gravity south"),tr.forEach(t),Re=s(x,"DD",{});var ar=r(Re);Xa=n(ar,"aligns the next command(s) bottom"),ar.forEach(t),Ne=s(x,"DT",{});var or=r(Ne);Za=n(or,"-splice 0x111"),or.forEach(t),Fe=s(x,"DD",{});var sr=r(Fe);$a=n(sr,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),sr.forEach(t),Ye=s(x,"DT",{});var rr=r(Ye);eo=n(rr,"-shave 0x111"),rr.forEach(t),qe=s(x,"DD",{});var dr=r(qe);to=n(dr,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),dr.forEach(t),Be=s(x,"DT",{});var nr=r(Be);ao=n(nr,"-resize 400x400 "),nr.forEach(t),Ge=s(x,"DD",{});var ir=r(Ge);oo=n(ir,"now i can resize so that the image does not exceed 400 px either direction"),ir.forEach(t),Je=s(x,"DT",{});var lr=r(Je);so=n(lr,"-set delay 300"),lr.forEach(t),Ke=s(x,"DD",{});var cr=r(Ke);ro=n(cr,"adds a three seconds delay between all images"),cr.forEach(t),Oe=s(x,"DT",{});var hr=r(Oe);no=n(hr,"output.gif"),hr.forEach(t),Qe=s(x,"DD",{});var pr=r(Qe);io=n(pr,"that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),pr.forEach(t),x.forEach(t),Ut=b(a),z=s(a,"H2",{id:!0});var ss=r(z);H=s(ss,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var mr=r(H);Ue=s(mr,"SPAN",{class:!0}),r(Ue).forEach(t),mr.forEach(t),lo=n(ss,"Cropping a set of images to the same size and animating them"),ss.forEach(t),Vt=b(a),K=s(a,"P",{});var fr=r(K);co=n(fr,"If the images in the gif are of different size you may want to do something about that. Here they are cropped to a minimum common size, the extra pixels discarded."),fr.forEach(t),Wt=b(a),N=s(a,"PRE",{class:!0});var fd=r(N);fd.forEach(t),Xt=b(a),g=s(a,"DL",{class:!0});var w=r(g);Ve=s(w,"DT",{});var ur=r(Ve);ho=n(ur,"convert"),ur.forEach(t),We=s(w,"DD",{});var gr=r(We);po=n(gr,"calls up one of the ImageMagick commands, "),gr.forEach(t),Xe=s(w,"DT",{});var vr=r(Xe);mo=n(vr,"*.png "),vr.forEach(t),Ze=s(w,"DD",{});var br=r(Ze);fo=n(br,"an expression using wildcards to match all png images in the current folder"),br.forEach(t),$e=s(w,"DT",{});var Dr=r($e);uo=n(Dr,"-resize 800x500^"),Dr.forEach(t),et=s(w,"DD",{});var xr=r(et);go=n(xr,"the ^ after the dimensions means those are the minimum sizes rather then the maximum"),xr.forEach(t),tt=s(w,"DT",{});var wr=r(tt);vo=n(wr,"-gravity center"),wr.forEach(t),at=s(w,"DD",{});var _r=r(at);bo=n(_r,"aligns the next command(s)"),_r.forEach(t),ot=s(w,"DT",{});var Er=r(ot);Do=n(Er,"-crop  800x500+0+0"),Er.forEach(t),st=s(w,"DD",{});var kr=r(st);xo=n(kr,"crops to 800x500, with no offest (0,0)"),kr.forEach(t),rt=s(w,"DT",{});var yr=r(rt);wo=n(yr,"+repage"),yr.forEach(t),dt=s(w,"DD",{});var Tr=r(dt);_o=n(Tr,"resets the origin after the crop"),Tr.forEach(t),nt=s(w,"DT",{});var Ir=r(nt);Eo=n(Ir,"-set delay 300"),Ir.forEach(t),it=s(w,"DD",{});var Mr=r(it);ko=n(Mr,"adds a three seconds delay between all images"),Mr.forEach(t),lt=s(w,"DT",{});var zr=r(lt);yo=n(zr,"output.gif"),zr.forEach(t),ct=s(w,"DD",{});var Hr=r(ct);To=n(Hr,"that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Hr.forEach(t),w.forEach(t),Zt=b(a),P=s(a,"H2",{id:!0});var rs=r(P);A=s(rs,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Pr=r(A);ht=s(Pr,"SPAN",{class:!0}),r(ht).forEach(t),Pr.forEach(t),Io=n(rs,"Arranging images in a grid"),rs.forEach(t),$t=b(a),O=s(a,"P",{});var Ar=r(O);Mo=n(Ar,"This is actually two commands, one after the other - one to resize and crop the images, the other to arrange them."),Ar.forEach(t),ea=b(a),F=s(a,"PRE",{class:!0});var ud=r(F);ud.forEach(t),ta=b(a),h=s(a,"DL",{class:!0});var m=r(h);pt=s(m,"DT",{});var Cr=r(pt);zo=n(Cr,"convert"),Cr.forEach(t),mt=s(m,"DD",{});var Lr=r(mt);Ho=n(Lr,"calls up one of the ImageMagick commands, convert"),Lr.forEach(t),ft=s(m,"DT",{});var jr=r(ft);Po=n(jr,"*.png "),jr.forEach(t),ut=s(m,"DD",{});var Sr=r(ut);Ao=n(Sr,"an expression using wildcards to match all png images in the current folder"),Sr.forEach(t),gt=s(m,"DT",{});var Rr=r(gt);Co=n(Rr,"-gravity south"),Rr.forEach(t),vt=s(m,"DD",{});var Nr=r(vt);Lo=n(Nr,"aligns the next command(s) bottom"),Nr.forEach(t),bt=s(m,"DT",{});var Fr=r(bt);jo=n(Fr,"-splice 0x111"),Fr.forEach(t),Dt=s(m,"DD",{});var Yr=r(Dt);So=n(Yr,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Yr.forEach(t),xt=s(m,"DT",{});var qr=r(xt);Ro=n(qr,"-shave 0x111"),qr.forEach(t),wt=s(m,"DD",{});var Br=r(wt);No=n(Br,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Br.forEach(t),_t=s(m,"DT",{});var Gr=r(_t);Fo=n(Gr,"-resize 400x400 "),Gr.forEach(t),Et=s(m,"DD",{});var Jr=r(Et);Yo=n(Jr,"now i can resize so that the image does not exceed 400 px either direction"),Jr.forEach(t),kt=s(m,"DT",{});var Kr=r(kt);qo=n(Kr,"converted.png"),Kr.forEach(t),yt=s(m,"DD",{});var Or=r(yt);Bo=n(Or,"for each input image, it creates a correspoding output image in the current folder named converted-1.png, converted-2.png..."),Or.forEach(t),Tt=s(m,"DT",{});var Qr=r(Tt);Go=n(Qr,"montage"),Qr.forEach(t),It=s(m,"DD",{});var Ur=r(It);Jo=n(Ur,"calls up one of the ImageMagick commands, montage"),Ur.forEach(t),Mt=s(m,"DT",{});var Vr=r(Mt);Ko=n(Vr,"converted*.png"),Vr.forEach(t),zt=s(m,"DD",{});var Wr=r(zt);Oo=n(Wr,"this time only match the images whose name start with 'converted', i.e. the ones created by the previous command"),Wr.forEach(t),Ht=s(m,"DT",{});var Xr=r(Ht);Qo=n(Xr,"-mode concatenate"),Xr.forEach(t),Pt=s(m,"DD",{});var Zr=r(Pt);Uo=n(Zr,"arranges them in a grid"),Zr.forEach(t),At=s(m,"DT",{});var $r=r(At);Vo=n($r,"-tile 2x2"),$r.forEach(t),Ct=s(m,"DD",{});var ed=r(Ct);Wo=n(ed,"in this particular case, it is a 2x2 grid as I only had four images. You can use x2 or 2x to keep the number of rows and columns respectively fixed at 2, and the other dimension filled in with however many images you have"),ed.forEach(t),Lt=s(m,"DT",{});var td=r(Lt);Xo=n(td,"output.png"),td.forEach(t),jt=s(m,"DD",{});var ad=r(jt);Zo=n(ad,"...and here comes the image"),ad.forEach(t),m.forEach(t),aa=b(a),C=s(a,"H2",{id:!0});var ds=r(C);L=s(ds,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var od=r(L);St=s(od,"SPAN",{class:!0}),r(St).forEach(t),od.forEach(t),$o=n(ds,"More"),ds.forEach(t),oa=b(a),Y=s(a,"P",{});var ns=r(Y);q=s(ns,"A",{href:!0,rel:!0});var sd=r(q);es=n(sd,"More ImageMagick commands"),sd.forEach(t),ts=n(ns,"."),ns.forEach(t),this.h()},h(){c(Q,"class","icon icon-link"),c(k,"aria-hidden","true"),c(k,"tabindex","-1"),c(k,"href","#combining-images-vertically-with-a-line-separating-them"),c(E,"id","combining-images-vertically-with-a-line-separating-them"),c(j,"class","language-sh"),c(D,"class","code-breakdown"),c(ie,"class","icon icon-link"),c(T,"aria-hidden","true"),c(T,"tabindex","-1"),c(T,"href","#removing-window-artefacts-from-the-top-of-the-images-first"),c(y,"id","removing-window-artefacts-from-the-top-of-the-images-first"),c(S,"class","language-sh"),c(p,"class","code-breakdown"),c(Pe,"class","icon icon-link"),c(M,"aria-hidden","true"),c(M,"tabindex","-1"),c(M,"href","#combining-images-into-an-animated-gif"),c(I,"id","combining-images-into-an-animated-gif"),c(R,"class","language-sh"),c(u,"class","code-breakdown"),c(Ue,"class","icon icon-link"),c(H,"aria-hidden","true"),c(H,"tabindex","-1"),c(H,"href","#cropping-a-set-of-images-to-the-same-size-and-animating-them"),c(z,"id","cropping-a-set-of-images-to-the-same-size-and-animating-them"),c(N,"class","language-sh"),c(g,"class","code-breakdown"),c(ht,"class","icon icon-link"),c(A,"aria-hidden","true"),c(A,"tabindex","-1"),c(A,"href","#arranging-images-in-a-grid"),c(P,"id","arranging-images-in-a-grid"),c(F,"class","language-sh"),c(h,"class","code-breakdown"),c(St,"class","icon icon-link"),c(L,"aria-hidden","true"),c(L,"tabindex","-1"),c(L,"href","#more"),c(C,"id","more"),c(q,"href","http://www.imagemagick.org/script/command-line-processing.php#anatomy"),c(q,"rel","nofollow")},m(a,i){l(a,E,i),e(E,k),e(k,Q),e(E,sa),l(a,Rt,i),l(a,B,i),e(B,ra),l(a,Nt,i),l(a,j,i),j.innerHTML=dd,l(a,Ft,i),l(a,D,i),e(D,U),e(U,da),e(D,V),e(V,na),e(D,W),e(W,ia),e(D,X),e(X,la),e(D,Z),e(Z,ca),e(D,$),e($,ha),e(D,ee),e(ee,pa),e(D,te),e(te,ma),e(D,ae),e(ae,fa),e(D,oe),e(oe,ua),e(D,se),e(se,ga),e(D,re),e(re,va),e(D,de),e(de,ba),e(D,ne),e(ne,Da),l(a,Yt,i),l(a,y,i),e(y,T),e(T,ie),e(y,xa),l(a,qt,i),l(a,G,i),e(G,wa),l(a,Bt,i),l(a,S,i),S.innerHTML=nd,l(a,Gt,i),l(a,p,i),e(p,le),e(le,_a),e(p,ce),e(ce,Ea),e(p,he),e(he,ka),e(p,pe),e(pe,ya),e(p,me),e(me,Ta),e(p,fe),e(fe,Ia),e(p,ue),e(ue,Ma),e(p,ge),e(ge,za),e(p,ve),e(ve,Ha),e(p,be),e(be,Pa),e(p,De),e(De,Aa),e(p,xe),e(xe,Ca),e(p,we),e(we,La),e(p,_e),e(_e,ja),e(p,Ee),e(Ee,Sa),e(p,ke),e(ke,Ra),e(p,ye),e(ye,Na),e(p,Te),e(Te,Fa),e(p,Ie),e(Ie,Ya),e(p,Me),e(Me,qa),e(p,ze),e(ze,Ba),e(p,He),e(He,Ga),l(a,Jt,i),l(a,I,i),e(I,M),e(M,Pe),e(I,Ja),l(a,Kt,i),l(a,J,i),e(J,Ka),l(a,Ot,i),l(a,R,i),R.innerHTML=id,l(a,Qt,i),l(a,u,i),e(u,Ae),e(Ae,Oa),e(u,Ce),e(Ce,Qa),e(u,Le),e(Le,Ua),e(u,je),e(je,Va),e(u,Se),e(Se,Wa),e(u,Re),e(Re,Xa),e(u,Ne),e(Ne,Za),e(u,Fe),e(Fe,$a),e(u,Ye),e(Ye,eo),e(u,qe),e(qe,to),e(u,Be),e(Be,ao),e(u,Ge),e(Ge,oo),e(u,Je),e(Je,so),e(u,Ke),e(Ke,ro),e(u,Oe),e(Oe,no),e(u,Qe),e(Qe,io),l(a,Ut,i),l(a,z,i),e(z,H),e(H,Ue),e(z,lo),l(a,Vt,i),l(a,K,i),e(K,co),l(a,Wt,i),l(a,N,i),N.innerHTML=ld,l(a,Xt,i),l(a,g,i),e(g,Ve),e(Ve,ho),e(g,We),e(We,po),e(g,Xe),e(Xe,mo),e(g,Ze),e(Ze,fo),e(g,$e),e($e,uo),e(g,et),e(et,go),e(g,tt),e(tt,vo),e(g,at),e(at,bo),e(g,ot),e(ot,Do),e(g,st),e(st,xo),e(g,rt),e(rt,wo),e(g,dt),e(dt,_o),e(g,nt),e(nt,Eo),e(g,it),e(it,ko),e(g,lt),e(lt,yo),e(g,ct),e(ct,To),l(a,Zt,i),l(a,P,i),e(P,A),e(A,ht),e(P,Io),l(a,$t,i),l(a,O,i),e(O,Mo),l(a,ea,i),l(a,F,i),F.innerHTML=cd,l(a,ta,i),l(a,h,i),e(h,pt),e(pt,zo),e(h,mt),e(mt,Ho),e(h,ft),e(ft,Po),e(h,ut),e(ut,Ao),e(h,gt),e(gt,Co),e(h,vt),e(vt,Lo),e(h,bt),e(bt,jo),e(h,Dt),e(Dt,So),e(h,xt),e(xt,Ro),e(h,wt),e(wt,No),e(h,_t),e(_t,Fo),e(h,Et),e(Et,Yo),e(h,kt),e(kt,qo),e(h,yt),e(yt,Bo),e(h,Tt),e(Tt,Go),e(h,It),e(It,Jo),e(h,Mt),e(Mt,Ko),e(h,zt),e(zt,Oo),e(h,Ht),e(Ht,Qo),e(h,Pt),e(Pt,Uo),e(h,At),e(At,Vo),e(h,Ct),e(Ct,Wo),e(h,Lt),e(Lt,Xo),e(h,jt),e(jt,Zo),l(a,aa,i),l(a,C,i),e(C,L),e(L,St),e(C,$o),l(a,oa,i),l(a,Y,i),e(Y,q),e(q,es),e(Y,ts)},p:is,i:is,o:is,d(a){a&&t(E),a&&t(Rt),a&&t(B),a&&t(Nt),a&&t(j),a&&t(Ft),a&&t(D),a&&t(Yt),a&&t(y),a&&t(qt),a&&t(G),a&&t(Bt),a&&t(S),a&&t(Gt),a&&t(p),a&&t(Jt),a&&t(I),a&&t(Kt),a&&t(J),a&&t(Ot),a&&t(R),a&&t(Qt),a&&t(u),a&&t(Ut),a&&t(z),a&&t(Vt),a&&t(K),a&&t(Wt),a&&t(N),a&&t(Xt),a&&t(g),a&&t(Zt),a&&t(P),a&&t($t),a&&t(O),a&&t(ea),a&&t(F),a&&t(ta),a&&t(h),a&&t(aa),a&&t(C),a&&t(oa),a&&t(Y)}}}const wd={date:"2011-12-22 12:34",title:"Combining images with ImageMagick",excerpt:'Assorted <a href="http://www.imagemagick.org/script/index.php">ImageMagick</a> commands for combining images',tags:["imagemagick"]};class _d extends gd{constructor(E){super(),vd(this,E,null,Dd,bd,{})}}export{_d as default,wd as metadata};
