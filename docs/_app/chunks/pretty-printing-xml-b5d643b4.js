import{S as be,i as xe,s as Ee,e as i,t as p,k as c,c as r,a as o,d as a,h as u,m as h,b as l,g as n,I as s,E as se}from"./index-6e518972.js";function Te(fe){let d,m,H,g,V,w,z,j,E,ce=`<code class="language-bash"><span class="token operator">></span> brew <span class="token function">install</span> tidy
</code>`,D,y,v,C,B,F,f,G,M,J,K,A,Q,O,T,he=`<code class="language-bash"><span class="token operator">></span> tidy <span class="token parameter variable">-xml</span> <span class="token parameter variable">-i</span> input.xml <span class="token operator">></span> pretty_printed.xml
</code>`,R,_,U,k,Y,Z,X,P,me=`<code class="language-bash"><span class="token operator">></span> tidy <span class="token parameter variable">-xml</span> --uppercase-tags y  <span class="token parameter variable">-i</span> input.xml
</code>`,N,b,x,L,$,q,S,ee;return{c(){d=i("h2"),m=i("a"),H=i("span"),g=p("What is tidy?"),V=c(),w=i("p"),z=p("It\u2019s a very unslick util for tidying up HTML markup which gets the job done. To install it on OS X, simply do"),j=c(),E=i("pre"),D=c(),y=i("h2"),v=i("a"),C=i("span"),B=p("Tidy usage"),F=c(),f=i("p"),G=p("To pretty print "),M=i("code"),J=p("input.xml"),K=p(" and save the output to "),A=i("code"),Q=p("pretty_printed.xml"),O=c(),T=i("pre"),R=c(),_=i("p"),U=p("There are several "),k=i("a"),Y=p("command line options"),Z=p(". For example, to change the case of tabs to uppercase:"),X=c(),P=i("pre"),N=c(),b=i("h2"),x=i("a"),L=i("span"),$=p("Visual Studio Code"),q=c(),S=i("p"),ee=p("To install it on VSCode, just search for \u201CTidy\u201D in the Extension Panel. Then you can use from the command panel (CMD-SHIFT-P) by simply typing \u201Ctidy\u201D"),this.h()},l(e){d=r(e,"H2",{id:!0});var t=o(d);m=r(t,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var le=o(m);H=r(le,"SPAN",{class:!0}),o(H).forEach(a),le.forEach(a),g=u(t,"What is tidy?"),t.forEach(a),V=h(e),w=r(e,"P",{});var ie=o(w);z=u(ie,"It\u2019s a very unslick util for tidying up HTML markup which gets the job done. To install it on OS X, simply do"),ie.forEach(a),j=h(e),E=r(e,"PRE",{class:!0});var ye=o(E);ye.forEach(a),D=h(e),y=r(e,"H2",{id:!0});var ae=o(y);v=r(ae,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var re=o(v);C=r(re,"SPAN",{class:!0}),o(C).forEach(a),re.forEach(a),B=u(ae,"Tidy usage"),ae.forEach(a),F=h(e),f=r(e,"P",{});var I=o(f);G=u(I,"To pretty print "),M=r(I,"CODE",{});var oe=o(M);J=u(oe,"input.xml"),oe.forEach(a),K=u(I," and save the output to "),A=r(I,"CODE",{});var ne=o(A);Q=u(ne,"pretty_printed.xml"),ne.forEach(a),I.forEach(a),O=h(e),T=r(e,"PRE",{class:!0});var ve=o(T);ve.forEach(a),R=h(e),_=r(e,"P",{});var W=o(_);U=u(W,"There are several "),k=r(W,"A",{href:!0,rel:!0});var pe=o(k);Y=u(pe,"command line options"),pe.forEach(a),Z=u(W,". For example, to change the case of tabs to uppercase:"),W.forEach(a),X=h(e),P=r(e,"PRE",{class:!0});var _e=o(P);_e.forEach(a),N=h(e),b=r(e,"H2",{id:!0});var te=o(b);x=r(te,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ue=o(x);L=r(ue,"SPAN",{class:!0}),o(L).forEach(a),ue.forEach(a),$=u(te,"Visual Studio Code"),te.forEach(a),q=h(e),S=r(e,"P",{});var de=o(S);ee=u(de,"To install it on VSCode, just search for \u201CTidy\u201D in the Extension Panel. Then you can use from the command panel (CMD-SHIFT-P) by simply typing \u201Ctidy\u201D"),de.forEach(a),this.h()},h(){l(H,"class","icon icon-link"),l(m,"aria-hidden","true"),l(m,"tabindex","-1"),l(m,"href","#what-is-tidy"),l(d,"id","what-is-tidy"),l(E,"class","language-bash"),l(C,"class","icon icon-link"),l(v,"aria-hidden","true"),l(v,"tabindex","-1"),l(v,"href","#tidy-usage"),l(y,"id","tidy-usage"),l(T,"class","language-bash"),l(k,"href","http://tidy.sourceforge.net/docs/quickref.html#break-before-br"),l(k,"rel","nofollow"),l(P,"class","language-bash"),l(L,"class","icon icon-link"),l(x,"aria-hidden","true"),l(x,"tabindex","-1"),l(x,"href","#visual-studio-code"),l(b,"id","visual-studio-code")},m(e,t){n(e,d,t),s(d,m),s(m,H),s(d,g),n(e,V,t),n(e,w,t),s(w,z),n(e,j,t),n(e,E,t),E.innerHTML=ce,n(e,D,t),n(e,y,t),s(y,v),s(v,C),s(y,B),n(e,F,t),n(e,f,t),s(f,G),s(f,M),s(M,J),s(f,K),s(f,A),s(A,Q),n(e,O,t),n(e,T,t),T.innerHTML=he,n(e,R,t),n(e,_,t),s(_,U),s(_,k),s(k,Y),s(_,Z),n(e,X,t),n(e,P,t),P.innerHTML=me,n(e,N,t),n(e,b,t),s(b,x),s(x,L),s(b,$),n(e,q,t),n(e,S,t),s(S,ee)},p:se,i:se,o:se,d(e){e&&a(d),e&&a(V),e&&a(w),e&&a(j),e&&a(E),e&&a(D),e&&a(y),e&&a(F),e&&a(f),e&&a(O),e&&a(T),e&&a(R),e&&a(_),e&&a(X),e&&a(P),e&&a(N),e&&a(b),e&&a(q),e&&a(S)}}}const Pe={title:"Pretty printing XML",date:"2015-10-21 00:38",excerpt:'<a href="http://www.w3.org/People/Raggett/tidy/">tidy</a> is a command line tool for formatting XML and HTML. Also available as a <a href="http://www.html-tidy.org/">Visual Studio Code Extension</a>',draft:!1,tags:["html","tools","xml"]};class we extends be{constructor(d){super(),xe(this,d,null,Te,Ee,{})}}export{we as default,Pe as metadata};
