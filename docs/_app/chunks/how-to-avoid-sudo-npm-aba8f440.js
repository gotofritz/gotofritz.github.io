import{S as C,i as F,s as J,e as i,t as f,j as v,c as l,a as r,g as y,d as o,l as k,b as H,f as a,F as p,J as T}from"./vendor-e04e0de5.js";function N($){let t,c,S,_,d,I,g,h,q=`<code class="language-bash"><span class="token comment"># this should solve the problem</span>
$ <span class="token function">sudo</span> <span class="token function">chown</span> -R MY_USER_NAME /usr/local

<span class="token comment"># this may also help</span>
$ <span class="token function">sudo</span> <span class="token function">chmod</span> -R <span class="token number">777</span> ~/.npm</code>`,j,m,M,b,u,L=`<code class="language-bash"><span class="token comment"># if someone has checked in a version</span>
<span class="token comment"># of package.json with the wrong permissions</span>
$ <span class="token function">chmod</span> -775 package.json</code>`,E,n,O,w,P,R;return{c(){t=i("h2"),c=i("a"),S=f("On your dev machine"),_=v(),d=i("p"),I=f("If you are the typical js developer who works on OS X, all you need to do is just change the owner of the node binaries"),g=v(),h=i("pre"),j=v(),m=i("p"),M=f("If you are working on projects and someone has already checked in a package.json run with sudo, you need to make sure the whole team changes the permissions of at the same time"),b=v(),u=i("pre"),E=v(),n=i("p"),O=f("Unix purists will find this hacky; and rightly so. The "),w=i("em"),P=f("proper"),R=f(" way of doing is to create a group for everyone who should be allowed to run npm, even if it\u2019s just you. However for a simple dev machine that is good enough."),this.h()},l(e){t=l(e,"H2",{id:!0});var s=r(t);c=l(s,"A",{href:!0});var A=r(c);S=y(A,"On your dev machine"),A.forEach(o),s.forEach(o),_=k(e),d=l(e,"P",{});var U=r(d);I=y(U,"If you are the typical js developer who works on OS X, all you need to do is just change the owner of the node binaries"),U.forEach(o),g=k(e),h=l(e,"PRE",{class:!0});var z=r(h);z.forEach(o),j=k(e),m=l(e,"P",{});var X=r(m);M=y(X,"If you are working on projects and someone has already checked in a package.json run with sudo, you need to make sure the whole team changes the permissions of at the same time"),X.forEach(o),b=k(e),u=l(e,"PRE",{class:!0});var B=r(u);B.forEach(o),E=k(e),n=l(e,"P",{});var x=r(n);O=y(x,"Unix purists will find this hacky; and rightly so. The "),w=l(x,"EM",{});var Y=r(w);P=y(Y,"proper"),Y.forEach(o),R=y(x," way of doing is to create a group for everyone who should be allowed to run npm, even if it\u2019s just you. However for a simple dev machine that is good enough."),x.forEach(o),this.h()},h(){H(c,"href","#on-your-dev-machine"),H(t,"id","on-your-dev-machine"),H(h,"class","language-bash"),H(u,"class","language-bash")},m(e,s){a(e,t,s),p(t,c),p(c,S),a(e,_,s),a(e,d,s),p(d,I),a(e,g,s),a(e,h,s),h.innerHTML=q,a(e,j,s),a(e,m,s),p(m,M),a(e,b,s),a(e,u,s),u.innerHTML=L,a(e,E,s),a(e,n,s),p(n,O),p(n,w),p(w,P),p(n,R)},p:T,i:T,o:T,d(e){e&&o(t),e&&o(_),e&&o(d),e&&o(g),e&&o(h),e&&o(j),e&&o(m),e&&o(b),e&&o(u),e&&o(E),e&&o(n)}}}const G={title:"How To Avoid sudo npm",date:"2015-12-14 22:12",excerpt:"You know the story. You try to do <code>npm install hipster-package</code> on OS X and you get a whole load of errors; the easy way out is to just use <code>sudo npm install</code>. Everyone, however, keep saying how that is bad idea. But how do you make npm work without sudo? It&#39;s quite simple actually",published:!0,prev:"pretty-printing-xml",next:"stop-chrome-navigating-back-when-swiping-horizontally",tags:["js","os x"]};class K extends C{constructor(t){super();F(this,t,null,N,J,{})}}export{K as default,G as metadata};
