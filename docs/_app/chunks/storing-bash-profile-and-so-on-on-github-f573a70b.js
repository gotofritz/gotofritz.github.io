import{S as Ut,i as jt,s as Yt,e as l,t as n,j as u,c as r,a as i,g as f,d as t,l as c,b as p,f as o,F as s,I as et}from"./vendor-f15b48c1.js";function Dt(xt){let h,Ee,w,ke,ye,E,Ie,Ae,k,Me,Q,y,U,xe,V,j,Te,Z,I,Tt=`<code class="language-bash"><span class="token builtin class-name">cd</span> path/to/dotfile/clone
<span class="token function">git</span> pull origin master
./bootstrap.sh <span class="token comment">#./bootstrap.sh -f to avoid the prompt</span>
<span class="token builtin class-name">.</span> ~/.bash_profile</code>`,ee,A,Y,He,te,D,Pe,se,M,N,Oe,ae,d,Re,B,Ge,Se,oe,b,Le,F,Ce,ge,le,x,Ht=`<code class="language-bash"><span class="token comment"># Git credentials</span>
<span class="token comment"># Not in the repository, to prevent people from</span>
<span class="token comment"># accidentally committing under my name</span>
<span class="token assign-left variable">GIT_AUTHOR_NAME</span><span class="token operator">=</span><span class="token string">"Fritz Stelluto"</span>
<span class="token assign-left variable">GIT_COMMITTER_NAME</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$GIT_AUTHOR_NAME</span>"</span>
<span class="token function">git</span> config --global user.name <span class="token string">"<span class="token variable">$GIT_AUTHOR_NAME</span>"</span>
<span class="token assign-left variable">GIT_AUTHOR_EMAIL</span><span class="token operator">=</span><span class="token string">"xxxxxxx"</span>
<span class="token assign-left variable">GIT_COMMITTER_EMAIL</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$GIT_AUTHOR_EMAIL</span>"</span>
<span class="token function">git</span> config --global user.email <span class="token string">"<span class="token variable">$GIT_AUTHOR_EMAIL</span>"</span></code>`,re,m,Ue,q,je,Ye,T,De,Ne,ie,H,W,We,ne,X,Xe,fe,P,Pt='<code class="language-bash">./.osx</code>',pe,O,$,$e,ue,_,ze,R,Be,Fe,ce,G,Ot='<code class="language-bash">brew bundle ~/Brewfile</code>',he,S,L,qe,J,Je,me,v,Ke,C,K,Qe,Ve,de,g,Rt='<code class="language-bash">./.cask</code>';return{c(){h=l("p"),Ee=n("I first learned about them from "),w=l("a"),ke=n("Mathias Bynes"),ye=n(", of jsPerf fame and so I cloned his project and created "),E=l("a"),Ie=n("my own dotfiles"),Ae=n(". Meanwhile "),k=l("a"),Me=n("it has become a thing"),Q=u(),y=l("h2"),U=l("a"),xe=n("Using Git and the bootstrap script"),V=u(),j=l("p"),Te=n("I have a cloned version of the dotfile directory on my machine. To update"),Z=u(),I=l("pre"),ee=u(),A=l("h2"),Y=l("a"),He=n("Path"),te=u(),D=l("p"),Pe=n("I have no problem with putting the path under github - there\u2019s no confidential stuff in there."),se=u(),M=l("h2"),N=l("a"),Oe=n("Add custom commands without creating a new fork"),ae=u(),d=l("p"),Re=n("If "),B=l("code"),Ge=n("~/.extra"),Se=n(" exists, it will be sourced along with the other files. You can use this to add a few custom commands without the need to fork this entire repository, or to add commands you don\u2019t want to commit to a public repository."),oe=u(),b=l("p"),Le=n("My "),F=l("code"),Ce=n("~/.extra"),ge=n(" looks something like this:"),le=u(),x=l("pre"),re=u(),m=l("p"),Ue=n("You could also use "),q=l("code"),je=n("~/.extra"),Ye=n(" to override settings, functions and aliases from my dotfiles repository. It\u2019s probably better to "),T=l("a"),De=n("fork this repository"),Ne=n(" instead, though."),ie=u(),H=l("h2"),W=l("a"),We=n("Sensible OS X defaults"),ne=u(),X=l("p"),Xe=n("When setting up a new Mac, you may want to set some sensible OS X defaults:"),fe=u(),P=l("pre"),pe=u(),O=l("h2"),$=l("a"),$e=n("Install Homebrew formulae"),ue=u(),_=l("p"),ze=n("When setting up a new Mac, you may want to install some common "),R=l("a"),Be=n("Homebrew"),Fe=n(" formulae (after installing Homebrew, of course):"),ce=u(),G=l("pre"),he=u(),S=l("h2"),L=l("a"),qe=n("Install native apps with "),J=l("code"),Je=n("brew cask"),me=u(),v=l("p"),Ke=n("You could also install native apps with "),C=l("a"),K=l("code"),Qe=n("brew cask"),Ve=n(":"),de=u(),g=l("pre"),this.h()},l(e){h=r(e,"P",{});var a=i(h);Ee=f(a,"I first learned about them from "),w=r(a,"A",{href:!0,rel:!0});var tt=i(w);ke=f(tt,"Mathias Bynes"),tt.forEach(t),ye=f(a,", of jsPerf fame and so I cloned his project and created "),E=r(a,"A",{href:!0,rel:!0});var st=i(E);Ie=f(st,"my own dotfiles"),st.forEach(t),Ae=f(a,". Meanwhile "),k=r(a,"A",{href:!0,rel:!0});var at=i(k);Me=f(at,"it has become a thing"),at.forEach(t),a.forEach(t),Q=c(e),y=r(e,"H2",{id:!0});var ot=i(y);U=r(ot,"A",{href:!0});var lt=i(U);xe=f(lt,"Using Git and the bootstrap script"),lt.forEach(t),ot.forEach(t),V=c(e),j=r(e,"P",{});var rt=i(j);Te=f(rt,"I have a cloned version of the dotfile directory on my machine. To update"),rt.forEach(t),Z=c(e),I=r(e,"PRE",{class:!0});var Gt=i(I);Gt.forEach(t),ee=c(e),A=r(e,"H2",{id:!0});var it=i(A);Y=r(it,"A",{href:!0});var nt=i(Y);He=f(nt,"Path"),nt.forEach(t),it.forEach(t),te=c(e),D=r(e,"P",{});var ft=i(D);Pe=f(ft,"I have no problem with putting the path under github - there\u2019s no confidential stuff in there."),ft.forEach(t),se=c(e),M=r(e,"H2",{id:!0});var pt=i(M);N=r(pt,"A",{href:!0});var ut=i(N);Oe=f(ut,"Add custom commands without creating a new fork"),ut.forEach(t),pt.forEach(t),ae=c(e),d=r(e,"P",{});var be=i(d);Re=f(be,"If "),B=r(be,"CODE",{});var ct=i(B);Ge=f(ct,"~/.extra"),ct.forEach(t),Se=f(be," exists, it will be sourced along with the other files. You can use this to add a few custom commands without the need to fork this entire repository, or to add commands you don\u2019t want to commit to a public repository."),be.forEach(t),oe=c(e),b=r(e,"P",{});var _e=i(b);Le=f(_e,"My "),F=r(_e,"CODE",{});var ht=i(F);Ce=f(ht,"~/.extra"),ht.forEach(t),ge=f(_e," looks something like this:"),_e.forEach(t),le=c(e),x=r(e,"PRE",{class:!0});var St=i(x);St.forEach(t),re=c(e),m=r(e,"P",{});var z=i(m);Ue=f(z,"You could also use "),q=r(z,"CODE",{});var mt=i(q);je=f(mt,"~/.extra"),mt.forEach(t),Ye=f(z," to override settings, functions and aliases from my dotfiles repository. It\u2019s probably better to "),T=r(z,"A",{href:!0,rel:!0});var dt=i(T);De=f(dt,"fork this repository"),dt.forEach(t),Ne=f(z," instead, though."),z.forEach(t),ie=c(e),H=r(e,"H2",{id:!0});var bt=i(H);W=r(bt,"A",{href:!0});var _t=i(W);We=f(_t,"Sensible OS X defaults"),_t.forEach(t),bt.forEach(t),ne=c(e),X=r(e,"P",{});var vt=i(X);Xe=f(vt,"When setting up a new Mac, you may want to set some sensible OS X defaults:"),vt.forEach(t),fe=c(e),P=r(e,"PRE",{class:!0});var Lt=i(P);Lt.forEach(t),pe=c(e),O=r(e,"H2",{id:!0});var wt=i(O);$=r(wt,"A",{href:!0});var Et=i($);$e=f(Et,"Install Homebrew formulae"),Et.forEach(t),wt.forEach(t),ue=c(e),_=r(e,"P",{});var ve=i(_);ze=f(ve,"When setting up a new Mac, you may want to install some common "),R=r(ve,"A",{href:!0,rel:!0});var kt=i(R);Be=f(kt,"Homebrew"),kt.forEach(t),Fe=f(ve," formulae (after installing Homebrew, of course):"),ve.forEach(t),ce=c(e),G=r(e,"PRE",{class:!0});var Ct=i(G);Ct.forEach(t),he=c(e),S=r(e,"H2",{id:!0});var yt=i(S);L=r(yt,"A",{href:!0});var Ze=i(L);qe=f(Ze,"Install native apps with "),J=r(Ze,"CODE",{});var It=i(J);Je=f(It,"brew cask"),It.forEach(t),Ze.forEach(t),yt.forEach(t),me=c(e),v=r(e,"P",{});var we=i(v);Ke=f(we,"You could also install native apps with "),C=r(we,"A",{href:!0,rel:!0});var At=i(C);K=r(At,"CODE",{});var Mt=i(K);Qe=f(Mt,"brew cask"),Mt.forEach(t),At.forEach(t),Ve=f(we,":"),we.forEach(t),de=c(e),g=r(e,"PRE",{class:!0});var gt=i(g);gt.forEach(t),this.h()},h(){p(w,"href","https://github.com/mathiasbynens/dotfiles"),p(w,"rel","nofollow"),p(E,"href","https://github.com/gotofritz/dotfiles"),p(E,"rel","nofollow"),p(k,"href","https://dotfiles.github.io/"),p(k,"rel","nofollow"),p(U,"href","#using-git-and-the-bootstrap-script"),p(y,"id","using-git-and-the-bootstrap-script"),p(I,"class","language-bash"),p(Y,"href","#path"),p(A,"id","path"),p(N,"href","#add-custom-commands-without-creating-a-new-fork"),p(M,"id","add-custom-commands-without-creating-a-new-fork"),p(x,"class","language-bash"),p(T,"href","https://github.com/mathiasbynens/dotfiles/fork"),p(T,"rel","nofollow"),p(W,"href","#sensible-os-x-defaults"),p(H,"id","sensible-os-x-defaults"),p(P,"class","language-bash"),p($,"href","#install-homebrew-formulae"),p(O,"id","install-homebrew-formulae"),p(R,"href","http://brew.sh/"),p(R,"rel","nofollow"),p(G,"class","language-bash"),p(L,"href","#install-native-apps-with-brew-cask"),p(S,"id","install-native-apps-with-brew-cask"),p(C,"href","https://github.com/phinze/homebrew-cask"),p(C,"rel","nofollow"),p(g,"class","language-bash")},m(e,a){o(e,h,a),s(h,Ee),s(h,w),s(w,ke),s(h,ye),s(h,E),s(E,Ie),s(h,Ae),s(h,k),s(k,Me),o(e,Q,a),o(e,y,a),s(y,U),s(U,xe),o(e,V,a),o(e,j,a),s(j,Te),o(e,Z,a),o(e,I,a),I.innerHTML=Tt,o(e,ee,a),o(e,A,a),s(A,Y),s(Y,He),o(e,te,a),o(e,D,a),s(D,Pe),o(e,se,a),o(e,M,a),s(M,N),s(N,Oe),o(e,ae,a),o(e,d,a),s(d,Re),s(d,B),s(B,Ge),s(d,Se),o(e,oe,a),o(e,b,a),s(b,Le),s(b,F),s(F,Ce),s(b,ge),o(e,le,a),o(e,x,a),x.innerHTML=Ht,o(e,re,a),o(e,m,a),s(m,Ue),s(m,q),s(q,je),s(m,Ye),s(m,T),s(T,De),s(m,Ne),o(e,ie,a),o(e,H,a),s(H,W),s(W,We),o(e,ne,a),o(e,X,a),s(X,Xe),o(e,fe,a),o(e,P,a),P.innerHTML=Pt,o(e,pe,a),o(e,O,a),s(O,$),s($,$e),o(e,ue,a),o(e,_,a),s(_,ze),s(_,R),s(R,Be),s(_,Fe),o(e,ce,a),o(e,G,a),G.innerHTML=Ot,o(e,he,a),o(e,S,a),s(S,L),s(L,qe),s(L,J),s(J,Je),o(e,me,a),o(e,v,a),s(v,Ke),s(v,C),s(C,K),s(K,Qe),s(v,Ve),o(e,de,a),o(e,g,a),g.innerHTML=Rt},p:et,i:et,o:et,d(e){e&&t(h),e&&t(Q),e&&t(y),e&&t(V),e&&t(j),e&&t(Z),e&&t(I),e&&t(ee),e&&t(A),e&&t(te),e&&t(D),e&&t(se),e&&t(M),e&&t(ae),e&&t(d),e&&t(oe),e&&t(b),e&&t(le),e&&t(x),e&&t(re),e&&t(m),e&&t(ie),e&&t(H),e&&t(ne),e&&t(X),e&&t(fe),e&&t(P),e&&t(pe),e&&t(O),e&&t(ue),e&&t(_),e&&t(ce),e&&t(G),e&&t(he),e&&t(S),e&&t(me),e&&t(v),e&&t(de),e&&t(g)}}}const Wt={title:"dotfiles",date:"2013-09-01 16:11",excerpt:"Storing your CLI config files (.bash_profile and all the rest) on github makes sense - as a backup, but also to compare and learn.",prev:"install-specific-version-homebrew",next:"directory-listings-in-apache-2-4",published:!0,tags:["bash"]};class Xt extends Ut{constructor(h){super();jt(this,h,null,Dt,Yt,{})}}export{Xt as default,Wt as metadata};
