import{S as ra,i as ia,s as la,e as o,t as u,k as I,c as p,a as r,d as s,h as d,m as g,b as t,g as i,I as e,E as z}from"./index-6e518972.js";function ca(ta){let l,f,A,q,M,x,N,F,y,na=`<code class="language-bash"><span class="token operator">></span> <span class="token builtin class-name">cd</span> jupyter

<span class="token comment"># initialise the virtual env - created it in previous sessions</span>
<span class="token operator">></span> <span class="token builtin class-name">source</span> .venv/bin/activate

<span class="token operator">></span> <span class="token function">mkdir</span> katas
<span class="token operator">></span> jupyter notebook</code>`,B,k,h,S,j,H,c,G,b,K,L,w,R,W,C,v,m,T,D,E,Z,J,_,ea=`<code class="language-python"><span class="token keyword">import</span> re
<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame
<span class="token keyword">import</span> requests
<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup

re_money <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"D+([d.]+)(D+)$"</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">convert_money</span><span class="token punctuation">(</span>money_str<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""Convert from \u20AC134M to 134000000"""</span>
    matches <span class="token operator">=</span> re_money<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>money_str<span class="token punctuation">)</span>
    amount <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>matches<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> matches<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"M"</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span>amount <span class="token operator">*</span> <span class="token number">1000000</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span>amount <span class="token operator">*</span> <span class="token number">100000</span><span class="token punctuation">)</span></code>`;return{c(){l=o("h2"),f=o("a"),A=o("span"),q=u("Getting started"),M=I(),x=o("p"),N=u("To get started, I navigate to my Jupyter experiments repo, and create a folder for the pandas katas. I then start up Juypter, and use the web interface to create a notebook inside that folder"),F=I(),y=o("pre"),B=I(),k=o("h2"),h=o("a"),S=o("span"),j=u("Manipulating footballing data"),H=I(),c=o("p"),G=u("As the World Cup plays out, I\u2019ve been tinkering with Pandas and football data. It\u2019s not as easy as it sounds - most of the good stuff comes at a steep price. But I stumbled upon "),b=o("a"),K=u("a repository from a data scientist who had a similar idea"),L=u(", so I decided to borrow from their work. They started by scraping "),w=o("a"),R=u("sofifa.com"),W=u(" for data, which is fitting since FIFA the video game is known for its realistic player data. I forked the repo and used it as a foundation for my own scraping efforts."),C=I(),v=o("h2"),m=o("a"),T=o("span"),D=I(),E=o("p"),Z=u("I create a folder for the scraped data and start with the first csv file, minimal_player_list.csv. It contains player data with price, team and nationality. I use BeautifulSoup for scraping. To keep the notebook clean, I also create a module lib/utils.py with cleanup functions. For example, this one transforms strings like \u201C\u20AC134M\u201D into 134000000:"),J=I(),_=o("pre"),this.h()},l(a){l=p(a,"H2",{id:!0});var n=r(l);f=p(n,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var O=r(f);A=p(O,"SPAN",{class:!0}),r(A).forEach(s),O.forEach(s),q=d(n,"Getting started"),n.forEach(s),M=g(a),x=p(a,"P",{});var Q=r(x);N=d(Q,"To get started, I navigate to my Jupyter experiments repo, and create a folder for the pandas katas. I then start up Juypter, and use the web interface to create a notebook inside that folder"),Q.forEach(s),F=g(a),y=p(a,"PRE",{class:!0});var oa=r(y);oa.forEach(s),B=g(a),k=p(a,"H2",{id:!0});var $=r(k);h=p($,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var U=r(h);S=p(U,"SPAN",{class:!0}),r(S).forEach(s),U.forEach(s),j=d($,"Manipulating footballing data"),$.forEach(s),H=g(a),c=p(a,"P",{});var P=r(c);G=d(P,"As the World Cup plays out, I\u2019ve been tinkering with Pandas and football data. It\u2019s not as easy as it sounds - most of the good stuff comes at a steep price. But I stumbled upon "),b=p(P,"A",{href:!0,rel:!0});var V=r(b);K=d(V,"a repository from a data scientist who had a similar idea"),V.forEach(s),L=d(P,", so I decided to borrow from their work. They started by scraping "),w=p(P,"A",{href:!0,rel:!0});var X=r(w);R=d(X,"sofifa.com"),X.forEach(s),W=d(P," for data, which is fitting since FIFA the video game is known for its realistic player data. I forked the repo and used it as a foundation for my own scraping efforts."),P.forEach(s),C=g(a),v=p(a,"H2",{id:!0});var Y=r(v);m=p(Y,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var aa=r(m);T=p(aa,"SPAN",{class:!0}),r(T).forEach(s),aa.forEach(s),Y.forEach(s),D=g(a),E=p(a,"P",{});var sa=r(E);Z=d(sa,"I create a folder for the scraped data and start with the first csv file, minimal_player_list.csv. It contains player data with price, team and nationality. I use BeautifulSoup for scraping. To keep the notebook clean, I also create a module lib/utils.py with cleanup functions. For example, this one transforms strings like \u201C\u20AC134M\u201D into 134000000:"),sa.forEach(s),J=g(a),_=p(a,"PRE",{class:!0});var pa=r(_);pa.forEach(s),this.h()},h(){t(A,"class","icon icon-link"),t(f,"aria-hidden","true"),t(f,"tabindex","-1"),t(f,"href","#getting-started"),t(l,"id","getting-started"),t(y,"class","language-bash"),t(S,"class","icon icon-link"),t(h,"aria-hidden","true"),t(h,"tabindex","-1"),t(h,"href","#manipulating-footballing-data"),t(k,"id","manipulating-footballing-data"),t(b,"href","https://github.com/4m4n5/fifa18-all-player-statistics"),t(b,"rel","nofollow"),t(w,"href","https://sofifa.com/"),t(w,"rel","nofollow"),t(T,"class","icon icon-link"),t(m,"aria-hidden","true"),t(m,"tabindex","-1"),t(m,"href","#"),t(v,"id",""),t(_,"class","language-python")},m(a,n){i(a,l,n),e(l,f),e(f,A),e(l,q),i(a,M,n),i(a,x,n),e(x,N),i(a,F,n),i(a,y,n),y.innerHTML=na,i(a,B,n),i(a,k,n),e(k,h),e(h,S),e(k,j),i(a,H,n),i(a,c,n),e(c,G),e(c,b),e(b,K),e(c,L),e(c,w),e(w,R),e(c,W),i(a,C,n),i(a,v,n),e(v,m),e(m,T),i(a,D,n),i(a,E,n),e(E,Z),i(a,J,n),i(a,_,n),_.innerHTML=ea},p:z,i:z,o:z,d(a){a&&s(l),a&&s(M),a&&s(x),a&&s(F),a&&s(y),a&&s(B),a&&s(k),a&&s(H),a&&s(c),a&&s(C),a&&s(v),a&&s(D),a&&s(E),a&&s(J),a&&s(_)}}}const da={excerpt:"xxxx",date:"2022-12-12T00:00:00.000Z",draft:!0,archived:!1,title:"Pandas Kata",tags:["DataScience","Katas","Python","Pandas"]};class fa extends ra{constructor(l){super(),ia(this,l,null,ca,la,{})}}export{fa as default,da as metadata};
