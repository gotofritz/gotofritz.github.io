import{S as Ee,i as we,s as je,e as a,t as n,j as c,c as s,a as o,g as l,d as e,l as u,b as p,f as C,F as t,J as zt}from"./vendor-e04e0de5.js";function xe(ue){let m,rt,B,pt,it,X,i,M,g,ct,b,ut,dt,N,ft,ht,R,mt,gt,Y,E,kt,w,vt,_t,yt,q,J,bt,Et,j,x,wt,Q,jt,xt,St,D,de=`<code class="language-json"><span class="token property">"files.associations"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"**/templates/*.html"</span><span class="token operator">:</span> <span class="token string">"django-html"</span><span class="token punctuation">,</span>
  <span class="token property">"**/*.html"</span><span class="token operator">:</span> <span class="token string">"html"</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,Pt,S,U,It,Ot,V,fe=`<code class="language-json"><span class="token property">"beautify.language"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"html"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"htm"</span><span class="token punctuation">,</span> <span class="token string">"html"</span><span class="token punctuation">,</span> <span class="token string">"django-html"</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,Lt,h,P,Tt,z,Ct,Bt,Rt,H,he=`<code class="language-json"><span class="token property">"[django-html]"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"editor.defaultFormatter"</span><span class="token operator">:</span> <span class="token string">"HookyQR.beautify"</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,Dt,Z,Vt,Ht,A,me=`<code class="language-json"><span class="token property">"[django-html]"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"editor.defaultFormatter"</span><span class="token operator">:</span> <span class="token string">"HookyQR.beautify"</span><span class="token punctuation">,</span>
  <span class="token property">"editor.formatOnSave"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">"editor.tabSize"</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,At,I,G,Ft,Mt,F,ge=`<code class="language-json"><span class="token property">"emmet.includeLanguages"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"django-html"</span><span class="token operator">:</span> <span class="token string">"html"</span>
<span class="token punctuation">&#125;</span></code>`,$,v,_,K,Nt,tt,k,Yt,O,qt,Jt,L,Qt;return{c(){m=a("p"),rt=n("This post consolidates the information I got the information from a couple of "),B=a("abbr"),pt=n("SO"),it=n(" answers."),X=c(),i=a("ol"),M=a("li"),g=a("p"),ct=n("Install the "),b=a("a"),ut=n("Django"),dt=n(" extension. It will give you some snippets, and syntax higlighting. But most important, it will add the "),N=a("code"),ft=n("django-html"),ht=n(" filetype to "),R=a("abbr"),mt=n("VSC"),gt=c(),Y=a("li"),E=a("p"),kt=n("Install the "),w=a("a"),vt=n("Beautify"),_t=n(" extension. This will replace Prettier for those specific files"),yt=c(),q=a("li"),J=a("p"),bt=n("Open the User settings, and switch to JSON mode. You will be adding a few settings manually"),Et=c(),j=a("li"),x=a("p"),wt=n("The "),Q=a("code"),jt=n("files.associations"),xt=n(" block could be already in your settings. If it isn\u2019t, you need to add it. Otherwise add the following associations to it"),St=c(),D=a("pre"),Pt=c(),S=a("li"),U=a("p"),It=n("Tell Beautify about Django templates"),Ot=c(),V=a("pre"),Lt=c(),h=a("li"),P=a("p"),Tt=n("Replace Prettier with Beautify for Django templates. Note that "),z=a("code"),Ct=n('"prettier.disableLanguages": ["django-html"],'),Bt=n(" is no longer supported by VSC."),Rt=c(),H=a("pre"),Dt=c(),Z=a("p"),Vt=n("You can of course add more settings to that particular block; for example, mine is"),Ht=c(),A=a("pre"),At=c(),I=a("li"),G=a("p"),Ft=n("If you like emmet, which is now part of VSC by default, also add"),Mt=c(),F=a("pre"),$=c(),v=a("h2"),_=a("a"),K=a("span"),Nt=n("Prior art"),tt=c(),k=a("p"),Yt=n("I got some of the information from "),O=a("a"),qt=n("this SO answer"),Jt=n(" and "),L=a("a"),Qt=n("this other SO answer"),this.h()},l(r){m=s(r,"P",{});var f=o(m);rt=l(f,"This post consolidates the information I got the information from a couple of "),B=s(f,"ABBR",{title:!0});var Zt=o(B);pt=l(Zt,"SO"),Zt.forEach(e),it=l(f," answers."),f.forEach(e),X=u(r),i=s(r,"OL",{});var d=o(i);M=s(d,"LI",{});var Gt=o(M);g=s(Gt,"P",{});var T=o(g);ct=l(T,"Install the "),b=s(T,"A",{href:!0,rel:!0});var Kt=o(b);ut=l(Kt,"Django"),Kt.forEach(e),dt=l(T," extension. It will give you some snippets, and syntax higlighting. But most important, it will add the "),N=s(T,"CODE",{});var Wt=o(N);ft=l(Wt,"django-html"),Wt.forEach(e),ht=l(T," filetype to "),R=s(T,"ABBR",{title:!0});var Xt=o(R);mt=l(Xt,"VSC"),Xt.forEach(e),T.forEach(e),Gt.forEach(e),gt=u(d),Y=s(d,"LI",{});var $t=o(Y);E=s($t,"P",{});var et=o(E);kt=l(et,"Install the "),w=s(et,"A",{href:!0,rel:!0});var te=o(w);vt=l(te,"Beautify"),te.forEach(e),_t=l(et," extension. This will replace Prettier for those specific files"),et.forEach(e),$t.forEach(e),yt=u(d),q=s(d,"LI",{});var ee=o(q);J=s(ee,"P",{});var ae=o(J);bt=l(ae,"Open the User settings, and switch to JSON mode. You will be adding a few settings manually"),ae.forEach(e),ee.forEach(e),Et=u(d),j=s(d,"LI",{});var at=o(j);x=s(at,"P",{});var st=o(x);wt=l(st,"The "),Q=s(st,"CODE",{});var se=o(Q);jt=l(se,"files.associations"),se.forEach(e),xt=l(st," block could be already in your settings. If it isn\u2019t, you need to add it. Otherwise add the following associations to it"),st.forEach(e),St=u(at),D=s(at,"PRE",{class:!0});var ke=o(D);ke.forEach(e),at.forEach(e),Pt=u(d),S=s(d,"LI",{});var ot=o(S);U=s(ot,"P",{});var oe=o(U);It=l(oe,"Tell Beautify about Django templates"),oe.forEach(e),Ot=u(ot),V=s(ot,"PRE",{class:!0});var ve=o(V);ve.forEach(e),ot.forEach(e),Lt=u(d),h=s(d,"LI",{});var y=o(h);P=s(y,"P",{});var nt=o(P);Tt=l(nt,"Replace Prettier with Beautify for Django templates. Note that "),z=s(nt,"CODE",{});var ne=o(z);Ct=l(ne,'"prettier.disableLanguages": ["django-html"],'),ne.forEach(e),Bt=l(nt," is no longer supported by VSC."),nt.forEach(e),Rt=u(y),H=s(y,"PRE",{class:!0});var _e=o(H);_e.forEach(e),Dt=u(y),Z=s(y,"P",{});var le=o(Z);Vt=l(le,"You can of course add more settings to that particular block; for example, mine is"),le.forEach(e),Ht=u(y),A=s(y,"PRE",{class:!0});var ye=o(A);ye.forEach(e),y.forEach(e),At=u(d),I=s(d,"LI",{});var lt=o(I);G=s(lt,"P",{});var re=o(G);Ft=l(re,"If you like emmet, which is now part of VSC by default, also add"),re.forEach(e),Mt=u(lt),F=s(lt,"PRE",{class:!0});var be=o(F);be.forEach(e),lt.forEach(e),d.forEach(e),$=u(r),v=s(r,"H2",{id:!0});var Ut=o(v);_=s(Ut,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var pe=o(_);K=s(pe,"SPAN",{class:!0}),o(K).forEach(e),pe.forEach(e),Nt=l(Ut,"Prior art"),Ut.forEach(e),tt=u(r),k=s(r,"P",{});var W=o(k);Yt=l(W,"I got some of the information from "),O=s(W,"A",{href:!0,rel:!0});var ie=o(O);qt=l(ie,"this SO answer"),ie.forEach(e),Jt=l(W," and "),L=s(W,"A",{href:!0,rel:!0});var ce=o(L);Qt=l(ce,"this other SO answer"),ce.forEach(e),W.forEach(e),this.h()},h(){p(B,"title","Stack Overflow"),p(b,"href","https://github.com/vscode-django/vscode-django"),p(b,"rel","nofollow"),p(R,"title","Visual Studio Code"),p(w,"href","https://github.com/HookyQR/VSCodeBeautify"),p(w,"rel","nofollow"),p(D,"class","language-json"),p(V,"class","language-json"),p(H,"class","language-json"),p(A,"class","language-json"),p(F,"class","language-json"),p(K,"class","icon icon-link"),p(_,"aria-hidden","true"),p(_,"tabindex","-1"),p(_,"href","#prior-art"),p(v,"id","prior-art"),p(O,"href","https://stackoverflow.com/questions/42170561/vscode-html-autoformat-on-django-template"),p(O,"rel","nofollow"),p(L,"href","https://stackoverflow.com/questions/55175822/there-is-no-document-formatter-for-django-html-files-installed/63091040#63091040"),p(L,"rel","nofollow")},m(r,f){C(r,m,f),t(m,rt),t(m,B),t(B,pt),t(m,it),C(r,X,f),C(r,i,f),t(i,M),t(M,g),t(g,ct),t(g,b),t(b,ut),t(g,dt),t(g,N),t(N,ft),t(g,ht),t(g,R),t(R,mt),t(i,gt),t(i,Y),t(Y,E),t(E,kt),t(E,w),t(w,vt),t(E,_t),t(i,yt),t(i,q),t(q,J),t(J,bt),t(i,Et),t(i,j),t(j,x),t(x,wt),t(x,Q),t(Q,jt),t(x,xt),t(j,St),t(j,D),D.innerHTML=de,t(i,Pt),t(i,S),t(S,U),t(U,It),t(S,Ot),t(S,V),V.innerHTML=fe,t(i,Lt),t(i,h),t(h,P),t(P,Tt),t(P,z),t(z,Ct),t(P,Bt),t(h,Rt),t(h,H),H.innerHTML=he,t(h,Dt),t(h,Z),t(Z,Vt),t(h,Ht),t(h,A),A.innerHTML=me,t(i,At),t(i,I),t(I,G),t(G,Ft),t(I,Mt),t(I,F),F.innerHTML=ge,C(r,$,f),C(r,v,f),t(v,_),t(_,K),t(v,Nt),C(r,tt,f),C(r,k,f),t(k,Yt),t(k,O),t(O,qt),t(k,Jt),t(k,L),t(L,Qt)},p:zt,i:zt,o:zt,d(r){r&&e(m),r&&e(X),r&&e(i),r&&e($),r&&e(v),r&&e(tt),r&&e(k)}}}const Pe={excerpt:"Prettier autoformatting screws up Django html templates in Visual Studio Code. For example, it puts tags on the same line when they shouldn't be. The fix is pretty simple and involves a couple of different formatting extension.",date:"2022-03-24T00:00:00.000Z",published:!0,archived:!1,prev:"installing-python-on-mac-os-x-in-2022",next:"reordering-audio-files-in-a-fat-usb-stick",title:"Fixing autoformatting Django templates in VS Code",permalink:"/blog/fixing-autoformatting-django-templates-in-visual-studio-code",tags:["django","python","visual studio code"]};class Ie extends Ee{constructor(m){super();we(this,m,null,xe,je,{})}}export{Ie as default,Pe as metadata};
