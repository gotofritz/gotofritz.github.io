import{S as tr,i as ar,s as or,D as No,x as dr,y as sr,z as rr,A as ir,B as Bs,r as nr,p as lr,C as hr,L as Gs,e as o,t as r,k as v,c as d,a as s,h as i,d as t,m as _,b as T,g as l,F as e,n as cr}from"../../chunks/index-5f3bee99.js";import{P as mr}from"../../chunks/_post-1d61ba86.js";import"../../chunks/Header-5bd94491.js";function fr(R){let f,k,M,I,D,y,z,Ks=`<code class="language-sh">convert *.png[400x400] -splice 0x10 \\
    -background &quot;#ffffff&quot;  -append  -crop -0+10 output.png</code>`,Ht,w,N,Ut,O,Vt,Q,Wt,U,Xt,V,Zt,W,ea,X,ta,Z,aa,ee,oa,te,da,ae,sa,oe,ra,de,ia,se,na,Ct,q,la,Lt,A,ha,Pt,H,Ns=`<code class="language-sh">convert *.png -gravity south -splice 0x111 \\
    -shave 0x111 -resize 400x400  -splice 0x10 -background &quot;#ffffff&quot;  \\
    -append  -crop -0+10 output.png</code>`,jt,c,re,ca,ie,ma,ne,fa,le,pa,he,ua,ce,ga,me,va,fe,_a,pe,Da,ue,wa,ge,xa,ve,ba,_e,Ea,De,ya,we,Ta,xe,ka,be,Ma,Ee,Ia,ye,za,Te,Ha,ke,Ca,Me,La,$t,F,Pa,Rt,S,ja,qt,C,Os=`<code class="language-sh">convert *.png -gravity south -splice 0x111 \\
    -shave 0x111 -resize 400x400  -set delay 300 output.gif</code>`,At,u,Ie,$a,ze,Ra,He,qa,Ce,Aa,Le,Fa,Pe,Sa,je,Ya,$e,Ba,Re,Ga,qe,Ja,Ae,Ka,Fe,Na,Se,Oa,Ye,Qa,Be,Ua,Ge,Va,Ft,Y,Wa,St,B,Xa,Yt,L,Qs=`<code class="language-sh">convert *.png -resize 800x500^ -gravity center \\
    -crop  800x500+0+0 +repage -set delay 300 output.gif</code>`,Bt,g,Je,Za,Ke,eo,Ne,to,Oe,ao,Qe,oo,Ue,so,Ve,ro,We,io,Xe,no,Ze,lo,et,ho,tt,co,at,mo,ot,fo,dt,po,st,uo,Gt,G,go,Jt,J,vo,Kt,P,Us=`<code class="language-sh">convert *.png -gravity south \\
    -splice 0x111 -shave 0x111 -resize 400x400 converted.png
montage converted*.png -mode concatenate  -tile 2x2  output.png</code>`,Nt,h,rt,_o,it,Do,nt,wo,lt,xo,ht,bo,ct,Eo,mt,yo,ft,To,pt,ko,ut,Mo,gt,Io,vt,zo,_t,Ho,Dt,Co,wt,Lo,xt,Po,bt,jo,Et,$o,yt,Ro,Tt,qo,kt,Ao,Mt,Fo,It,So,zt,Yo,Ot,K,Bo,Qt,j,$,Go,Jo;return{c(){f=o("h2"),k=r("Combining images vertically with a line separating them"),M=v(),I=o("p"),D=r("This is useful for combining a few images into a single vertical strip, with a 10px white border between each image, like the portrait photos from photo boots."),y=v(),z=o("pre"),Ht=v(),w=o("dl"),N=o("dt"),Ut=r("convert"),O=o("dd"),Vt=r("calls up one of the ImageMagick commands, convert"),Q=o("dt"),Wt=r("*.png[400x400] "),U=o("dd"),Xt=r("an expression using wildcards to match all png images in the current folder, and resize each as it is read so that neither width and height are greater than 400px"),V=o("dt"),Zt=r("-splice 0x10"),W=o("dd"),ea=r("add a 10px vertical border to each image"),X=o("dt"),ta=r('-background "#ffffff"'),Z=o("dd"),aa=r("make that border white (using HTML color ocde)"),ee=o("dt"),oa=r("-append"),te=o("dd"),da=r("combine images vertically - use +append to combine them horizontally"),ae=o("dt"),sa=r("-crop -0+10"),oe=o("dd"),ra=r("crop the top 10 pixels from the combined image, as we want the borders only between images"),de=o("dt"),ia=r("output.png"),se=o("dd"),na=r("this is the result image file. It could just as easily be a .jpg"),Ct=v(),q=o("h2"),la=r("Removing window artefacts from the top of the images first"),Lt=v(),A=o("p"),ha=r("If you have, say, a bunch of screenshots with the address bar etc at the top, you need to modify the command to get rid of it first. This time you can\u2019t use the shortcut resize."),Pt=v(),H=o("pre"),jt=v(),c=o("dl"),re=o("dt"),ca=r("convert"),ie=o("dd"),ma=r("calls up one of the ImageMagick commands, convert"),ne=o("dt"),fa=r("*.png "),le=o("dd"),pa=r("an expression using wildcards to match all png images in the current folder"),he=o("dt"),ua=r("-gravity south"),ce=o("dd"),ga=r("aligns the next command(s) bottom"),me=o("dt"),va=r("-splice 0x111"),fe=o("dd"),_a=r("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),pe=o("dt"),Da=r("-shave 0x111"),ue=o("dd"),wa=r("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),ge=o("dt"),xa=r("-resize 400x400 "),ve=o("dd"),ba=r("now i can resize so that the image does not exceed 400 px either direction. From now on carry on as for previous command"),_e=o("dt"),Ea=r("-splice 0x10"),De=o("dd"),ya=r("add a 10px vertical border to each image"),we=o("dt"),Ta=r('-background "#ffffff"'),xe=o("dd"),ka=r("make that border white (using HTML color ocde)"),be=o("dt"),Ma=r("-append"),Ee=o("dd"),Ia=r("combine images vertically - use +append to combine them horizontally"),ye=o("dt"),za=r("-crop -0+10"),Te=o("dd"),Ha=r("crop the top 10 pixels from the combined image, as we want the borders only between images"),ke=o("dt"),Ca=r("output.png"),Me=o("dd"),La=r("this is the result image file. It could just as easily be a .jpg"),$t=v(),F=o("h2"),Pa=r("Combining images into an animated gif"),Rt=v(),S=o("p"),ja=r("If instead you\u2019d rather create an animated gif, here\u2019s the simplest way to do it - without any of the powerful options that ImageMagick offers."),qt=v(),C=o("pre"),At=v(),u=o("dl"),Ie=o("dt"),$a=r("convert"),ze=o("dd"),Ra=r("calls up one of the ImageMagick commands, "),He=o("dt"),qa=r("*.png "),Ce=o("dd"),Aa=r("an expression using wildcards to match all png images in the current folder"),Le=o("dt"),Fa=r("-gravity south"),Pe=o("dd"),Sa=r("aligns the next command(s) bottom"),je=o("dt"),Ya=r("-splice 0x111"),$e=o("dd"),Ba=r("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Re=o("dt"),Ga=r("-shave 0x111"),qe=o("dd"),Ja=r("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Ae=o("dt"),Ka=r("-resize 400x400 "),Fe=o("dd"),Na=r("now i can resize so that the image does not exceed 400 px either direction"),Se=o("dt"),Oa=r("-set delay 300"),Ye=o("dd"),Qa=r("adds a three seconds delay between all images"),Be=o("dt"),Ua=r("output.gif"),Ge=o("dd"),Va=r("that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Ft=v(),Y=o("h2"),Wa=r("Cropping a set of images to the same size and animating them"),St=v(),B=o("p"),Xa=r("If the images in the gif are of different size you may want to do something about that. Here they are cropped to a minimum common size, the extra pixels discarded."),Yt=v(),L=o("pre"),Bt=v(),g=o("dl"),Je=o("dt"),Za=r("convert"),Ke=o("dd"),eo=r("calls up one of the ImageMagick commands, "),Ne=o("dt"),to=r("*.png "),Oe=o("dd"),ao=r("an expression using wildcards to match all png images in the current folder"),Qe=o("dt"),oo=r("-resize 800x500^"),Ue=o("dd"),so=r("the ^ after the dimensions means those are the minimum sizes rather then the maximum"),Ve=o("dt"),ro=r("-gravity center"),We=o("dd"),io=r("aligns the next command(s)"),Xe=o("dt"),no=r("-crop  800x500+0+0"),Ze=o("dd"),lo=r("crops to 800x500, with no offest (0,0)"),et=o("dt"),ho=r("+repage"),tt=o("dd"),co=r("resets the origin after the crop"),at=o("dt"),mo=r("-set delay 300"),ot=o("dd"),fo=r("adds a three seconds delay between all images"),dt=o("dt"),po=r("output.gif"),st=o("dd"),uo=r("that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Gt=v(),G=o("h2"),go=r("Arranging images in a grid"),Jt=v(),J=o("p"),vo=r("This is actually two commands, one after the other - one to resize and crop the images, the other to arrange them."),Kt=v(),P=o("pre"),Nt=v(),h=o("dl"),rt=o("dt"),_o=r("convert"),it=o("dd"),Do=r("calls up one of the ImageMagick commands, convert"),nt=o("dt"),wo=r("*.png "),lt=o("dd"),xo=r("an expression using wildcards to match all png images in the current folder"),ht=o("dt"),bo=r("-gravity south"),ct=o("dd"),Eo=r("aligns the next command(s) bottom"),mt=o("dt"),yo=r("-splice 0x111"),ft=o("dd"),To=r("because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),pt=o("dt"),ko=r("-shave 0x111"),ut=o("dd"),Mo=r("This removes 111px from the top and bottom; -shave is easier to work with than -crop"),gt=o("dt"),Io=r("-resize 400x400 "),vt=o("dd"),zo=r("now i can resize so that the image does not exceed 400 px either direction"),_t=o("dt"),Ho=r("converted.png"),Dt=o("dd"),Co=r("for each input image, it creates a correspoding output image in the current folder named converted-1.png, converted-2.png..."),wt=o("dt"),Lo=r("montage"),xt=o("dd"),Po=r("calls up one of the ImageMagick commands, montage"),bt=o("dt"),jo=r("converted*.png"),Et=o("dd"),$o=r("this time only match the images whose name start with 'converted', i.e. the ones created by the previous command"),yt=o("dt"),Ro=r("-mode concatenate"),Tt=o("dd"),qo=r("arranges them in a grid"),kt=o("dt"),Ao=r("-tile 2x2"),Mt=o("dd"),Fo=r("in this particular case, it is a 2x2 grid as I only had four images. You can use x2 or 2x to keep the number of rows and columns respectively fixed at 2, and the other dimension filled in with however many images you have"),It=o("dt"),So=r("output.png"),zt=o("dd"),Yo=r("...and here comes the image"),Ot=v(),K=o("h2"),Bo=r("More"),Qt=v(),j=o("p"),$=o("a"),Go=r("More ImageMagick commands"),Jo=r("."),this.h()},l(a){f=d(a,"H2",{});var n=s(f);k=i(n,"Combining images vertically with a line separating them"),n.forEach(t),M=_(a),I=d(a,"P",{});var Oo=s(I);D=i(Oo,"This is useful for combining a few images into a single vertical strip, with a 10px white border between each image, like the portrait photos from photo boots."),Oo.forEach(t),y=_(a),z=d(a,"PRE",{class:!0});var Vs=s(z);Vs.forEach(t),Ht=_(a),w=d(a,"DL",{class:!0});var E=s(w);N=d(E,"DT",{});var Qo=s(N);Ut=i(Qo,"convert"),Qo.forEach(t),O=d(E,"DD",{});var Uo=s(O);Vt=i(Uo,"calls up one of the ImageMagick commands, convert"),Uo.forEach(t),Q=d(E,"DT",{});var Vo=s(Q);Wt=i(Vo,"*.png[400x400] "),Vo.forEach(t),U=d(E,"DD",{});var Wo=s(U);Xt=i(Wo,"an expression using wildcards to match all png images in the current folder, and resize each as it is read so that neither width and height are greater than 400px"),Wo.forEach(t),V=d(E,"DT",{});var Xo=s(V);Zt=i(Xo,"-splice 0x10"),Xo.forEach(t),W=d(E,"DD",{});var Zo=s(W);ea=i(Zo,"add a 10px vertical border to each image"),Zo.forEach(t),X=d(E,"DT",{});var ed=s(X);ta=i(ed,'-background "#ffffff"'),ed.forEach(t),Z=d(E,"DD",{});var td=s(Z);aa=i(td,"make that border white (using HTML color ocde)"),td.forEach(t),ee=d(E,"DT",{});var ad=s(ee);oa=i(ad,"-append"),ad.forEach(t),te=d(E,"DD",{});var od=s(te);da=i(od,"combine images vertically - use +append to combine them horizontally"),od.forEach(t),ae=d(E,"DT",{});var dd=s(ae);sa=i(dd,"-crop -0+10"),dd.forEach(t),oe=d(E,"DD",{});var sd=s(oe);ra=i(sd,"crop the top 10 pixels from the combined image, as we want the borders only between images"),sd.forEach(t),de=d(E,"DT",{});var rd=s(de);ia=i(rd,"output.png"),rd.forEach(t),se=d(E,"DD",{});var id=s(se);na=i(id,"this is the result image file. It could just as easily be a .jpg"),id.forEach(t),E.forEach(t),Ct=_(a),q=d(a,"H2",{});var nd=s(q);la=i(nd,"Removing window artefacts from the top of the images first"),nd.forEach(t),Lt=_(a),A=d(a,"P",{});var ld=s(A);ha=i(ld,"If you have, say, a bunch of screenshots with the address bar etc at the top, you need to modify the command to get rid of it first. This time you can\u2019t use the shortcut resize."),ld.forEach(t),Pt=_(a),H=d(a,"PRE",{class:!0});var Ws=s(H);Ws.forEach(t),jt=_(a),c=d(a,"DL",{class:!0});var p=s(c);re=d(p,"DT",{});var hd=s(re);ca=i(hd,"convert"),hd.forEach(t),ie=d(p,"DD",{});var cd=s(ie);ma=i(cd,"calls up one of the ImageMagick commands, convert"),cd.forEach(t),ne=d(p,"DT",{});var md=s(ne);fa=i(md,"*.png "),md.forEach(t),le=d(p,"DD",{});var fd=s(le);pa=i(fd,"an expression using wildcards to match all png images in the current folder"),fd.forEach(t),he=d(p,"DT",{});var pd=s(he);ua=i(pd,"-gravity south"),pd.forEach(t),ce=d(p,"DD",{});var ud=s(ce);ga=i(ud,"aligns the next command(s) bottom"),ud.forEach(t),me=d(p,"DT",{});var gd=s(me);va=i(gd,"-splice 0x111"),gd.forEach(t),fe=d(p,"DD",{});var vd=s(fe);_a=i(vd,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),vd.forEach(t),pe=d(p,"DT",{});var _d=s(pe);Da=i(_d,"-shave 0x111"),_d.forEach(t),ue=d(p,"DD",{});var Dd=s(ue);wa=i(Dd,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Dd.forEach(t),ge=d(p,"DT",{});var wd=s(ge);xa=i(wd,"-resize 400x400 "),wd.forEach(t),ve=d(p,"DD",{});var xd=s(ve);ba=i(xd,"now i can resize so that the image does not exceed 400 px either direction. From now on carry on as for previous command"),xd.forEach(t),_e=d(p,"DT",{});var bd=s(_e);Ea=i(bd,"-splice 0x10"),bd.forEach(t),De=d(p,"DD",{});var Ed=s(De);ya=i(Ed,"add a 10px vertical border to each image"),Ed.forEach(t),we=d(p,"DT",{});var yd=s(we);Ta=i(yd,'-background "#ffffff"'),yd.forEach(t),xe=d(p,"DD",{});var Td=s(xe);ka=i(Td,"make that border white (using HTML color ocde)"),Td.forEach(t),be=d(p,"DT",{});var kd=s(be);Ma=i(kd,"-append"),kd.forEach(t),Ee=d(p,"DD",{});var Md=s(Ee);Ia=i(Md,"combine images vertically - use +append to combine them horizontally"),Md.forEach(t),ye=d(p,"DT",{});var Id=s(ye);za=i(Id,"-crop -0+10"),Id.forEach(t),Te=d(p,"DD",{});var zd=s(Te);Ha=i(zd,"crop the top 10 pixels from the combined image, as we want the borders only between images"),zd.forEach(t),ke=d(p,"DT",{});var Hd=s(ke);Ca=i(Hd,"output.png"),Hd.forEach(t),Me=d(p,"DD",{});var Cd=s(Me);La=i(Cd,"this is the result image file. It could just as easily be a .jpg"),Cd.forEach(t),p.forEach(t),$t=_(a),F=d(a,"H2",{});var Ld=s(F);Pa=i(Ld,"Combining images into an animated gif"),Ld.forEach(t),Rt=_(a),S=d(a,"P",{});var Pd=s(S);ja=i(Pd,"If instead you\u2019d rather create an animated gif, here\u2019s the simplest way to do it - without any of the powerful options that ImageMagick offers."),Pd.forEach(t),qt=_(a),C=d(a,"PRE",{class:!0});var Xs=s(C);Xs.forEach(t),At=_(a),u=d(a,"DL",{class:!0});var x=s(u);Ie=d(x,"DT",{});var jd=s(Ie);$a=i(jd,"convert"),jd.forEach(t),ze=d(x,"DD",{});var $d=s(ze);Ra=i($d,"calls up one of the ImageMagick commands, "),$d.forEach(t),He=d(x,"DT",{});var Rd=s(He);qa=i(Rd,"*.png "),Rd.forEach(t),Ce=d(x,"DD",{});var qd=s(Ce);Aa=i(qd,"an expression using wildcards to match all png images in the current folder"),qd.forEach(t),Le=d(x,"DT",{});var Ad=s(Le);Fa=i(Ad,"-gravity south"),Ad.forEach(t),Pe=d(x,"DD",{});var Fd=s(Pe);Sa=i(Fd,"aligns the next command(s) bottom"),Fd.forEach(t),je=d(x,"DT",{});var Sd=s(je);Ya=i(Sd,"-splice 0x111"),Sd.forEach(t),$e=d(x,"DD",{});var Yd=s($e);Ba=i(Yd,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Yd.forEach(t),Re=d(x,"DT",{});var Bd=s(Re);Ga=i(Bd,"-shave 0x111"),Bd.forEach(t),qe=d(x,"DD",{});var Gd=s(qe);Ja=i(Gd,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Gd.forEach(t),Ae=d(x,"DT",{});var Jd=s(Ae);Ka=i(Jd,"-resize 400x400 "),Jd.forEach(t),Fe=d(x,"DD",{});var Kd=s(Fe);Na=i(Kd,"now i can resize so that the image does not exceed 400 px either direction"),Kd.forEach(t),Se=d(x,"DT",{});var Nd=s(Se);Oa=i(Nd,"-set delay 300"),Nd.forEach(t),Ye=d(x,"DD",{});var Od=s(Ye);Qa=i(Od,"adds a three seconds delay between all images"),Od.forEach(t),Be=d(x,"DT",{});var Qd=s(Be);Ua=i(Qd,"output.gif"),Qd.forEach(t),Ge=d(x,"DD",{});var Ud=s(Ge);Va=i(Ud,"that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),Ud.forEach(t),x.forEach(t),Ft=_(a),Y=d(a,"H2",{});var Vd=s(Y);Wa=i(Vd,"Cropping a set of images to the same size and animating them"),Vd.forEach(t),St=_(a),B=d(a,"P",{});var Wd=s(B);Xa=i(Wd,"If the images in the gif are of different size you may want to do something about that. Here they are cropped to a minimum common size, the extra pixels discarded."),Wd.forEach(t),Yt=_(a),L=d(a,"PRE",{class:!0});var Zs=s(L);Zs.forEach(t),Bt=_(a),g=d(a,"DL",{class:!0});var b=s(g);Je=d(b,"DT",{});var Xd=s(Je);Za=i(Xd,"convert"),Xd.forEach(t),Ke=d(b,"DD",{});var Zd=s(Ke);eo=i(Zd,"calls up one of the ImageMagick commands, "),Zd.forEach(t),Ne=d(b,"DT",{});var es=s(Ne);to=i(es,"*.png "),es.forEach(t),Oe=d(b,"DD",{});var ts=s(Oe);ao=i(ts,"an expression using wildcards to match all png images in the current folder"),ts.forEach(t),Qe=d(b,"DT",{});var as=s(Qe);oo=i(as,"-resize 800x500^"),as.forEach(t),Ue=d(b,"DD",{});var os=s(Ue);so=i(os,"the ^ after the dimensions means those are the minimum sizes rather then the maximum"),os.forEach(t),Ve=d(b,"DT",{});var ds=s(Ve);ro=i(ds,"-gravity center"),ds.forEach(t),We=d(b,"DD",{});var ss=s(We);io=i(ss,"aligns the next command(s)"),ss.forEach(t),Xe=d(b,"DT",{});var rs=s(Xe);no=i(rs,"-crop  800x500+0+0"),rs.forEach(t),Ze=d(b,"DD",{});var is=s(Ze);lo=i(is,"crops to 800x500, with no offest (0,0)"),is.forEach(t),et=d(b,"DT",{});var ns=s(et);ho=i(ns,"+repage"),ns.forEach(t),tt=d(b,"DD",{});var ls=s(tt);co=i(ls,"resets the origin after the crop"),ls.forEach(t),at=d(b,"DT",{});var hs=s(at);mo=i(hs,"-set delay 300"),hs.forEach(t),ot=d(b,"DD",{});var cs=s(ot);fo=i(cs,"adds a three seconds delay between all images"),cs.forEach(t),dt=d(b,"DT",{});var ms=s(dt);po=i(ms,"output.gif"),ms.forEach(t),st=d(b,"DD",{});var fs=s(st);uo=i(fs,"that's it - because a list of images and a delay were supplied, ImageMagick automatically converts to an animated gif."),fs.forEach(t),b.forEach(t),Gt=_(a),G=d(a,"H2",{});var ps=s(G);go=i(ps,"Arranging images in a grid"),ps.forEach(t),Jt=_(a),J=d(a,"P",{});var us=s(J);vo=i(us,"This is actually two commands, one after the other - one to resize and crop the images, the other to arrange them."),us.forEach(t),Kt=_(a),P=d(a,"PRE",{class:!0});var er=s(P);er.forEach(t),Nt=_(a),h=d(a,"DL",{class:!0});var m=s(h);rt=d(m,"DT",{});var gs=s(rt);_o=i(gs,"convert"),gs.forEach(t),it=d(m,"DD",{});var vs=s(it);Do=i(vs,"calls up one of the ImageMagick commands, convert"),vs.forEach(t),nt=d(m,"DT",{});var _s=s(nt);wo=i(_s,"*.png "),_s.forEach(t),lt=d(m,"DD",{});var Ds=s(lt);xo=i(Ds,"an expression using wildcards to match all png images in the current folder"),Ds.forEach(t),ht=d(m,"DT",{});var ws=s(ht);bo=i(ws,"-gravity south"),ws.forEach(t),ct=d(m,"DD",{});var xs=s(ct);Eo=i(xs,"aligns the next command(s) bottom"),xs.forEach(t),mt=d(m,"DT",{});var bs=s(mt);yo=i(bs,"-splice 0x111"),bs.forEach(t),ft=d(m,"DD",{});var Es=s(ft);To=i(Es,"because I need to remove 111px from the top of the image (that's the Chrome toolbar on a Mac - different values would apply for different situations), it turns out to be easier to add the same amount to the bottom, then deal with top and bottom as one with the next command"),Es.forEach(t),pt=d(m,"DT",{});var ys=s(pt);ko=i(ys,"-shave 0x111"),ys.forEach(t),ut=d(m,"DD",{});var Ts=s(ut);Mo=i(Ts,"This removes 111px from the top and bottom; -shave is easier to work with than -crop"),Ts.forEach(t),gt=d(m,"DT",{});var ks=s(gt);Io=i(ks,"-resize 400x400 "),ks.forEach(t),vt=d(m,"DD",{});var Ms=s(vt);zo=i(Ms,"now i can resize so that the image does not exceed 400 px either direction"),Ms.forEach(t),_t=d(m,"DT",{});var Is=s(_t);Ho=i(Is,"converted.png"),Is.forEach(t),Dt=d(m,"DD",{});var zs=s(Dt);Co=i(zs,"for each input image, it creates a correspoding output image in the current folder named converted-1.png, converted-2.png..."),zs.forEach(t),wt=d(m,"DT",{});var Hs=s(wt);Lo=i(Hs,"montage"),Hs.forEach(t),xt=d(m,"DD",{});var Cs=s(xt);Po=i(Cs,"calls up one of the ImageMagick commands, montage"),Cs.forEach(t),bt=d(m,"DT",{});var Ls=s(bt);jo=i(Ls,"converted*.png"),Ls.forEach(t),Et=d(m,"DD",{});var Ps=s(Et);$o=i(Ps,"this time only match the images whose name start with 'converted', i.e. the ones created by the previous command"),Ps.forEach(t),yt=d(m,"DT",{});var js=s(yt);Ro=i(js,"-mode concatenate"),js.forEach(t),Tt=d(m,"DD",{});var $s=s(Tt);qo=i($s,"arranges them in a grid"),$s.forEach(t),kt=d(m,"DT",{});var Rs=s(kt);Ao=i(Rs,"-tile 2x2"),Rs.forEach(t),Mt=d(m,"DD",{});var qs=s(Mt);Fo=i(qs,"in this particular case, it is a 2x2 grid as I only had four images. You can use x2 or 2x to keep the number of rows and columns respectively fixed at 2, and the other dimension filled in with however many images you have"),qs.forEach(t),It=d(m,"DT",{});var As=s(It);So=i(As,"output.png"),As.forEach(t),zt=d(m,"DD",{});var Fs=s(zt);Yo=i(Fs,"...and here comes the image"),Fs.forEach(t),m.forEach(t),Ot=_(a),K=d(a,"H2",{});var Ss=s(K);Bo=i(Ss,"More"),Ss.forEach(t),Qt=_(a),j=d(a,"P",{});var Ko=s(j);$=d(Ko,"A",{href:!0,rel:!0});var Ys=s($);Go=i(Ys,"More ImageMagick commands"),Ys.forEach(t),Jo=i(Ko,"."),Ko.forEach(t),this.h()},h(){T(z,"class","language-sh"),T(w,"class","code-breakdown"),T(H,"class","language-sh"),T(c,"class","code-breakdown"),T(C,"class","language-sh"),T(u,"class","code-breakdown"),T(L,"class","language-sh"),T(g,"class","code-breakdown"),T(P,"class","language-sh"),T(h,"class","code-breakdown"),T($,"href","http://www.imagemagick.org/script/command-line-processing.php#anatomy"),T($,"rel","nofollow")},m(a,n){l(a,f,n),e(f,k),l(a,M,n),l(a,I,n),e(I,D),l(a,y,n),l(a,z,n),z.innerHTML=Ks,l(a,Ht,n),l(a,w,n),e(w,N),e(N,Ut),e(w,O),e(O,Vt),e(w,Q),e(Q,Wt),e(w,U),e(U,Xt),e(w,V),e(V,Zt),e(w,W),e(W,ea),e(w,X),e(X,ta),e(w,Z),e(Z,aa),e(w,ee),e(ee,oa),e(w,te),e(te,da),e(w,ae),e(ae,sa),e(w,oe),e(oe,ra),e(w,de),e(de,ia),e(w,se),e(se,na),l(a,Ct,n),l(a,q,n),e(q,la),l(a,Lt,n),l(a,A,n),e(A,ha),l(a,Pt,n),l(a,H,n),H.innerHTML=Ns,l(a,jt,n),l(a,c,n),e(c,re),e(re,ca),e(c,ie),e(ie,ma),e(c,ne),e(ne,fa),e(c,le),e(le,pa),e(c,he),e(he,ua),e(c,ce),e(ce,ga),e(c,me),e(me,va),e(c,fe),e(fe,_a),e(c,pe),e(pe,Da),e(c,ue),e(ue,wa),e(c,ge),e(ge,xa),e(c,ve),e(ve,ba),e(c,_e),e(_e,Ea),e(c,De),e(De,ya),e(c,we),e(we,Ta),e(c,xe),e(xe,ka),e(c,be),e(be,Ma),e(c,Ee),e(Ee,Ia),e(c,ye),e(ye,za),e(c,Te),e(Te,Ha),e(c,ke),e(ke,Ca),e(c,Me),e(Me,La),l(a,$t,n),l(a,F,n),e(F,Pa),l(a,Rt,n),l(a,S,n),e(S,ja),l(a,qt,n),l(a,C,n),C.innerHTML=Os,l(a,At,n),l(a,u,n),e(u,Ie),e(Ie,$a),e(u,ze),e(ze,Ra),e(u,He),e(He,qa),e(u,Ce),e(Ce,Aa),e(u,Le),e(Le,Fa),e(u,Pe),e(Pe,Sa),e(u,je),e(je,Ya),e(u,$e),e($e,Ba),e(u,Re),e(Re,Ga),e(u,qe),e(qe,Ja),e(u,Ae),e(Ae,Ka),e(u,Fe),e(Fe,Na),e(u,Se),e(Se,Oa),e(u,Ye),e(Ye,Qa),e(u,Be),e(Be,Ua),e(u,Ge),e(Ge,Va),l(a,Ft,n),l(a,Y,n),e(Y,Wa),l(a,St,n),l(a,B,n),e(B,Xa),l(a,Yt,n),l(a,L,n),L.innerHTML=Qs,l(a,Bt,n),l(a,g,n),e(g,Je),e(Je,Za),e(g,Ke),e(Ke,eo),e(g,Ne),e(Ne,to),e(g,Oe),e(Oe,ao),e(g,Qe),e(Qe,oo),e(g,Ue),e(Ue,so),e(g,Ve),e(Ve,ro),e(g,We),e(We,io),e(g,Xe),e(Xe,no),e(g,Ze),e(Ze,lo),e(g,et),e(et,ho),e(g,tt),e(tt,co),e(g,at),e(at,mo),e(g,ot),e(ot,fo),e(g,dt),e(dt,po),e(g,st),e(st,uo),l(a,Gt,n),l(a,G,n),e(G,go),l(a,Jt,n),l(a,J,n),e(J,vo),l(a,Kt,n),l(a,P,n),P.innerHTML=Us,l(a,Nt,n),l(a,h,n),e(h,rt),e(rt,_o),e(h,it),e(it,Do),e(h,nt),e(nt,wo),e(h,lt),e(lt,xo),e(h,ht),e(ht,bo),e(h,ct),e(ct,Eo),e(h,mt),e(mt,yo),e(h,ft),e(ft,To),e(h,pt),e(pt,ko),e(h,ut),e(ut,Mo),e(h,gt),e(gt,Io),e(h,vt),e(vt,zo),e(h,_t),e(_t,Ho),e(h,Dt),e(Dt,Co),e(h,wt),e(wt,Lo),e(h,xt),e(xt,Po),e(h,bt),e(bt,jo),e(h,Et),e(Et,$o),e(h,yt),e(yt,Ro),e(h,Tt),e(Tt,qo),e(h,kt),e(kt,Ao),e(h,Mt),e(Mt,Fo),e(h,It),e(It,So),e(h,zt),e(zt,Yo),l(a,Ot,n),l(a,K,n),e(K,Bo),l(a,Qt,n),l(a,j,n),e(j,$),e($,Go),e(j,Jo)},p:cr,d(a){a&&t(f),a&&t(M),a&&t(I),a&&t(y),a&&t(z),a&&t(Ht),a&&t(w),a&&t(Ct),a&&t(q),a&&t(Lt),a&&t(A),a&&t(Pt),a&&t(H),a&&t(jt),a&&t(c),a&&t($t),a&&t(F),a&&t(Rt),a&&t(S),a&&t(qt),a&&t(C),a&&t(At),a&&t(u),a&&t(Ft),a&&t(Y),a&&t(St),a&&t(B),a&&t(Yt),a&&t(L),a&&t(Bt),a&&t(g),a&&t(Gt),a&&t(G),a&&t(Jt),a&&t(J),a&&t(Kt),a&&t(P),a&&t(Nt),a&&t(h),a&&t(Ot),a&&t(K),a&&t(Qt),a&&t(j)}}}function pr(R){let f,k;const M=[R[0],Js];let I={$$slots:{default:[fr]},$$scope:{ctx:R}};for(let D=0;D<M.length;D+=1)I=No(I,M[D]);return f=new mr({props:I}),{c(){dr(f.$$.fragment)},l(D){sr(f.$$.fragment,D)},m(D,y){rr(f,D,y),k=!0},p(D,[y]){const z=y&1?ir(M,[y&1&&Bs(D[0]),y&0&&Bs(Js)]):{};y&2&&(z.$$scope={dirty:y,ctx:D}),f.$set(z)},i(D){k||(nr(f.$$.fragment,D),k=!0)},o(D){lr(f.$$.fragment,D),k=!1},d(D){hr(f,D)}}}const Js={date:"2011-12-22 12:34",title:"Combining images with ImageMagick",prev:"google-apps-script-boilerplate",next:"change-title-cmd-window",excerpt:'Assorted <a href="http://www.imagemagick.org/script/index.php">ImageMagick</a> commands for combining images',tags:["imagemagick"]};function ur(R,f,k){return R.$$set=M=>{k(0,f=No(No({},f),Gs(M)))},f=Gs(f),[f]}class Dr extends tr{constructor(f){super(),ar(this,f,ur,pr,or,{})}}export{Dr as default,Js as metadata};
