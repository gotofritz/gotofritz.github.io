import{S as be,i as Ee,s as je,D as Qt,x as xe,y as Pe,z as Se,A as Ie,B as ie,r as Oe,p as Le,C as Ce,L as ce,e as a,t as o,k as u,c as s,a as n,h as l,d as e,m as d,b as f,g as R,F as t,n as Te}from"../../chunks/index-5f3bee99.js";import{P as Be}from"../../chunks/_post-1d61ba86.js";import"../../chunks/Header-5bd94491.js";function De(V){let r,v,m,E,c,g,i,q,y,it,j,ct,ut,Q,dt,ft,H,ht,mt,z,x,gt,P,_t,kt,vt,J,U,yt,wt,S,I,bt,Z,Et,jt,xt,$,de=`<code class="language-json"><span class="token property">"files.associations"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"**/templates/*.html"</span><span class="token operator">:</span> <span class="token string">"django-html"</span><span class="token punctuation">,</span>
  <span class="token property">"**/*.html"</span><span class="token operator">:</span> <span class="token string">"html"</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,Pt,O,G,St,It,A,fe=`<code class="language-json"><span class="token property">"beautify.language"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"html"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"htm"</span><span class="token punctuation">,</span> <span class="token string">"html"</span><span class="token punctuation">,</span> <span class="token string">"django-html"</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,Ot,k,L,Lt,K,Ct,Tt,Bt,F,he=`<code class="language-json"><span class="token property">"[django-html]"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"editor.defaultFormatter"</span><span class="token operator">:</span> <span class="token string">"HookyQR.beautify"</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,Dt,W,Rt,Vt,M,me=`<code class="language-json"><span class="token property">"[django-html]"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"editor.defaultFormatter"</span><span class="token operator">:</span> <span class="token string">"HookyQR.beautify"</span><span class="token punctuation">,</span>
  <span class="token property">"editor.formatOnSave"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">"editor.tabSize"</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,Ht,C,X,$t,At,N,ge=`<code class="language-json"><span class="token property">"emmet.includeLanguages"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"django-html"</span><span class="token operator">:</span> <span class="token string">"html"</span>
<span class="token punctuation">&#125;</span></code>`,et,Y,Ft,at,w,Mt,T,Nt,Yt,B,qt;return{c(){r=a("p"),v=o("This post consolidates the information I got the information from a couple of "),m=a("abbr"),E=o("SO"),c=o(" answers."),g=u(),i=a("ol"),q=a("li"),y=a("p"),it=o("Install the "),j=a("a"),ct=o("Django"),ut=o(" extension. It will give you some snippets, and syntax higlighting. But most important, it will add the "),Q=a("code"),dt=o("django-html"),ft=o(" filetype to "),H=a("abbr"),ht=o("VSC"),mt=u(),z=a("li"),x=a("p"),gt=o("Install the "),P=a("a"),_t=o("Beautify"),kt=o(" extension. This will replace Prettier for those specific files"),vt=u(),J=a("li"),U=a("p"),yt=o("Open the User settings, and switch to JSON mode. You will be adding a few settings manually"),wt=u(),S=a("li"),I=a("p"),bt=o("The "),Z=a("code"),Et=o("files.associations"),jt=o(" block could be already in your settings. If it isn\u2019t, you need to add it. Otherwise add the following associations to it"),xt=u(),$=a("pre"),Pt=u(),O=a("li"),G=a("p"),St=o("Tell Beautify about Django templates"),It=u(),A=a("pre"),Ot=u(),k=a("li"),L=a("p"),Lt=o("Replace Prettier with Beautify for Django templates. Note that "),K=a("code"),Ct=o('"prettier.disableLanguages": ["django-html"],'),Tt=o(" is no longer supported by VSC."),Bt=u(),F=a("pre"),Dt=u(),W=a("p"),Rt=o("You can of course add more settings to that particular block; for example, mine is"),Vt=u(),M=a("pre"),Ht=u(),C=a("li"),X=a("p"),$t=o("If you like emmet, which is now part of VSC by default, also add"),At=u(),N=a("pre"),et=u(),Y=a("h2"),Ft=o("Prior art"),at=u(),w=a("p"),Mt=o("I got some of the information from "),T=a("a"),Nt=o("this SO answer"),Yt=o(" and "),B=a("a"),qt=o("this other SO answer"),this.h()},l(p){r=s(p,"P",{});var _=n(r);v=l(_,"This post consolidates the information I got the information from a couple of "),m=s(_,"ABBR",{title:!0});var zt=n(m);E=l(zt,"SO"),zt.forEach(e),c=l(_," answers."),_.forEach(e),g=d(p),i=s(p,"OL",{});var h=n(i);q=s(h,"LI",{});var Jt=n(q);y=s(Jt,"P",{});var D=n(y);it=l(D,"Install the "),j=s(D,"A",{href:!0,rel:!0});var Ut=n(j);ct=l(Ut,"Django"),Ut.forEach(e),ut=l(D," extension. It will give you some snippets, and syntax higlighting. But most important, it will add the "),Q=s(D,"CODE",{});var Zt=n(Q);dt=l(Zt,"django-html"),Zt.forEach(e),ft=l(D," filetype to "),H=s(D,"ABBR",{title:!0});var Gt=n(H);ht=l(Gt,"VSC"),Gt.forEach(e),D.forEach(e),Jt.forEach(e),mt=d(h),z=s(h,"LI",{});var Kt=n(z);x=s(Kt,"P",{});var st=n(x);gt=l(st,"Install the "),P=s(st,"A",{href:!0,rel:!0});var Wt=n(P);_t=l(Wt,"Beautify"),Wt.forEach(e),kt=l(st," extension. This will replace Prettier for those specific files"),st.forEach(e),Kt.forEach(e),vt=d(h),J=s(h,"LI",{});var Xt=n(J);U=s(Xt,"P",{});var te=n(U);yt=l(te,"Open the User settings, and switch to JSON mode. You will be adding a few settings manually"),te.forEach(e),Xt.forEach(e),wt=d(h),S=s(h,"LI",{});var nt=n(S);I=s(nt,"P",{});var ot=n(I);bt=l(ot,"The "),Z=s(ot,"CODE",{});var ee=n(Z);Et=l(ee,"files.associations"),ee.forEach(e),jt=l(ot," block could be already in your settings. If it isn\u2019t, you need to add it. Otherwise add the following associations to it"),ot.forEach(e),xt=d(nt),$=s(nt,"PRE",{class:!0});var _e=n($);_e.forEach(e),nt.forEach(e),Pt=d(h),O=s(h,"LI",{});var lt=n(O);G=s(lt,"P",{});var ae=n(G);St=l(ae,"Tell Beautify about Django templates"),ae.forEach(e),It=d(lt),A=s(lt,"PRE",{class:!0});var ke=n(A);ke.forEach(e),lt.forEach(e),Ot=d(h),k=s(h,"LI",{});var b=n(k);L=s(b,"P",{});var rt=n(L);Lt=l(rt,"Replace Prettier with Beautify for Django templates. Note that "),K=s(rt,"CODE",{});var se=n(K);Ct=l(se,'"prettier.disableLanguages": ["django-html"],'),se.forEach(e),Tt=l(rt," is no longer supported by VSC."),rt.forEach(e),Bt=d(b),F=s(b,"PRE",{class:!0});var ve=n(F);ve.forEach(e),Dt=d(b),W=s(b,"P",{});var ne=n(W);Rt=l(ne,"You can of course add more settings to that particular block; for example, mine is"),ne.forEach(e),Vt=d(b),M=s(b,"PRE",{class:!0});var ye=n(M);ye.forEach(e),b.forEach(e),Ht=d(h),C=s(h,"LI",{});var pt=n(C);X=s(pt,"P",{});var oe=n(X);$t=l(oe,"If you like emmet, which is now part of VSC by default, also add"),oe.forEach(e),At=d(pt),N=s(pt,"PRE",{class:!0});var we=n(N);we.forEach(e),pt.forEach(e),h.forEach(e),et=d(p),Y=s(p,"H2",{});var le=n(Y);Ft=l(le,"Prior art"),le.forEach(e),at=d(p),w=s(p,"P",{});var tt=n(w);Mt=l(tt,"I got some of the information from "),T=s(tt,"A",{href:!0,rel:!0});var re=n(T);Nt=l(re,"this SO answer"),re.forEach(e),Yt=l(tt," and "),B=s(tt,"A",{href:!0,rel:!0});var pe=n(B);qt=l(pe,"this other SO answer"),pe.forEach(e),tt.forEach(e),this.h()},h(){f(m,"title","Stack Overflow"),f(j,"href","https://github.com/vscode-django/vscode-django"),f(j,"rel","nofollow"),f(H,"title","Visual Studio Code"),f(P,"href","https://github.com/HookyQR/VSCodeBeautify"),f(P,"rel","nofollow"),f($,"class","language-json"),f(A,"class","language-json"),f(F,"class","language-json"),f(M,"class","language-json"),f(N,"class","language-json"),f(T,"href","https://stackoverflow.com/questions/42170561/vscode-html-autoformat-on-django-template"),f(T,"rel","nofollow"),f(B,"href","https://stackoverflow.com/questions/55175822/there-is-no-document-formatter-for-django-html-files-installed/63091040#63091040"),f(B,"rel","nofollow")},m(p,_){R(p,r,_),t(r,v),t(r,m),t(m,E),t(r,c),R(p,g,_),R(p,i,_),t(i,q),t(q,y),t(y,it),t(y,j),t(j,ct),t(y,ut),t(y,Q),t(Q,dt),t(y,ft),t(y,H),t(H,ht),t(i,mt),t(i,z),t(z,x),t(x,gt),t(x,P),t(P,_t),t(x,kt),t(i,vt),t(i,J),t(J,U),t(U,yt),t(i,wt),t(i,S),t(S,I),t(I,bt),t(I,Z),t(Z,Et),t(I,jt),t(S,xt),t(S,$),$.innerHTML=de,t(i,Pt),t(i,O),t(O,G),t(G,St),t(O,It),t(O,A),A.innerHTML=fe,t(i,Ot),t(i,k),t(k,L),t(L,Lt),t(L,K),t(K,Ct),t(L,Tt),t(k,Bt),t(k,F),F.innerHTML=he,t(k,Dt),t(k,W),t(W,Rt),t(k,Vt),t(k,M),M.innerHTML=me,t(i,Ht),t(i,C),t(C,X),t(X,$t),t(C,At),t(C,N),N.innerHTML=ge,R(p,et,_),R(p,Y,_),t(Y,Ft),R(p,at,_),R(p,w,_),t(w,Mt),t(w,T),t(T,Nt),t(w,Yt),t(w,B),t(B,qt)},p:Te,d(p){p&&e(r),p&&e(g),p&&e(i),p&&e(et),p&&e(Y),p&&e(at),p&&e(w)}}}function Re(V){let r,v;const m=[V[0],ue];let E={$$slots:{default:[De]},$$scope:{ctx:V}};for(let c=0;c<m.length;c+=1)E=Qt(E,m[c]);return r=new Be({props:E}),{c(){xe(r.$$.fragment)},l(c){Pe(r.$$.fragment,c)},m(c,g){Se(r,c,g),v=!0},p(c,[g]){const i=g&1?Ie(m,[g&1&&ie(c[0]),g&0&&ie(ue)]):{};g&2&&(i.$$scope={dirty:g,ctx:c}),r.$set(i)},i(c){v||(Oe(r.$$.fragment,c),v=!0)},o(c){Le(r.$$.fragment,c),v=!1},d(c){Ce(r,c)}}}const ue={excerpt:"Prettier autoformatting screws up Django html templates in Visual Studio Code. For example, it puts tags on the same line when they shouldn't be. The fix is pretty simple and involves a couple of different formatting extension.",date:"2022-03-24T00:00:00.000Z",published:!0,archived:!1,prev:"installing-python-on-mac-os-x-in-2022",next:"reordering-audio-files-in-a-fat-usb-stick",title:"Fixing autoformatting Django templates in Visual Studio Co",permalink:"/blog/fixing-autoformatting-django-templates-in-visual-studio-code",tags:["django","python","visual studio code"]};function Ve(V,r,v){return V.$$set=m=>{v(0,r=Qt(Qt({},r),ce(m)))},r=ce(r),[r]}class Fe extends be{constructor(r){super(),Ee(this,r,Ve,Re,je,{})}}export{Fe as default,ue as metadata};
