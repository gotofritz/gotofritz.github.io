import{S as J,i as P,s as D,D as v,x as R,y as L,z as O,A as S,B as I,r as T,p as q,C as z,L as j,e as f,t as d,k as A,c as h,a as k,h as m,d as r,m as B,b as F,g as x,F as i,n as H}from"../../chunks/index-5f3bee99.js";import{P as M}from"../../chunks/_post-1d61ba86.js";import"../../chunks/Header-5bd94491.js";function G(u){let e,o,n,c,a,s,g,$,_,l,b=`<code class="language-js"><span class="token string">"I &amp;lt;feeling> that"</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;lt;(.+?)></span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"$$1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//won't work - will produce ""I $1 that""</span>

<span class="token string">"I &amp;lt;feeling> that"</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;lt;(.+?)></span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"$$$1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//works - "I $feeling that"</span></code>`;return{c(){e=f("p"),o=d("I.e., "),n=f("code"),c=d("$$"),a=d(", not "),s=f("code"),g=d("\\$"),$=d(". In other words, the escape character for the RegExp \u201Clanguage\u201D is $, even within Javascript, not the standard slash \\"),_=A(),l=f("pre"),this.h()},l(t){e=h(t,"P",{});var p=k(e);o=m(p,"I.e., "),n=h(p,"CODE",{});var w=k(n);c=m(w,"$$"),w.forEach(r),a=m(p,", not "),s=h(p,"CODE",{});var E=k(s);g=m(E,"\\$"),E.forEach(r),$=m(p,". In other words, the escape character for the RegExp \u201Clanguage\u201D is $, even within Javascript, not the standard slash \\"),p.forEach(r),_=B(t),l=h(t,"PRE",{class:!0});var C=k(l);C.forEach(r),this.h()},h(){F(l,"class","language-js")},m(t,p){x(t,e,p),i(e,o),i(e,n),i(n,c),i(e,a),i(e,s),i(s,g),i(e,$),x(t,_,p),x(t,l,p),l.innerHTML=b},p:H,d(t){t&&r(e),t&&r(_),t&&r(l)}}}function K(u){let e,o;const n=[u[0],y];let c={$$slots:{default:[G]},$$scope:{ctx:u}};for(let a=0;a<n.length;a+=1)c=v(c,n[a]);return e=new M({props:c}),{c(){R(e.$$.fragment)},l(a){L(e.$$.fragment,a)},m(a,s){O(e,a,s),o=!0},p(a,[s]){const g=s&1?S(n,[s&1&&I(a[0]),s&0&&I(y)]):{};s&2&&(g.$$scope={dirty:s,ctx:a}),e.$set(g)},i(a){o||(T(e.$$.fragment,a),o=!0)},o(a){q(e.$$.fragment,a),o=!1},d(a){z(e,a)}}}const y={date:"2012-03-28 20:52",title:"Escaping $ in replace strings in Javascript",excerpt:"To have a $ in your replace strings in Javascript regular expressions, it needs to be escaped with another $",tags:["js"],published:!0,prev:"change-title-cmd-window",next:"simple-voice-recording-mac"};function N(u,e,o){return u.$$set=n=>{o(0,e=v(v({},e),j(n)))},e=j(e),[e]}class W extends J{constructor(e){super(),P(this,e,N,K,D,{})}}export{W as default,y as metadata};
